/*							-- DO NOT EDIT --
 * This file has been generated by smidump
 * version 0.3.0 for the scli package.
 *
 * Derived from SNMP-TARGET-MIB:
 *   This MIB module defines MIB objects which provide
 *   mechanisms to remotely configure the parameters used
 *   by an SNMP entity for the generation of SNMP messages.
 *
 * Revision 1998-08-04 00:00:
 *   Clarifications, published as
 *   RFC2573.
 *
 * Revision 1997-07-14 00:00:
 *   The initial revision, published as RFC2273.
 *
 * $Id$
 */

#ifndef _SNMP_TARGET_MIB_H_
#define _SNMP_TARGET_MIB_H_

#include "g_snmp.h"

/*
 * Tables to map enumerations to strings and vice versa.
 */

#define SNMP_TARGET_MIB_SNMPTARGETADDRSTORAGETYPE_OTHER	1
#define SNMP_TARGET_MIB_SNMPTARGETADDRSTORAGETYPE_VOLATILE	2
#define SNMP_TARGET_MIB_SNMPTARGETADDRSTORAGETYPE_NONVOLATILE	3
#define SNMP_TARGET_MIB_SNMPTARGETADDRSTORAGETYPE_PERMANENT	4
#define SNMP_TARGET_MIB_SNMPTARGETADDRSTORAGETYPE_READONLY	5

extern GSnmpEnum const snmp_target_mib_enums_snmpTargetAddrStorageType[];

#define SNMP_TARGET_MIB_SNMPTARGETADDRROWSTATUS_ACTIVE	1
#define SNMP_TARGET_MIB_SNMPTARGETADDRROWSTATUS_NOTINSERVICE	2
#define SNMP_TARGET_MIB_SNMPTARGETADDRROWSTATUS_NOTREADY	3
#define SNMP_TARGET_MIB_SNMPTARGETADDRROWSTATUS_CREATEANDGO	4
#define SNMP_TARGET_MIB_SNMPTARGETADDRROWSTATUS_CREATEANDWAIT	5
#define SNMP_TARGET_MIB_SNMPTARGETADDRROWSTATUS_DESTROY	6

extern GSnmpEnum const snmp_target_mib_enums_snmpTargetAddrRowStatus[];

#define SNMP_TARGET_MIB_SNMPTARGETPARAMSSECURITYLEVEL_NOAUTHNOPRIV	1
#define SNMP_TARGET_MIB_SNMPTARGETPARAMSSECURITYLEVEL_AUTHNOPRIV	2
#define SNMP_TARGET_MIB_SNMPTARGETPARAMSSECURITYLEVEL_AUTHPRIV	3

extern GSnmpEnum const snmp_target_mib_enums_snmpTargetParamsSecurityLevel[];

#define SNMP_TARGET_MIB_SNMPTARGETPARAMSSTORAGETYPE_OTHER	1
#define SNMP_TARGET_MIB_SNMPTARGETPARAMSSTORAGETYPE_VOLATILE	2
#define SNMP_TARGET_MIB_SNMPTARGETPARAMSSTORAGETYPE_NONVOLATILE	3
#define SNMP_TARGET_MIB_SNMPTARGETPARAMSSTORAGETYPE_PERMANENT	4
#define SNMP_TARGET_MIB_SNMPTARGETPARAMSSTORAGETYPE_READONLY	5

extern GSnmpEnum const snmp_target_mib_enums_snmpTargetParamsStorageType[];

#define SNMP_TARGET_MIB_SNMPTARGETPARAMSROWSTATUS_ACTIVE	1
#define SNMP_TARGET_MIB_SNMPTARGETPARAMSROWSTATUS_NOTINSERVICE	2
#define SNMP_TARGET_MIB_SNMPTARGETPARAMSROWSTATUS_NOTREADY	3
#define SNMP_TARGET_MIB_SNMPTARGETPARAMSROWSTATUS_CREATEANDGO	4
#define SNMP_TARGET_MIB_SNMPTARGETPARAMSROWSTATUS_CREATEANDWAIT	5
#define SNMP_TARGET_MIB_SNMPTARGETPARAMSROWSTATUS_DESTROY	6

extern GSnmpEnum const snmp_target_mib_enums_snmpTargetParamsRowStatus[];


/*
 * C type definitions for SNMP-TARGET-MIB::snmpTargetObjects.
 */

#define SNMP_TARGET_MIB_SNMPTARGETSPINLOCK	0x1 
#define SNMP_TARGET_MIB_SNMPUNAVAILABLECONTEXTS	0x2 
#define SNMP_TARGET_MIB_SNMPUNKNOWNCONTEXTS	0x4 

typedef struct {
    gint32   *snmpTargetSpinLock;
    guint32  *snmpUnavailableContexts;
    guint32  *snmpUnknownContexts;
} snmp_target_mib_snmpTargetObjects_t;

extern snmp_target_mib_snmpTargetObjects_t *
snmp_target_mib_new_snmpTargetObjects(void);

extern void
snmp_target_mib_get_snmpTargetObjects(GSnmpSession *s, snmp_target_mib_snmpTargetObjects_t **snmpTargetObjects, gint mask);

extern void
snmp_target_mib_set_snmpTargetObjects(GSnmpSession *s, snmp_target_mib_snmpTargetObjects_t *snmpTargetObjects, gint mask);

extern void
snmp_target_mib_free_snmpTargetObjects(snmp_target_mib_snmpTargetObjects_t *snmpTargetObjects);

/*
 * C type definitions for SNMP-TARGET-MIB::snmpTargetAddrEntry.
 */

#define SNMP_TARGET_MIB_SNMPTARGETADDRTDOMAIN	0x1 
#define SNMP_TARGET_MIB_SNMPTARGETADDRTADDRESS	0x2 
#define SNMP_TARGET_MIB_SNMPTARGETADDRTIMEOUT	0x4 
#define SNMP_TARGET_MIB_SNMPTARGETADDRRETRYCOUNT	0x8 
#define SNMP_TARGET_MIB_SNMPTARGETADDRTAGLIST	0x10 
#define SNMP_TARGET_MIB_SNMPTARGETADDRPARAMS	0x20 
#define SNMP_TARGET_MIB_SNMPTARGETADDRSTORAGETYPE	0x40 
#define SNMP_TARGET_MIB_SNMPTARGETADDRROWSTATUS	0x80 

typedef struct {
    guchar   snmpTargetAddrName[32];
    guint16  _snmpTargetAddrNameLength;	/* (1..32) */
    guint32  *snmpTargetAddrTDomain;
    guint16  _snmpTargetAddrTDomainLength;	/* (0..128) */
    guchar   *snmpTargetAddrTAddress;
    guint16  _snmpTargetAddrTAddressLength;	/* (1..255) */
    gint32   *snmpTargetAddrTimeout;
    gint32   *snmpTargetAddrRetryCount;
    guchar   *snmpTargetAddrTagList;
    guint16  _snmpTargetAddrTagListLength;	/* (0..255) */
    guchar   *snmpTargetAddrParams;
    guint16  _snmpTargetAddrParamsLength;	/* (1..32) */
    gint32   *snmpTargetAddrStorageType;
    gint32   *snmpTargetAddrRowStatus;
} snmp_target_mib_snmpTargetAddrEntry_t;

extern void
snmp_target_mib_get_snmpTargetAddrTable(GSnmpSession *s, snmp_target_mib_snmpTargetAddrEntry_t ***snmpTargetAddrEntry, gint mask);

extern void
snmp_target_mib_free_snmpTargetAddrTable(snmp_target_mib_snmpTargetAddrEntry_t **snmpTargetAddrEntry);

extern snmp_target_mib_snmpTargetAddrEntry_t *
snmp_target_mib_new_snmpTargetAddrEntry(void);

extern void
snmp_target_mib_get_snmpTargetAddrEntry(GSnmpSession *s, snmp_target_mib_snmpTargetAddrEntry_t **snmpTargetAddrEntry, guchar *snmpTargetAddrName, guint16 _snmpTargetAddrNameLength, gint mask);

extern void
snmp_target_mib_set_snmpTargetAddrEntry(GSnmpSession *s, snmp_target_mib_snmpTargetAddrEntry_t *snmpTargetAddrEntry, gint mask);

extern void
snmp_target_mib_free_snmpTargetAddrEntry(snmp_target_mib_snmpTargetAddrEntry_t *snmpTargetAddrEntry);

/*
 * C type definitions for SNMP-TARGET-MIB::snmpTargetParamsEntry.
 */

#define SNMP_TARGET_MIB_SNMPTARGETPARAMSMPMODEL	0x1 
#define SNMP_TARGET_MIB_SNMPTARGETPARAMSSECURITYMODEL	0x2 
#define SNMP_TARGET_MIB_SNMPTARGETPARAMSSECURITYNAME	0x4 
#define SNMP_TARGET_MIB_SNMPTARGETPARAMSSECURITYLEVEL	0x8 
#define SNMP_TARGET_MIB_SNMPTARGETPARAMSSTORAGETYPE	0x10 
#define SNMP_TARGET_MIB_SNMPTARGETPARAMSROWSTATUS	0x20 

typedef struct {
    guchar   snmpTargetParamsName[32];
    guint16  _snmpTargetParamsNameLength;	/* (1..32) */
    gint32   *snmpTargetParamsMPModel;
    gint32   *snmpTargetParamsSecurityModel;
    guchar   *snmpTargetParamsSecurityName;
    guint16  _snmpTargetParamsSecurityNameLength;	/* (0..255) */
    gint32   *snmpTargetParamsSecurityLevel;
    gint32   *snmpTargetParamsStorageType;
    gint32   *snmpTargetParamsRowStatus;
} snmp_target_mib_snmpTargetParamsEntry_t;

extern void
snmp_target_mib_get_snmpTargetParamsTable(GSnmpSession *s, snmp_target_mib_snmpTargetParamsEntry_t ***snmpTargetParamsEntry, gint mask);

extern void
snmp_target_mib_free_snmpTargetParamsTable(snmp_target_mib_snmpTargetParamsEntry_t **snmpTargetParamsEntry);

extern snmp_target_mib_snmpTargetParamsEntry_t *
snmp_target_mib_new_snmpTargetParamsEntry(void);

extern void
snmp_target_mib_get_snmpTargetParamsEntry(GSnmpSession *s, snmp_target_mib_snmpTargetParamsEntry_t **snmpTargetParamsEntry, guchar *snmpTargetParamsName, guint16 _snmpTargetParamsNameLength, gint mask);

extern void
snmp_target_mib_set_snmpTargetParamsEntry(GSnmpSession *s, snmp_target_mib_snmpTargetParamsEntry_t *snmpTargetParamsEntry, gint mask);

extern void
snmp_target_mib_free_snmpTargetParamsEntry(snmp_target_mib_snmpTargetParamsEntry_t *snmpTargetParamsEntry);


#endif /* _SNMP_TARGET_MIB_H_ */
