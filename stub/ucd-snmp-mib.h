/*							-- DO NOT EDIT --
 * This file has been generated by smidump
 * version 0.3.1 for the scli package.
 *
 * Options:
 *   --scli-include='version|extEntry|prEntry|laEntry'
 *
 * Derived from UCD-SNMP-MIB:
 *   This file defines the private UCD SNMP MIB extensions.
 *
 * Revision 2001-01-17 00:00:
 *   [Revision added by libsmi due to a LAST-UPDATED clause.]
 *
 * Revision 2002-01-04 00:00:
 *   Introduced LongDisplayString which is needed for allow
 *   for long configuration settings. Rewrote some definitions
 *   to make them more precise.
 *
 * Revision 2001-01-17 00:00:
 *   Added raw CPU and IO counters.
 *
 * Revision 1999-12-09 00:00:
 *   SMIv2 version converted from older MIB definitions.
 *
 * $Id$
 */

#ifndef _UCD_SNMP_MIB_H_
#define _UCD_SNMP_MIB_H_

#include "g_snmp.h"

/*
 * Tables to map enumerations to strings and vice versa.
 */

#define UCD_SNMP_MIB_PRERRORFLAG_OK    0
#define UCD_SNMP_MIB_PRERRORFLAG_ERROR 1

extern GSnmpEnum const ucd_snmp_mib_enums_prErrorFlag[];

#define UCD_SNMP_MIB_VERSIONDODEBUGGING_DISABLED 0
#define UCD_SNMP_MIB_VERSIONDODEBUGGING_ENABLED  1

extern GSnmpEnum const ucd_snmp_mib_enums_versionDoDebugging[];


/*
 * C type definitions for UCD-SNMP-MIB::prEntry.
 */

#define UCD_SNMP_MIB_PRINDEX      (1 << 0) 
#define UCD_SNMP_MIB_PRNAMES      (1 << 1) 
#define UCD_SNMP_MIB_PRMIN        (1 << 2) 
#define UCD_SNMP_MIB_PRMAX        (1 << 3) 
#define UCD_SNMP_MIB_PRCOUNT      (1 << 4) 
#define UCD_SNMP_MIB_PRERRORFLAG  (1 << 5) 
#define UCD_SNMP_MIB_PRERRMESSAGE (1 << 6) 
#define UCD_SNMP_MIB_PRERRFIX     (1 << 7) 
#define UCD_SNMP_MIB_PRERRFIXCMD  (1 << 8) 

typedef struct {
    gint32   prIndex;
    guchar   *prNames;
#define UCD_SNMP_MIB_PRNAMESMINLENGTH 0
#define UCD_SNMP_MIB_PRNAMESMAXLENGTH 255
    guint16  _prNamesLength;
    gint32   *prMin;
    gint32   *prMax;
    gint32   *prCount;
    gint32   *prErrorFlag;
    guchar   *prErrMessage;
#define UCD_SNMP_MIB_PRERRMESSAGEMINLENGTH 0
#define UCD_SNMP_MIB_PRERRMESSAGEMAXLENGTH 255
    guint16  _prErrMessageLength;
    gint32   *prErrFix;
    guchar   *prErrFixCmd;
#define UCD_SNMP_MIB_PRERRFIXCMDMINLENGTH 0
#define UCD_SNMP_MIB_PRERRFIXCMDMAXLENGTH 255
    guint16  _prErrFixCmdLength;
} ucd_snmp_mib_prEntry_t;

extern void
ucd_snmp_mib_get_prTable(GSnmpSession *s, ucd_snmp_mib_prEntry_t ***prEntry, gint mask);

extern void
ucd_snmp_mib_free_prTable(ucd_snmp_mib_prEntry_t **prEntry);

extern ucd_snmp_mib_prEntry_t *
ucd_snmp_mib_new_prEntry(void);

extern void
ucd_snmp_mib_get_prEntry(GSnmpSession *s, ucd_snmp_mib_prEntry_t **prEntry, gint32 prIndex, gint mask);

extern void
ucd_snmp_mib_set_prEntry(GSnmpSession *s, ucd_snmp_mib_prEntry_t *prEntry, gint mask);

extern void
ucd_snmp_mib_free_prEntry(ucd_snmp_mib_prEntry_t *prEntry);

extern void
ucd_snmp_mib_set_prErrFix(GSnmpSession *s, gint32 prIndex, gint32 prErrFix);

/*
 * C type definitions for UCD-SNMP-MIB::extEntry.
 */

#define UCD_SNMP_MIB_EXTINDEX     (1 << 0) 
#define UCD_SNMP_MIB_EXTNAMES     (1 << 1) 
#define UCD_SNMP_MIB_EXTCOMMAND   (1 << 2) 
#define UCD_SNMP_MIB_EXTRESULT    (1 << 3) 
#define UCD_SNMP_MIB_EXTOUTPUT    (1 << 4) 
#define UCD_SNMP_MIB_EXTERRFIX    (1 << 5) 
#define UCD_SNMP_MIB_EXTERRFIXCMD (1 << 6) 

typedef struct {
    gint32   extIndex;
    guchar   *extNames;
#define UCD_SNMP_MIB_EXTNAMESMINLENGTH 0
#define UCD_SNMP_MIB_EXTNAMESMAXLENGTH 255
    guint16  _extNamesLength;
    guchar   *extCommand;
#define UCD_SNMP_MIB_EXTCOMMANDMINLENGTH 0
#define UCD_SNMP_MIB_EXTCOMMANDMAXLENGTH 255
    guint16  _extCommandLength;
    gint32   *extResult;
    guchar   *extOutput;
#define UCD_SNMP_MIB_EXTOUTPUTMINLENGTH 0
#define UCD_SNMP_MIB_EXTOUTPUTMAXLENGTH 255
    guint16  _extOutputLength;
    gint32   *extErrFix;
    guchar   *extErrFixCmd;
#define UCD_SNMP_MIB_EXTERRFIXCMDMINLENGTH 0
#define UCD_SNMP_MIB_EXTERRFIXCMDMAXLENGTH 255
    guint16  _extErrFixCmdLength;
} ucd_snmp_mib_extEntry_t;

extern void
ucd_snmp_mib_get_extTable(GSnmpSession *s, ucd_snmp_mib_extEntry_t ***extEntry, gint mask);

extern void
ucd_snmp_mib_free_extTable(ucd_snmp_mib_extEntry_t **extEntry);

extern ucd_snmp_mib_extEntry_t *
ucd_snmp_mib_new_extEntry(void);

extern void
ucd_snmp_mib_get_extEntry(GSnmpSession *s, ucd_snmp_mib_extEntry_t **extEntry, gint32 extIndex, gint mask);

extern void
ucd_snmp_mib_set_extEntry(GSnmpSession *s, ucd_snmp_mib_extEntry_t *extEntry, gint mask);

extern void
ucd_snmp_mib_free_extEntry(ucd_snmp_mib_extEntry_t *extEntry);

extern void
ucd_snmp_mib_set_extErrFix(GSnmpSession *s, gint32 extIndex, gint32 extErrFix);

/*
 * C type definitions for UCD-SNMP-MIB::laEntry.
 */

#define UCD_SNMP_MIB_LAINDEX      (1 << 0) 
#define UCD_SNMP_MIB_LANAMES      (1 << 1) 
#define UCD_SNMP_MIB_LALOAD       (1 << 2) 
#define UCD_SNMP_MIB_LACONFIG     (1 << 3) 
#define UCD_SNMP_MIB_LALOADINT    (1 << 4) 
#define UCD_SNMP_MIB_LALOADFLOAT  (1 << 5) 
#define UCD_SNMP_MIB_LAERRORFLAG  (1 << 6) 
#define UCD_SNMP_MIB_LAERRMESSAGE (1 << 7) 

typedef struct {
    gint32   laIndex;
    guchar   *laNames;
#define UCD_SNMP_MIB_LANAMESMINLENGTH 0
#define UCD_SNMP_MIB_LANAMESMAXLENGTH 255
    guint16  _laNamesLength;
    guchar   *laLoad;
#define UCD_SNMP_MIB_LALOADMINLENGTH 0
#define UCD_SNMP_MIB_LALOADMAXLENGTH 255
    guint16  _laLoadLength;
    guchar   *laConfig;
#define UCD_SNMP_MIB_LACONFIGMINLENGTH 0
#define UCD_SNMP_MIB_LACONFIGMAXLENGTH 255
    guint16  _laConfigLength;
    gint32   *laLoadInt;
    guchar   *laLoadFloat;
#define UCD_SNMP_MIB_LALOADFLOATLENGTH 7
    gint32   *laErrorFlag;
    guchar   *laErrMessage;
#define UCD_SNMP_MIB_LAERRMESSAGEMINLENGTH 0
#define UCD_SNMP_MIB_LAERRMESSAGEMAXLENGTH 255
    guint16  _laErrMessageLength;
} ucd_snmp_mib_laEntry_t;

extern void
ucd_snmp_mib_get_laTable(GSnmpSession *s, ucd_snmp_mib_laEntry_t ***laEntry, gint mask);

extern void
ucd_snmp_mib_free_laTable(ucd_snmp_mib_laEntry_t **laEntry);

extern ucd_snmp_mib_laEntry_t *
ucd_snmp_mib_new_laEntry(void);

extern void
ucd_snmp_mib_get_laEntry(GSnmpSession *s, ucd_snmp_mib_laEntry_t **laEntry, gint32 laIndex, gint mask);

extern void
ucd_snmp_mib_free_laEntry(ucd_snmp_mib_laEntry_t *laEntry);

/*
 * C type definitions for UCD-SNMP-MIB::version.
 */

#define UCD_SNMP_MIB_VERSIONINDEX            (1 << 0) 
#define UCD_SNMP_MIB_VERSIONTAG              (1 << 1) 
#define UCD_SNMP_MIB_VERSIONDATE             (1 << 2) 
#define UCD_SNMP_MIB_VERSIONCDATE            (1 << 3) 
#define UCD_SNMP_MIB_VERSIONIDENT            (1 << 4) 
#define UCD_SNMP_MIB_VERSIONCONFIGUREOPTIONS (1 << 5) 
#define UCD_SNMP_MIB_VERSIONCLEARCACHE       (1 << 6) 
#define UCD_SNMP_MIB_VERSIONUPDATECONFIG     (1 << 7) 
#define UCD_SNMP_MIB_VERSIONRESTARTAGENT     (1 << 8) 
#define UCD_SNMP_MIB_VERSIONDODEBUGGING      (1 << 9) 

typedef struct {
    gint32   *versionIndex;
    guchar   *versionTag;
#define UCD_SNMP_MIB_VERSIONTAGMINLENGTH 0
#define UCD_SNMP_MIB_VERSIONTAGMAXLENGTH 255
    guint16  _versionTagLength;
    guchar   *versionDate;
#define UCD_SNMP_MIB_VERSIONDATEMINLENGTH 0
#define UCD_SNMP_MIB_VERSIONDATEMAXLENGTH 255
    guint16  _versionDateLength;
    guchar   *versionCDate;
#define UCD_SNMP_MIB_VERSIONCDATEMINLENGTH 0
#define UCD_SNMP_MIB_VERSIONCDATEMAXLENGTH 255
    guint16  _versionCDateLength;
    guchar   *versionIdent;
#define UCD_SNMP_MIB_VERSIONIDENTMINLENGTH 0
#define UCD_SNMP_MIB_VERSIONIDENTMAXLENGTH 255
    guint16  _versionIdentLength;
    guchar   *versionConfigureOptions;
#define UCD_SNMP_MIB_VERSIONCONFIGUREOPTIONSMINLENGTH 0
#define UCD_SNMP_MIB_VERSIONCONFIGUREOPTIONSMAXLENGTH 1023
    guint16  _versionConfigureOptionsLength;
    gint32   *versionClearCache;
    gint32   *versionUpdateConfig;
    gint32   *versionRestartAgent;
    gint32   *versionDoDebugging;
} ucd_snmp_mib_version_t;

extern ucd_snmp_mib_version_t *
ucd_snmp_mib_new_version(void);

extern void
ucd_snmp_mib_get_version(GSnmpSession *s, ucd_snmp_mib_version_t **version, gint mask);

extern void
ucd_snmp_mib_set_version(GSnmpSession *s, ucd_snmp_mib_version_t *version, gint mask);

extern void
ucd_snmp_mib_free_version(ucd_snmp_mib_version_t *version);

extern void
ucd_snmp_mib_set_versionClearCache(GSnmpSession *s, gint32 versionClearCache);

extern void
ucd_snmp_mib_set_versionUpdateConfig(GSnmpSession *s, gint32 versionUpdateConfig);

extern void
ucd_snmp_mib_set_versionRestartAgent(GSnmpSession *s, gint32 versionRestartAgent);

extern void
ucd_snmp_mib_set_versionDoDebugging(GSnmpSession *s, gint32 versionDoDebugging);


#endif /* _UCD_SNMP_MIB_H_ */
