/*							-- DO NOT EDIT --
 * This file has been generated by smidump
 * version 0.3.0 for the scli package.
 *
 * Derived from DISMAN-SCHEDULE-MIB:
 *   This MIB module defines a MIB which provides mechanisms to
 *   schedule SNMP set operations periodically or at specific
 *   points in time.
 *
 * Revision 2002-01-07 00:00:
 *   Revised version, published as RFC 3231.
 *   
 *   This revision introduces a new object type called
 *   schedTriggers.  Created new conformance and compliance
 *   statements that take care of the new schedTriggers object.
 *   
 *   Several clarifications have been added to remove ambiguities
 *   that were discovered and reported by implementors.
 *
 * Revision 1998-11-17 18:00:
 *   Initial version, published as RFC 2591.
 *
 * $Id$
 */

#ifndef _DISMAN_SCHEDULE_MIB_H_
#define _DISMAN_SCHEDULE_MIB_H_

#include "g_snmp.h"

/*
 * Tables to map enumerations to strings and vice versa.
 */

#define DISMAN_SCHEDULE_MIB_SCHEDTYPE_PERIODIC	1
#define DISMAN_SCHEDULE_MIB_SCHEDTYPE_CALENDAR	2
#define DISMAN_SCHEDULE_MIB_SCHEDTYPE_ONESHOT	3

extern GSnmpEnum const disman_schedule_mib_enums_schedType[];

#define DISMAN_SCHEDULE_MIB_SCHEDADMINSTATUS_ENABLED	1
#define DISMAN_SCHEDULE_MIB_SCHEDADMINSTATUS_DISABLED	2

extern GSnmpEnum const disman_schedule_mib_enums_schedAdminStatus[];

#define DISMAN_SCHEDULE_MIB_SCHEDOPERSTATUS_ENABLED	1
#define DISMAN_SCHEDULE_MIB_SCHEDOPERSTATUS_DISABLED	2
#define DISMAN_SCHEDULE_MIB_SCHEDOPERSTATUS_FINISHED	3

extern GSnmpEnum const disman_schedule_mib_enums_schedOperStatus[];

#define DISMAN_SCHEDULE_MIB_SCHEDLASTFAILURE_NORESPONSE	-1
#define DISMAN_SCHEDULE_MIB_SCHEDLASTFAILURE_NOERROR	0
#define DISMAN_SCHEDULE_MIB_SCHEDLASTFAILURE_TOOBIG	1
#define DISMAN_SCHEDULE_MIB_SCHEDLASTFAILURE_NOSUCHNAME	2
#define DISMAN_SCHEDULE_MIB_SCHEDLASTFAILURE_BADVALUE	3
#define DISMAN_SCHEDULE_MIB_SCHEDLASTFAILURE_READONLY	4
#define DISMAN_SCHEDULE_MIB_SCHEDLASTFAILURE_GENERR	5
#define DISMAN_SCHEDULE_MIB_SCHEDLASTFAILURE_NOACCESS	6
#define DISMAN_SCHEDULE_MIB_SCHEDLASTFAILURE_WRONGTYPE	7
#define DISMAN_SCHEDULE_MIB_SCHEDLASTFAILURE_WRONGLENGTH	8
#define DISMAN_SCHEDULE_MIB_SCHEDLASTFAILURE_WRONGENCODING	9
#define DISMAN_SCHEDULE_MIB_SCHEDLASTFAILURE_WRONGVALUE	10
#define DISMAN_SCHEDULE_MIB_SCHEDLASTFAILURE_NOCREATION	11
#define DISMAN_SCHEDULE_MIB_SCHEDLASTFAILURE_INCONSISTENTVALUE	12
#define DISMAN_SCHEDULE_MIB_SCHEDLASTFAILURE_RESOURCEUNAVAILABLE	13
#define DISMAN_SCHEDULE_MIB_SCHEDLASTFAILURE_COMMITFAILED	14
#define DISMAN_SCHEDULE_MIB_SCHEDLASTFAILURE_UNDOFAILED	15
#define DISMAN_SCHEDULE_MIB_SCHEDLASTFAILURE_AUTHORIZATIONERROR	16
#define DISMAN_SCHEDULE_MIB_SCHEDLASTFAILURE_NOTWRITABLE	17
#define DISMAN_SCHEDULE_MIB_SCHEDLASTFAILURE_INCONSISTENTNAME	18

extern GSnmpEnum const disman_schedule_mib_enums_schedLastFailure[];

#define DISMAN_SCHEDULE_MIB_SCHEDSTORAGETYPE_OTHER	1
#define DISMAN_SCHEDULE_MIB_SCHEDSTORAGETYPE_VOLATILE	2
#define DISMAN_SCHEDULE_MIB_SCHEDSTORAGETYPE_NONVOLATILE	3
#define DISMAN_SCHEDULE_MIB_SCHEDSTORAGETYPE_PERMANENT	4
#define DISMAN_SCHEDULE_MIB_SCHEDSTORAGETYPE_READONLY	5

extern GSnmpEnum const disman_schedule_mib_enums_schedStorageType[];

#define DISMAN_SCHEDULE_MIB_SCHEDROWSTATUS_ACTIVE	1
#define DISMAN_SCHEDULE_MIB_SCHEDROWSTATUS_NOTINSERVICE	2
#define DISMAN_SCHEDULE_MIB_SCHEDROWSTATUS_NOTREADY	3
#define DISMAN_SCHEDULE_MIB_SCHEDROWSTATUS_CREATEANDGO	4
#define DISMAN_SCHEDULE_MIB_SCHEDROWSTATUS_CREATEANDWAIT	5
#define DISMAN_SCHEDULE_MIB_SCHEDROWSTATUS_DESTROY	6

extern GSnmpEnum const disman_schedule_mib_enums_schedRowStatus[];


/*
 * C type definitions for DISMAN-SCHEDULE-MIB::schedObjects.
 */

#define DISMAN_SCHEDULE_MIB_SCHEDLOCALTIME	0x1 

typedef struct {
#define DISMAN_SCHEDULE_MIB_SCHEDLOCALTIMELENGTH 11
    guchar   *schedLocalTime;
} disman_schedule_mib_schedObjects_t;

extern disman_schedule_mib_schedObjects_t *
disman_schedule_mib_new_schedObjects(void);

extern void
disman_schedule_mib_get_schedObjects(GSnmpSession *s, disman_schedule_mib_schedObjects_t **schedObjects, gint mask);

extern void
disman_schedule_mib_free_schedObjects(disman_schedule_mib_schedObjects_t *schedObjects);

/*
 * C type definitions for DISMAN-SCHEDULE-MIB::schedEntry.
 */

#define DISMAN_SCHEDULE_MIB_SCHEDDESCR	0x1 
#define DISMAN_SCHEDULE_MIB_SCHEDINTERVAL	0x2 
#define DISMAN_SCHEDULE_MIB_SCHEDWEEKDAY	0x4 
#define DISMAN_SCHEDULE_MIB_SCHEDMONTH	0x8 
#define DISMAN_SCHEDULE_MIB_SCHEDDAY	0x10 
#define DISMAN_SCHEDULE_MIB_SCHEDHOUR	0x20 
#define DISMAN_SCHEDULE_MIB_SCHEDMINUTE	0x40 
#define DISMAN_SCHEDULE_MIB_SCHEDCONTEXTNAME	0x80 
#define DISMAN_SCHEDULE_MIB_SCHEDVARIABLE	0x100 
#define DISMAN_SCHEDULE_MIB_SCHEDVALUE	0x200 
#define DISMAN_SCHEDULE_MIB_SCHEDTYPE	0x400 
#define DISMAN_SCHEDULE_MIB_SCHEDADMINSTATUS	0x800 
#define DISMAN_SCHEDULE_MIB_SCHEDOPERSTATUS	0x1000 
#define DISMAN_SCHEDULE_MIB_SCHEDFAILURES	0x2000 
#define DISMAN_SCHEDULE_MIB_SCHEDLASTFAILURE	0x4000 
#define DISMAN_SCHEDULE_MIB_SCHEDLASTFAILED	0x8000 
#define DISMAN_SCHEDULE_MIB_SCHEDSTORAGETYPE	0x10000 
#define DISMAN_SCHEDULE_MIB_SCHEDROWSTATUS	0x20000 
#define DISMAN_SCHEDULE_MIB_SCHEDTRIGGERS	0x40000 

typedef struct {
    guchar   schedOwner[32];
    guint16  _schedOwnerLength;	/* (0..32) */
    guchar   schedName[32];
    guint16  _schedNameLength;	/* (1..32) */
    guchar   *schedDescr;
    guint16  _schedDescrLength;	/* (0..255) */
    guint32  *schedInterval;
    guchar   *schedWeekDay;
    guint16  _schedWeekDayLength;	/* (0..1) */
    guchar   *schedMonth;
    guint16  _schedMonthLength;	/* (0..2) */
    guchar   *schedDay;
    guint16  _schedDayLength;	/* (0..8) */
    guchar   *schedHour;
    guint16  _schedHourLength;	/* (0..3) */
    guchar   *schedMinute;
    guint16  _schedMinuteLength;	/* (0..8) */
    guchar   *schedContextName;
    guint16  _schedContextNameLength;	/* (0..32) */
    guint32  *schedVariable;
    guint16  _schedVariableLength;	/* (0..128) */
    gint32   *schedValue;
    gint32   *schedType;
    gint32   *schedAdminStatus;
    gint32   *schedOperStatus;
    guint32  *schedFailures;
    gint32   *schedLastFailure;
    guchar   *schedLastFailed;
    guint16  _schedLastFailedLength;	/* (8..11) */
    gint32   *schedStorageType;
    gint32   *schedRowStatus;
    guint32  *schedTriggers;
} disman_schedule_mib_schedEntry_t;

extern void
disman_schedule_mib_get_schedTable(GSnmpSession *s, disman_schedule_mib_schedEntry_t ***schedEntry, gint mask);

extern void
disman_schedule_mib_free_schedTable(disman_schedule_mib_schedEntry_t **schedEntry);

extern disman_schedule_mib_schedEntry_t *
disman_schedule_mib_new_schedEntry(void);

extern void
disman_schedule_mib_get_schedEntry(GSnmpSession *s, disman_schedule_mib_schedEntry_t **schedEntry, guchar *schedOwner, guint16 _schedOwnerLength, guchar *schedName, guint16 _schedNameLength, gint mask);

extern void
disman_schedule_mib_set_schedEntry(GSnmpSession *s, disman_schedule_mib_schedEntry_t *schedEntry, gint mask);

extern void
disman_schedule_mib_free_schedEntry(disman_schedule_mib_schedEntry_t *schedEntry);


#endif /* _DISMAN_SCHEDULE_MIB_H_ */
