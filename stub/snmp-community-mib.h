/*							-- DO NOT EDIT --
 * This file has been generated by smidump
 * version 0.2.17 for the scli package.
 *
 * Derived from SNMP-COMMUNITY-MIB:
 *   This MIB module defines objects to help support coexistence
 *   between SNMPv1, SNMPv2c, and SNMPv3.
 *
 * Revision 2000-03-06 00:00:
 *   This version published as RFC 2576.
 *
 * Revision 1999-05-13 00:00:
 *   The Initial Revision
 *
 * $Id$
 */

#ifndef _SNMP_COMMUNITY_MIB_H_
#define _SNMP_COMMUNITY_MIB_H_

#include "g_snmp.h"

/*
 * Tables to map enumerations to strings and vice versa.
 */

#define SNMP_COMMUNITY_MIB_SNMPCOMMUNITYSTORAGETYPE_OTHER	1
#define SNMP_COMMUNITY_MIB_SNMPCOMMUNITYSTORAGETYPE_VOLATILE	2
#define SNMP_COMMUNITY_MIB_SNMPCOMMUNITYSTORAGETYPE_NONVOLATILE	3
#define SNMP_COMMUNITY_MIB_SNMPCOMMUNITYSTORAGETYPE_PERMANENT	4
#define SNMP_COMMUNITY_MIB_SNMPCOMMUNITYSTORAGETYPE_READONLY	5

extern GSnmpEnum const snmp_community_mib_enums_snmpCommunityStorageType[];

#define SNMP_COMMUNITY_MIB_SNMPCOMMUNITYSTATUS_ACTIVE	1
#define SNMP_COMMUNITY_MIB_SNMPCOMMUNITYSTATUS_NOTINSERVICE	2
#define SNMP_COMMUNITY_MIB_SNMPCOMMUNITYSTATUS_NOTREADY	3
#define SNMP_COMMUNITY_MIB_SNMPCOMMUNITYSTATUS_CREATEANDGO	4
#define SNMP_COMMUNITY_MIB_SNMPCOMMUNITYSTATUS_CREATEANDWAIT	5
#define SNMP_COMMUNITY_MIB_SNMPCOMMUNITYSTATUS_DESTROY	6

extern GSnmpEnum const snmp_community_mib_enums_snmpCommunityStatus[];


/*
 * C type definitions for SNMP-COMMUNITY-MIB::snmpCommunityEntry.
 */

#define SNMP_COMMUNITY_MIB_SNMPCOMMUNITYNAME	0x1 
#define SNMP_COMMUNITY_MIB_SNMPCOMMUNITYSECURITYNAME	0x2 
#define SNMP_COMMUNITY_MIB_SNMPCOMMUNITYCONTEXTENGINEID	0x4 
#define SNMP_COMMUNITY_MIB_SNMPCOMMUNITYCONTEXTNAME	0x8 
#define SNMP_COMMUNITY_MIB_SNMPCOMMUNITYTRANSPORTTAG	0x10 
#define SNMP_COMMUNITY_MIB_SNMPCOMMUNITYSTORAGETYPE	0x20 
#define SNMP_COMMUNITY_MIB_SNMPCOMMUNITYSTATUS	0x40 

typedef struct {
#define SNMP_COMMUNITY_MIB_SNMPCOMMUNITYINDEXLENGTH 32
    guchar   snmpCommunityIndex[SNMP_COMMUNITY_MIB_SNMPCOMMUNITYINDEXLENGTH];
    gsize    _snmpCommunityIndexLength;
    guchar   *snmpCommunityName;
    gsize    _snmpCommunityNameLength;
    guchar   *snmpCommunitySecurityName;
    gsize    _snmpCommunitySecurityNameLength;
    guchar   *snmpCommunityContextEngineID;
    gsize    _snmpCommunityContextEngineIDLength;
    guchar   *snmpCommunityContextName;
    gsize    _snmpCommunityContextNameLength;
    guchar   *snmpCommunityTransportTag;
    gsize    _snmpCommunityTransportTagLength;
    gint32   *snmpCommunityStorageType;
    gint32   *snmpCommunityStatus;
} snmp_community_mib_snmpCommunityEntry_t;

extern void
snmp_community_mib_get_snmpCommunityTable(GSnmpSession *s, snmp_community_mib_snmpCommunityEntry_t ***snmpCommunityEntry, gint mask);

extern void
snmp_community_mib_free_snmpCommunityTable(snmp_community_mib_snmpCommunityEntry_t **snmpCommunityEntry);

extern snmp_community_mib_snmpCommunityEntry_t *
snmp_community_mib_new_snmpCommunityEntry(void);

extern void
snmp_community_mib_get_snmpCommunityEntry(GSnmpSession *s, snmp_community_mib_snmpCommunityEntry_t **snmpCommunityEntry, guchar *snmpCommunityIndex, gsize _snmpCommunityIndexLength, gint mask);

extern void
snmp_community_mib_set_snmpCommunityEntry(GSnmpSession *s, snmp_community_mib_snmpCommunityEntry_t *snmpCommunityEntry, gint mask);

extern void
snmp_community_mib_free_snmpCommunityEntry(snmp_community_mib_snmpCommunityEntry_t *snmpCommunityEntry);

/*
 * C type definitions for SNMP-COMMUNITY-MIB::snmpTargetAddrExtEntry.
 */

#define SNMP_COMMUNITY_MIB_SNMPTARGETADDRTMASK	0x1 
#define SNMP_COMMUNITY_MIB_SNMPTARGETADDRMMS	0x2 

typedef struct {
#define SNMP_TARGET_MIB_SNMPTARGETADDRNAMELENGTH 32
    guchar   snmpTargetAddrName[SNMP_TARGET_MIB_SNMPTARGETADDRNAMELENGTH];
    gsize    _snmpTargetAddrNameLength;
    guchar   *snmpTargetAddrTMask;
    gsize    _snmpTargetAddrTMaskLength;
    gint32   *snmpTargetAddrMMS;
} snmp_community_mib_snmpTargetAddrExtEntry_t;

extern void
snmp_community_mib_get_snmpTargetAddrExtTable(GSnmpSession *s, snmp_community_mib_snmpTargetAddrExtEntry_t ***snmpTargetAddrExtEntry, gint mask);

extern void
snmp_community_mib_free_snmpTargetAddrExtTable(snmp_community_mib_snmpTargetAddrExtEntry_t **snmpTargetAddrExtEntry);

extern snmp_community_mib_snmpTargetAddrExtEntry_t *
snmp_community_mib_new_snmpTargetAddrExtEntry(void);

extern void
snmp_community_mib_get_snmpTargetAddrExtEntry(GSnmpSession *s, snmp_community_mib_snmpTargetAddrExtEntry_t **snmpTargetAddrExtEntry, guchar *snmpTargetAddrName, gsize _snmpTargetAddrNameLength, gint mask);

extern void
snmp_community_mib_set_snmpTargetAddrExtEntry(GSnmpSession *s, snmp_community_mib_snmpTargetAddrExtEntry_t *snmpTargetAddrExtEntry, gint mask);

extern void
snmp_community_mib_free_snmpTargetAddrExtEntry(snmp_community_mib_snmpTargetAddrExtEntry_t *snmpTargetAddrExtEntry);


#endif /* _SNMP_COMMUNITY_MIB_H_ */
