/*							-- DO NOT EDIT --
 * This file has been generated by smidump
 * version 0.3.0 for the scli package.
 *
 * Derived from ATM-MIB:
 *   This is the MIB Module for ATM and AAL5-related
 *   objects for managing ATM interfaces, ATM virtual
 *   links, ATM cross-connects, AAL5 entities, and
 *   and AAL5 connections.
 *
 * Revision 1998-10-19 12:00:
 *   The initial revision of this module was published
 *   as RFC 1695. Key revisions include:
 *   o  Textual Conventions and OBJECT IDENTITIES have
 *      been moved to a separate MIB module.
 *   o  Applicability of objects to PVCs, SVCs and Soft
 *      PVCs has been clarified.
 *   o  DEFVAL clauses have been added.
 *   o  The relationship of ifIndex values with different
 *      layers and sublayers related to ATM has been
 *      clarified.
 *   o  atmTrafficQosClass has been deprecated
 *      and replaced with atmServiceCategory.
 *   o  atmInterfaceCurrentMaxVpiBits and
 *      atmInterfaceCurrentMaxVciBits have been added with
 *      a description on their relationship with other
 *      objects.
 *   o  atmInterfaceAddressType and atmInterfaceAdminAddress
 *      have been deprecated and replaced by
 *      atmInterfaceSubscrAddress.
 *   o  atmInterfaceTCAlarmState has been clarified.
 *   o  atmTrafficDescrParamIndexNext has been introduced
 *      in order to provide a manager a free
 *      atmTrafficDescrParamIndex value.
 *   o  The atmTrafficFrameDiscard capability has been added.
 *   o  A connection topology type (atmVpl/VclCastType) and
 *      a call control type (atmVpl/VclConnKind) have been
 *      added.
 *   o  aal2 has been added to atmVccAalType.
 *
 * Revision 1994-06-07 22:45:
 *   The RFC1695 version of this MIB module.
 *
 * $Id$
 */

#ifndef _ATM_MIB_H_
#define _ATM_MIB_H_

#include "g_snmp.h"

/*
 * Tables to map enumerations to strings and vice versa.
 */

#define ATM_MIB_ATMINTERFACEADDRESSTYPE_PRIVATE	1
#define ATM_MIB_ATMINTERFACEADDRESSTYPE_NSAPE164	2
#define ATM_MIB_ATMINTERFACEADDRESSTYPE_NATIVEE164	3
#define ATM_MIB_ATMINTERFACEADDRESSTYPE_OTHER	4

extern GSnmpEnum const atm_mib_enums_atmInterfaceAddressType[];


/*
 * C type definitions for ATM-MIB::atmInterfaceConfEntry.
 */

#define ATM_MIB_ATMINTERFACEMAXVPCS	0x1 
#define ATM_MIB_ATMINTERFACEMAXVCCS	0x2 
#define ATM_MIB_ATMINTERFACECONFVPCS	0x4 
#define ATM_MIB_ATMINTERFACECONFVCCS	0x8 
#define ATM_MIB_ATMINTERFACEMAXACTIVEVPIBITS	0x10 
#define ATM_MIB_ATMINTERFACEMAXACTIVEVCIBITS	0x20 
#define ATM_MIB_ATMINTERFACEILMIVPI	0x40 
#define ATM_MIB_ATMINTERFACEILMIVCI	0x80 
#define ATM_MIB_ATMINTERFACEADDRESSTYPE	0x100 
#define ATM_MIB_ATMINTERFACEADMINADDRESS	0x200 
#define ATM_MIB_ATMINTERFACEMYNEIGHBORIPADDRESS	0x400 
#define ATM_MIB_ATMINTERFACEMYNEIGHBORIFNAME	0x800 
#define ATM_MIB_ATMINTERFACECURRENTMAXVPIBITS	0x1000 
#define ATM_MIB_ATMINTERFACECURRENTMAXVCIBITS	0x2000 
#define ATM_MIB_ATMINTERFACESUBSCRADDRESS	0x4000 

typedef struct {
    gint32   ifIndex;
    gint32   *atmInterfaceMaxVpcs;
    gint32   *atmInterfaceMaxVccs;
    gint32   *atmInterfaceConfVpcs;
    gint32   *atmInterfaceConfVccs;
    gint32   *atmInterfaceMaxActiveVpiBits;
    gint32   *atmInterfaceMaxActiveVciBits;
    gint32   *atmInterfaceIlmiVpi;
    gint32   *atmInterfaceIlmiVci;
    gint32   *atmInterfaceAddressType;
    guchar   *atmInterfaceAdminAddress;
    guint16  _atmInterfaceAdminAddressLength;	/* (0..40) */
#define ATM_MIB_ATMINTERFACEMYNEIGHBORIPADDRESSLENGTH 4
    guchar   *atmInterfaceMyNeighborIpAddress;
    guchar   *atmInterfaceMyNeighborIfName;
    guint16  _atmInterfaceMyNeighborIfNameLength;	/* (0..255) */
    gint32   *atmInterfaceCurrentMaxVpiBits;
    gint32   *atmInterfaceCurrentMaxVciBits;
    guchar   *atmInterfaceSubscrAddress;
    guint16  _atmInterfaceSubscrAddressLength;	/* (0..40) */
} atm_mib_atmInterfaceConfEntry_t;

extern void
atm_mib_get_atmInterfaceConfTable(GSnmpSession *s, atm_mib_atmInterfaceConfEntry_t ***atmInterfaceConfEntry, gint mask);

extern void
atm_mib_free_atmInterfaceConfTable(atm_mib_atmInterfaceConfEntry_t **atmInterfaceConfEntry);

extern atm_mib_atmInterfaceConfEntry_t *
atm_mib_new_atmInterfaceConfEntry(void);

extern void
atm_mib_get_atmInterfaceConfEntry(GSnmpSession *s, atm_mib_atmInterfaceConfEntry_t **atmInterfaceConfEntry, gint32 ifIndex, gint mask);

extern void
atm_mib_set_atmInterfaceConfEntry(GSnmpSession *s, atm_mib_atmInterfaceConfEntry_t *atmInterfaceConfEntry, gint mask);

extern void
atm_mib_free_atmInterfaceConfEntry(atm_mib_atmInterfaceConfEntry_t *atmInterfaceConfEntry);


#endif /* _ATM_MIB_H_ */
