/*							-- DO NOT EDIT --
 * Generated by smidump version 0.4.8:
 *   smidump -f scli JACOBS-RPL-MIB
 *
 * Derived from JACOBS-RPL-MIB:
 *   The MIB module for monitoring nodes implementing the IPv6
 *   routing protocol for low power and lossy networks (RPL).
 *   
 *   Copyright (c) 2011 IETF Trust and the persons identified as
 *   authors of the code.  All rights reserved.
 *   
 *   Redistribution and use in source and binary forms, with or
 *   without modification, is permitted pursuant to, and subject
 *   to the license terms contained in, the Simplified BSD
 *   License set forth in Section 4.c of the IETF Trust's
 *   Legal Provisions Relating to IETF Documents
 *   (http://trustee.ietf.org/license-info).
 *
 * Revision 2011-03-10 00:00:
 *   Initial version, published as RFC XXXX.
 *
 * $Id$
 */

#ifndef _JACOBS_RPL_MIB_H_
#define _JACOBS_RPL_MIB_H_

#include "gsnmp.h"

G_BEGIN_DECLS

/*
 * Tables to map enumerations to strings and vice versa.
 */

#define JACOBS_RPL_MIB_RPLRPLINSTANCEDAOACKNOWLEDGEMENT_NOPE 1

extern GNetSnmpEnum const jacobs_rpl_mib_enums_rplRPLInstanceDAOAcknowledgement[];

#define JACOBS_RPL_MIB_RPLDODAGSTATE_OTHER      0
#define JACOBS_RPL_MIB_RPLDODAGSTATE_ASSOCIATED 1
#define JACOBS_RPL_MIB_RPLDODAGSTATE_GROUNDED   2
#define JACOBS_RPL_MIB_RPLDODAGSTATE_FLOATING   3

extern GNetSnmpEnum const jacobs_rpl_mib_enums_rplDodagState[];

#define JACOBS_RPL_MIB_RPLDISMODE_SILENT 1
#define JACOBS_RPL_MIB_RPLDISMODE_SEND   2

extern GNetSnmpEnum const jacobs_rpl_mib_enums_RplDISMode[];

#define JACOBS_RPL_MIB_RPLMODEOFOPERATION_NODOWNWARDROUTES               0
#define JACOBS_RPL_MIB_RPLMODEOFOPERATION_NONSTORINGMODE                 1
#define JACOBS_RPL_MIB_RPLMODEOFOPERATION_STORINGWITHOUTMULTICASTSUPPORT 2
#define JACOBS_RPL_MIB_RPLMODEOFOPERATION_STORINGWITHMULTICASTSUPPORT    3

extern GNetSnmpEnum const jacobs_rpl_mib_enums_RplModeOfOperation[];


/*
 * C type definitions for JACOBS-RPL-MIB::rplGeneral.
 */

#define JACOBS_RPL_MIB_RPLDEFAULTDISMODE (1 << 0) 

typedef struct {
    gint32   *rplDefaultDISMode;     /* rw JACOBS-RPL-MIB::RplDISMode */
} jacobs_rpl_mib_rplGeneral_t;

extern jacobs_rpl_mib_rplGeneral_t *
jacobs_rpl_mib_new_rplGeneral(void);

extern void
jacobs_rpl_mib_get_rplGeneral(GNetSnmp *s, jacobs_rpl_mib_rplGeneral_t **rplGeneral, gint64 mask, GError **error);

extern void
jacobs_rpl_mib_set_rplGeneral(GNetSnmp *s, jacobs_rpl_mib_rplGeneral_t *rplGeneral, gint64 mask, GError **error);

extern void
jacobs_rpl_mib_free_rplGeneral(jacobs_rpl_mib_rplGeneral_t *rplGeneral);

/*
 * C type definitions for JACOBS-RPL-MIB::rplActive.
 */

#define JACOBS_RPL_MIB_RPLACTIVEINSTANCE             (1 << 0) 
#define JACOBS_RPL_MIB_RPLACTIVEDODAG                (1 << 1) 
#define JACOBS_RPL_MIB_RPLACTIVEDODAGDAOSEQUENCE     (1 << 2) 
#define JACOBS_RPL_MIB_RPLACTIVEDODAGTRIGGERSEQUENCE (1 << 3) 

typedef struct {
    guint32  *rplActiveInstance;                 /* rw JACOBS-RPL-MIB::RplInstanceID */
    guchar   *rplActiveDodag;                    /* rw INET-ADDRESS-MIB::InetAddressIPv6 */
#define JACOBS_RPL_MIB_RPLACTIVEDODAGLENGTH 16
    guint32  *rplActiveDodagDAOSequence;         /* ro */
    guint32  *rplActiveDodagTriggerSequence;     /* rw */
} jacobs_rpl_mib_rplActive_t;

extern jacobs_rpl_mib_rplActive_t *
jacobs_rpl_mib_new_rplActive(void);

extern void
jacobs_rpl_mib_get_rplActive(GNetSnmp *s, jacobs_rpl_mib_rplActive_t **rplActive, gint64 mask, GError **error);

extern void
jacobs_rpl_mib_set_rplActive(GNetSnmp *s, jacobs_rpl_mib_rplActive_t *rplActive, gint64 mask, GError **error);

extern void
jacobs_rpl_mib_free_rplActive(jacobs_rpl_mib_rplActive_t *rplActive);

/*
 * C type definitions for JACOBS-RPL-MIB::rplOCPEntry.
 */

#define JACOBS_RPL_MIB_RPLOCPENABLED (1 << 0) 

typedef struct {
    guint32  rplOCPCodepoint;    /* na JACOBS-RPL-MIB::RplObjectiveCodePoint */
    gint32   *rplOCPEnabled;     /* rw SNMPv2-TC::TruthValue */
} jacobs_rpl_mib_rplOCPEntry_t;

extern void
jacobs_rpl_mib_get_rplOCPTable(GNetSnmp *s, jacobs_rpl_mib_rplOCPEntry_t ***rplOCPEntry, gint64 mask, GError **error);

extern void
jacobs_rpl_mib_free_rplOCPTable(jacobs_rpl_mib_rplOCPEntry_t **rplOCPEntry);

extern jacobs_rpl_mib_rplOCPEntry_t *
jacobs_rpl_mib_new_rplOCPEntry(void);

extern void
jacobs_rpl_mib_get_rplOCPEntry(GNetSnmp *s, jacobs_rpl_mib_rplOCPEntry_t **rplOCPEntry, guint32 rplOCPCodepoint, gint64 mask, GError **error);

extern void
jacobs_rpl_mib_set_rplOCPEntry(GNetSnmp *s, jacobs_rpl_mib_rplOCPEntry_t *rplOCPEntry, gint64 mask, GError **error);

extern void
jacobs_rpl_mib_free_rplOCPEntry(jacobs_rpl_mib_rplOCPEntry_t *rplOCPEntry);

/*
 * C type definitions for JACOBS-RPL-MIB::rplRPLInstanceEntry.
 */

#define JACOBS_RPL_MIB_RPLRPLINSTANCEOCP                (1 << 0) 
#define JACOBS_RPL_MIB_RPLRPLINSTANCEDISMODE            (1 << 1) 
#define JACOBS_RPL_MIB_RPLRPLINSTANCEDAOACKNOWLEDGEMENT (1 << 2) 
#define JACOBS_RPL_MIB_RPLRPLINSTANCEMODEOFOPERATION    (1 << 3) 

typedef struct {
    guint32  rplRPLInstanceID;                      /* na JACOBS-RPL-MIB::RplInstanceID */
    guint32  *rplRPLInstanceOCP;                    /* rw JACOBS-RPL-MIB::RplObjectiveCodePoint */
    gint32   *rplRPLInstanceDisMode;                /* rw JACOBS-RPL-MIB::RplDISMode */
    gint32   *rplRPLInstanceDAOAcknowledgement;     /* rw */
    gint32   *rplRPLInstanceModeOfOperation;        /* rw JACOBS-RPL-MIB::RplModeOfOperation */
} jacobs_rpl_mib_rplRPLInstanceEntry_t;

extern void
jacobs_rpl_mib_get_rplRPLInstanceTable(GNetSnmp *s, jacobs_rpl_mib_rplRPLInstanceEntry_t ***rplRPLInstanceEntry, gint64 mask, GError **error);

extern void
jacobs_rpl_mib_free_rplRPLInstanceTable(jacobs_rpl_mib_rplRPLInstanceEntry_t **rplRPLInstanceEntry);

extern jacobs_rpl_mib_rplRPLInstanceEntry_t *
jacobs_rpl_mib_new_rplRPLInstanceEntry(void);

extern void
jacobs_rpl_mib_get_rplRPLInstanceEntry(GNetSnmp *s, jacobs_rpl_mib_rplRPLInstanceEntry_t **rplRPLInstanceEntry, guint32 rplRPLInstanceID, gint64 mask, GError **error);

extern void
jacobs_rpl_mib_set_rplRPLInstanceEntry(GNetSnmp *s, jacobs_rpl_mib_rplRPLInstanceEntry_t *rplRPLInstanceEntry, gint64 mask, GError **error);

extern void
jacobs_rpl_mib_free_rplRPLInstanceEntry(jacobs_rpl_mib_rplRPLInstanceEntry_t *rplRPLInstanceEntry);

/*
 * C type definitions for JACOBS-RPL-MIB::rplDodagEntry.
 */

#define JACOBS_RPL_MIB_RPLDODAGVERSION            (1 << 0) 
#define JACOBS_RPL_MIB_RPLDODAGRANK               (1 << 1) 
#define JACOBS_RPL_MIB_RPLDODAGSTATE              (1 << 2) 
#define JACOBS_RPL_MIB_RPLDODAGDAODELAY           (1 << 3) 
#define JACOBS_RPL_MIB_RPLDODAGPREFERENCE         (1 << 4) 
#define JACOBS_RPL_MIB_RPLDODAGMINHOPRANKINCREASE (1 << 5) 
#define JACOBS_RPL_MIB_RPLDODAGPATHCONTROLSIZE    (1 << 6) 

typedef struct {
    guint32  rplRPLInstanceID;                /* na JACOBS-RPL-MIB::RplInstanceID */
    guchar   rplDodagRoot[16];                /* na INET-ADDRESS-MIB::InetAddressIPv6 */
#define JACOBS_RPL_MIB_RPLDODAGROOTLENGTH 16
    guint32  *rplDodagVersion;                /* ro JACOBS-RPL-MIB::RplDodagVersionNumber */
    guint32  *rplDodagRank;                   /* ro JACOBS-RPL-MIB::RplRank */
    gint32   *rplDodagState;                  /* ro */
    guint32  *rplDodagDAODelay;               /* ro JACOBS-RPL-MIB::RplDAODelay [milliseconds] */
    guint32  *rplDodagPreference;             /* ro JACOBS-RPL-MIB::RplDodagPreference */
    guint32  *rplDodagMinHopRankIncrease;     /* ro JACOBS-RPL-MIB::RplMinHopRankIncrease */
    guint32  *rplDodagPathControlSize;        /* ro JACOBS-RPL-MIB::RplPathControlSize */
} jacobs_rpl_mib_rplDodagEntry_t;

extern void
jacobs_rpl_mib_get_rplDodagTable(GNetSnmp *s, jacobs_rpl_mib_rplDodagEntry_t ***rplDodagEntry, gint64 mask, GError **error);

extern void
jacobs_rpl_mib_free_rplDodagTable(jacobs_rpl_mib_rplDodagEntry_t **rplDodagEntry);

extern jacobs_rpl_mib_rplDodagEntry_t *
jacobs_rpl_mib_new_rplDodagEntry(void);

extern void
jacobs_rpl_mib_get_rplDodagEntry(GNetSnmp *s, jacobs_rpl_mib_rplDodagEntry_t **rplDodagEntry, guint32 rplRPLInstanceID, guchar *rplDodagRoot, gint64 mask, GError **error);

extern void
jacobs_rpl_mib_free_rplDodagEntry(jacobs_rpl_mib_rplDodagEntry_t *rplDodagEntry);

/*
 * C type definitions for JACOBS-RPL-MIB::rplDodagParentEntry.
 */

#define JACOBS_RPL_MIB_RPLDODAGPARENTIF (1 << 0) 

typedef struct {
    guint32  rplRPLInstanceID;      /* na JACOBS-RPL-MIB::RplInstanceID */
    guchar   rplDodagRoot[16];      /* na INET-ADDRESS-MIB::InetAddressIPv6 */
#define JACOBS_RPL_MIB_RPLDODAGROOTLENGTH 16
    guchar   rplDodagParentID[16];  /* na INET-ADDRESS-MIB::InetAddressIPv6 */
#define JACOBS_RPL_MIB_RPLDODAGPARENTIDLENGTH 16
    gint32   *rplDodagParentIf;     /* ro IF-MIB::InterfaceIndex */
} jacobs_rpl_mib_rplDodagParentEntry_t;

extern void
jacobs_rpl_mib_get_rplDodagParentTable(GNetSnmp *s, jacobs_rpl_mib_rplDodagParentEntry_t ***rplDodagParentEntry, gint64 mask, GError **error);

extern void
jacobs_rpl_mib_free_rplDodagParentTable(jacobs_rpl_mib_rplDodagParentEntry_t **rplDodagParentEntry);

extern jacobs_rpl_mib_rplDodagParentEntry_t *
jacobs_rpl_mib_new_rplDodagParentEntry(void);

extern void
jacobs_rpl_mib_get_rplDodagParentEntry(GNetSnmp *s, jacobs_rpl_mib_rplDodagParentEntry_t **rplDodagParentEntry, guint32 rplRPLInstanceID, guchar *rplDodagRoot, guchar *rplDodagParentID, gint64 mask, GError **error);

extern void
jacobs_rpl_mib_free_rplDodagParentEntry(jacobs_rpl_mib_rplDodagParentEntry_t *rplDodagParentEntry);

/*
 * C type definitions for JACOBS-RPL-MIB::rplDodagChildEntry.
 */

#define JACOBS_RPL_MIB_RPLDODAGCHILDID (1 << 0) 

typedef struct {
    guint32  rplRPLInstanceID;     /* na JACOBS-RPL-MIB::RplInstanceID */
    guchar   rplDodagRoot[16];     /* na INET-ADDRESS-MIB::InetAddressIPv6 */
#define JACOBS_RPL_MIB_RPLDODAGROOTLENGTH 16
    guchar   rplDodagChildID[16];  /* ro INET-ADDRESS-MIB::InetAddressIPv6 */
#define JACOBS_RPL_MIB_RPLDODAGCHILDIDLENGTH 16
} jacobs_rpl_mib_rplDodagChildEntry_t;

extern void
jacobs_rpl_mib_get_rplDodagChildTable(GNetSnmp *s, jacobs_rpl_mib_rplDodagChildEntry_t ***rplDodagChildEntry, gint64 mask, GError **error);

extern void
jacobs_rpl_mib_free_rplDodagChildTable(jacobs_rpl_mib_rplDodagChildEntry_t **rplDodagChildEntry);

extern jacobs_rpl_mib_rplDodagChildEntry_t *
jacobs_rpl_mib_new_rplDodagChildEntry(void);

extern void
jacobs_rpl_mib_get_rplDodagChildEntry(GNetSnmp *s, jacobs_rpl_mib_rplDodagChildEntry_t **rplDodagChildEntry, guint32 rplRPLInstanceID, guchar *rplDodagRoot, guchar *rplDodagChildID, gint64 mask, GError **error);

extern void
jacobs_rpl_mib_free_rplDodagChildEntry(jacobs_rpl_mib_rplDodagChildEntry_t *rplDodagChildEntry);

/*
 * C type definitions for JACOBS-RPL-MIB::rplDodagPrefixEntry.
 */

#define JACOBS_RPL_MIB_RPLDODAGPREFIXIPV6PREFIX       (1 << 0) 
#define JACOBS_RPL_MIB_RPLDODAGPREFIXIPV6PREFIXLENGTH (1 << 1) 

typedef struct {
    guint32  rplRPLInstanceID;                    /* na JACOBS-RPL-MIB::RplInstanceID */
    guchar   rplDodagRoot[16];                    /* na INET-ADDRESS-MIB::InetAddressIPv6 */
#define JACOBS_RPL_MIB_RPLDODAGROOTLENGTH 16
    guchar   rplDodagPrefixIpv6Prefix[16];        /* ro INET-ADDRESS-MIB::InetAddressIPv6 */
#define JACOBS_RPL_MIB_RPLDODAGPREFIXIPV6PREFIXLENGTH 16
    guint32  rplDodagPrefixIpv6PrefixLength;      /* ro INET-ADDRESS-MIB::InetAddressPrefixLength */
} jacobs_rpl_mib_rplDodagPrefixEntry_t;

extern void
jacobs_rpl_mib_get_rplDodagPrefixTable(GNetSnmp *s, jacobs_rpl_mib_rplDodagPrefixEntry_t ***rplDodagPrefixEntry, gint64 mask, GError **error);

extern void
jacobs_rpl_mib_free_rplDodagPrefixTable(jacobs_rpl_mib_rplDodagPrefixEntry_t **rplDodagPrefixEntry);

extern jacobs_rpl_mib_rplDodagPrefixEntry_t *
jacobs_rpl_mib_new_rplDodagPrefixEntry(void);

extern void
jacobs_rpl_mib_get_rplDodagPrefixEntry(GNetSnmp *s, jacobs_rpl_mib_rplDodagPrefixEntry_t **rplDodagPrefixEntry, guint32 rplRPLInstanceID, guchar *rplDodagRoot, guchar *rplDodagPrefixIpv6Prefix, guint32 rplDodagPrefixIpv6PrefixLength, gint64 mask, GError **error);

extern void
jacobs_rpl_mib_free_rplDodagPrefixEntry(jacobs_rpl_mib_rplDodagPrefixEntry_t *rplDodagPrefixEntry);

/*
 * C type definitions for JACOBS-RPL-MIB::rplStats.
 */

#define JACOBS_RPL_MIB_RPLSTATSMEMOVERFLOWS           (1 << 0) 
#define JACOBS_RPL_MIB_RPLSTATSVALIDPARENTFAILURES    (1 << 1) 
#define JACOBS_RPL_MIB_RPLSTATSNOINSTANCEIDS          (1 << 2) 
#define JACOBS_RPL_MIB_RPLSTATSTRIGGEREDLOCALREPAIRS  (1 << 3) 
#define JACOBS_RPL_MIB_RPLSTATSTRIGGEREDGLOBALREPAIRS (1 << 4) 
#define JACOBS_RPL_MIB_RPLSTATSPARSEERRORS            (1 << 5) 
#define JACOBS_RPL_MIB_RPLSTATSNOPARENTSECS           (1 << 6) 
#define JACOBS_RPL_MIB_RPLSTATSACTIVENOPARENTSECS     (1 << 7) 
#define JACOBS_RPL_MIB_RPLSTATSOBITSETDOWNWARDS       (1 << 8) 
#define JACOBS_RPL_MIB_RPLSTATSOBITCLEAREDUPWARDS     (1 << 9) 
#define JACOBS_RPL_MIB_RPLSTATSFBITSET                (1 << 10) 
#define JACOBS_RPL_MIB_RPLSTATSRBITSET                (1 << 11) 

typedef struct {
    guint32  *rplStatsMemOverflows;               /* ro SNMPv2-SMI::Counter32 */
    guint32  *rplStatsValidParentFailures;        /* ro SNMPv2-SMI::Counter32 */
    guint32  *rplStatsNoInstanceIDs;              /* ro SNMPv2-SMI::Counter32 */
    guint32  *rplStatsTriggeredLocalRepairs;      /* ro SNMPv2-SMI::Counter32 */
    guint32  *rplStatsTriggeredGlobalRepairs;     /* ro SNMPv2-SMI::Counter32 */
    guint32  *rplStatsParseErrors;                /* ro SNMPv2-SMI::Counter32 */
    guint32  *rplStatsNoParentSecs;               /* ro SNMPv2-SMI::Counter32 */
    guint32  *rplStatsActiveNoParentSecs;         /* ro SNMPv2-SMI::Counter32 */
    guint32  *rplStatsOBitSetDownwards;           /* ro SNMPv2-SMI::Counter32 */
    guint32  *rplStatsOBitClearedUpwards;         /* ro SNMPv2-SMI::Counter32 */
    guint32  *rplStatsFBitSet;                    /* ro SNMPv2-SMI::Counter32 */
    guint32  *rplStatsRBitSet;                    /* ro SNMPv2-SMI::Counter32 */
} jacobs_rpl_mib_rplStats_t;

extern jacobs_rpl_mib_rplStats_t *
jacobs_rpl_mib_new_rplStats(void);

extern void
jacobs_rpl_mib_get_rplStats(GNetSnmp *s, jacobs_rpl_mib_rplStats_t **rplStats, gint64 mask, GError **error);

extern void
jacobs_rpl_mib_free_rplStats(jacobs_rpl_mib_rplStats_t *rplStats);


G_END_DECLS

#endif /* _JACOBS_RPL_MIB_H_ */
