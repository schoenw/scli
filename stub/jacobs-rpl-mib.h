/*							-- DO NOT EDIT --
 * Generated by smidump version 0.5.0:
 *   smidump -f scli JACOBS-RPL-MIB
 *
 * Derived from JACOBS-RPL-MIB:
 *   The MIB module for monitoring nodes implementing the IPv6
 *   routing protocol for low power and lossy networks (RPL).
 *   
 *   Copyright (c) 2012 IETF Trust and the persons identified as
 *   authors of the code.  All rights reserved.
 *   
 *   Redistribution and use in source and binary forms, with or
 *   without modification, is permitted pursuant to, and subject
 *   to the license terms contained in, the Simplified BSD
 *   License set forth in Section 4.c of the IETF Trust's
 *   Legal Provisions Relating to IETF Documents
 *   (http://trustee.ietf.org/license-info).
 *
 * Revision 2012-10-19 00:00:
 *   Initial version, published as RFC 8888.
 *
 * $Id$
 */

#ifndef _JACOBS_RPL_MIB_H_
#define _JACOBS_RPL_MIB_H_

#include "gsnmp.h"

G_BEGIN_DECLS

/*
 * Tables to map enumerations to strings and vice versa.
 */

#define JACOBS_RPL_MIB_RPLDODAGSTATE_OTHER    0
#define JACOBS_RPL_MIB_RPLDODAGSTATE_GROUNDED 1
#define JACOBS_RPL_MIB_RPLDODAGSTATE_FLOATING 2

extern GNetSnmpEnum const jacobs_rpl_mib_enums_rplDodagState[];

#define JACOBS_RPL_MIB_RPLDISMODE_SILENT 1
#define JACOBS_RPL_MIB_RPLDISMODE_SEND   2

extern GNetSnmpEnum const jacobs_rpl_mib_enums_RplDISMode[];

#define JACOBS_RPL_MIB_RPLMODEOFOPERATION_NODOWNWARDROUTES               0
#define JACOBS_RPL_MIB_RPLMODEOFOPERATION_NONSTORINGMODE                 1
#define JACOBS_RPL_MIB_RPLMODEOFOPERATION_STORINGWITHOUTMULTICASTSUPPORT 2
#define JACOBS_RPL_MIB_RPLMODEOFOPERATION_STORINGWITHMULTICASTSUPPORT    3

extern GNetSnmpEnum const jacobs_rpl_mib_enums_RplModeOfOperation[];


/*
 * C type definitions for JACOBS-RPL-MIB::rplDefaults.
 */

#define JACOBS_RPL_MIB_RPLDEFAULTDISMODE            (1 << 0) 
#define JACOBS_RPL_MIB_RPLDEFAULTDISMESSAGES        (1 << 1) 
#define JACOBS_RPL_MIB_RPLDEFAULTDISTIMEOUT         (1 << 2) 
#define JACOBS_RPL_MIB_RPLDEFAULTDAODELAY           (1 << 3) 
#define JACOBS_RPL_MIB_RPLDEFAULTDAOACKENABLED      (1 << 4) 
#define JACOBS_RPL_MIB_RPLDEFAULTPREFERENCE         (1 << 5) 
#define JACOBS_RPL_MIB_RPLDEFAULTMINHOPRANKINCREASE (1 << 6) 
#define JACOBS_RPL_MIB_RPLDEFAULTMAXRANKINCREASE    (1 << 7) 
#define JACOBS_RPL_MIB_RPLDEFAULTMODEOFOPERATION    (1 << 8) 
#define JACOBS_RPL_MIB_RPLDEFAULTINTERVALDOUBLINGS  (1 << 9) 
#define JACOBS_RPL_MIB_RPLDEFAULTINTERVALMIN        (1 << 10) 
#define JACOBS_RPL_MIB_RPLDEFAULTREDUNDANCYCONSTANT (1 << 11) 

typedef struct {
    gint32   *rplDefaultDISMode;                /* rw JACOBS-RPL-MIB::RplDISMode */
    guint32  *rplDefaultDISMessages;            /* rw */
    guint32  *rplDefaultDISTimeout;             /* rw [seconds] */
    guint32  *rplDefaultDAODelay;               /* rw JACOBS-RPL-MIB::RplDAODelay [milliseconds] */
    gint32   *rplDefaultDAOAckEnabled;          /* rw SNMPv2-TC::TruthValue */
    guint32  *rplDefaultPreference;             /* rw JACOBS-RPL-MIB::RplDodagPreference */
    guint32  *rplDefaultMinHopRankIncrease;     /* rw JACOBS-RPL-MIB::RplMinHopRankIncrease */
    guint32  *rplDefaultMaxRankIncrease;        /* rw */
    gint32   *rplDefaultModeOfOperation;        /* rw JACOBS-RPL-MIB::RplModeOfOperation */
    guint32  *rplDefaultIntervalDoublings;      /* rw */
    guint32  *rplDefaultIntervalMin;            /* rw */
    guint32  *rplDefaultRedundancyConstant;     /* rw */
} jacobs_rpl_mib_rplDefaults_t;

extern jacobs_rpl_mib_rplDefaults_t *
jacobs_rpl_mib_new_rplDefaults(void);

extern void
jacobs_rpl_mib_get_rplDefaults(GNetSnmp *s, jacobs_rpl_mib_rplDefaults_t **rplDefaults, gint64 mask, GError **error);

extern void
jacobs_rpl_mib_set_rplDefaults(GNetSnmp *s, jacobs_rpl_mib_rplDefaults_t *rplDefaults, gint64 mask, GError **error);

extern void
jacobs_rpl_mib_free_rplDefaults(jacobs_rpl_mib_rplDefaults_t *rplDefaults);

/*
 * C type definitions for JACOBS-RPL-MIB::rplActive.
 */

#define JACOBS_RPL_MIB_RPLACTIVEINSTANCE             (1 << 0) 
#define JACOBS_RPL_MIB_RPLACTIVEDODAG                (1 << 1) 
#define JACOBS_RPL_MIB_RPLACTIVEDODAGTRIGGERSEQUENCE (1 << 2) 

typedef struct {
    guint32  *rplActiveInstance;                 /* rw JACOBS-RPL-MIB::RplInstanceID */
    guchar   *rplActiveDodag;                    /* rw INET-ADDRESS-MIB::InetAddressIPv6 */
#define JACOBS_RPL_MIB_RPLACTIVEDODAGLENGTH 16
    guint32  *rplActiveDodagTriggerSequence;     /* rw */
} jacobs_rpl_mib_rplActive_t;

extern jacobs_rpl_mib_rplActive_t *
jacobs_rpl_mib_new_rplActive(void);

extern void
jacobs_rpl_mib_get_rplActive(GNetSnmp *s, jacobs_rpl_mib_rplActive_t **rplActive, gint64 mask, GError **error);

extern void
jacobs_rpl_mib_set_rplActive(GNetSnmp *s, jacobs_rpl_mib_rplActive_t *rplActive, gint64 mask, GError **error);

extern void
jacobs_rpl_mib_free_rplActive(jacobs_rpl_mib_rplActive_t *rplActive);

/*
 * C type definitions for JACOBS-RPL-MIB::rplOCPEntry.
 */

#define JACOBS_RPL_MIB_RPLOCPENABLED (1 << 0) 

typedef struct {
    guint32  rplOCPCodepoint;    /* na JACOBS-RPL-MIB::RplObjectiveCodePoint */
    gint32   *rplOCPEnabled;     /* rw SNMPv2-TC::TruthValue */
} jacobs_rpl_mib_rplOCPEntry_t;

extern void
jacobs_rpl_mib_get_rplOCPTable(GNetSnmp *s, jacobs_rpl_mib_rplOCPEntry_t ***rplOCPEntry, gint64 mask, GError **error);

extern void
jacobs_rpl_mib_free_rplOCPTable(jacobs_rpl_mib_rplOCPEntry_t **rplOCPEntry);

extern jacobs_rpl_mib_rplOCPEntry_t *
jacobs_rpl_mib_new_rplOCPEntry(void);

extern void
jacobs_rpl_mib_get_rplOCPEntry(GNetSnmp *s, jacobs_rpl_mib_rplOCPEntry_t **rplOCPEntry, guint32 rplOCPCodepoint, gint64 mask, GError **error);

extern void
jacobs_rpl_mib_set_rplOCPEntry(GNetSnmp *s, jacobs_rpl_mib_rplOCPEntry_t *rplOCPEntry, gint64 mask, GError **error);

extern void
jacobs_rpl_mib_free_rplOCPEntry(jacobs_rpl_mib_rplOCPEntry_t *rplOCPEntry);

/*
 * C type definitions for JACOBS-RPL-MIB::rplInstanceEntry.
 */

#define JACOBS_RPL_MIB_RPLINSTANCEDISMODE         (1 << 0) 
#define JACOBS_RPL_MIB_RPLINSTANCEDISMESSAGES     (1 << 1) 
#define JACOBS_RPL_MIB_RPLINSTANCEDISTIMEOUT      (1 << 2) 
#define JACOBS_RPL_MIB_RPLINSTANCEMODEOFOPERATION (1 << 3) 

typedef struct {
    guint32  rplInstanceID;                   /* na JACOBS-RPL-MIB::RplInstanceID */
    gint32   *rplInstanceDISMode;             /* ro JACOBS-RPL-MIB::RplDISMode */
    guint32  *rplInstanceDISMessages;         /* ro */
    guint32  *rplInstanceDISTimeout;          /* ro [seconds] */
    gint32   *rplInstanceModeOfOperation;     /* ro JACOBS-RPL-MIB::RplModeOfOperation */
} jacobs_rpl_mib_rplInstanceEntry_t;

extern void
jacobs_rpl_mib_get_rplInstanceTable(GNetSnmp *s, jacobs_rpl_mib_rplInstanceEntry_t ***rplInstanceEntry, gint64 mask, GError **error);

extern void
jacobs_rpl_mib_free_rplInstanceTable(jacobs_rpl_mib_rplInstanceEntry_t **rplInstanceEntry);

extern jacobs_rpl_mib_rplInstanceEntry_t *
jacobs_rpl_mib_new_rplInstanceEntry(void);

extern void
jacobs_rpl_mib_get_rplInstanceEntry(GNetSnmp *s, jacobs_rpl_mib_rplInstanceEntry_t **rplInstanceEntry, guint32 rplInstanceID, gint64 mask, GError **error);

extern void
jacobs_rpl_mib_free_rplInstanceEntry(jacobs_rpl_mib_rplInstanceEntry_t *rplInstanceEntry);

/*
 * C type definitions for JACOBS-RPL-MIB::rplDodagEntry.
 */

#define JACOBS_RPL_MIB_RPLDODAGID                 (1 << 0) 
#define JACOBS_RPL_MIB_RPLDODAGVERSION            (1 << 1) 
#define JACOBS_RPL_MIB_RPLDODAGRANK               (1 << 2) 
#define JACOBS_RPL_MIB_RPLDODAGSTATE              (1 << 3) 
#define JACOBS_RPL_MIB_RPLDODAGOCP                (1 << 4) 
#define JACOBS_RPL_MIB_RPLDODAGDAODELAY           (1 << 5) 
#define JACOBS_RPL_MIB_RPLDODAGDAOACKENABLED      (1 << 6) 
#define JACOBS_RPL_MIB_RPLDODAGPREFERENCE         (1 << 7) 
#define JACOBS_RPL_MIB_RPLDODAGMINHOPRANKINCREASE (1 << 8) 
#define JACOBS_RPL_MIB_RPLDODAGMAXRANKINCREASE    (1 << 9) 
#define JACOBS_RPL_MIB_RPLDODAGINTERVALDOUBLINGS  (1 << 10) 
#define JACOBS_RPL_MIB_RPLDODAGINTERVALMIN        (1 << 11) 
#define JACOBS_RPL_MIB_RPLDODAGREDUNDANCYCONSTANT (1 << 12) 
#define JACOBS_RPL_MIB_RPLDODAGPATHCONTROLSIZE    (1 << 13) 

typedef struct {
    guint32  rplInstanceID;                   /* na JACOBS-RPL-MIB::RplInstanceID */
    guint32  rplDodagIndex;                   /* na */
    guchar   *rplDodagID;                     /* ro INET-ADDRESS-MIB::InetAddressIPv6 */
#define JACOBS_RPL_MIB_RPLDODAGIDLENGTH 16
    guint32  *rplDodagVersion;                /* ro JACOBS-RPL-MIB::RplDodagVersionNumber */
    guint32  *rplDodagRank;                   /* ro JACOBS-RPL-MIB::RplRank */
    gint32   *rplDodagState;                  /* ro */
    guint32  *rplDodagOCP;                    /* ro JACOBS-RPL-MIB::RplObjectiveCodePoint */
    guint32  *rplDodagDAODelay;               /* ro JACOBS-RPL-MIB::RplDAODelay [milliseconds] */
    gint32   *rplDodagDAOAckEnabled;          /* ro SNMPv2-TC::TruthValue */
    guint32  *rplDodagPreference;             /* ro JACOBS-RPL-MIB::RplDodagPreference */
    guint32  *rplDodagMinHopRankIncrease;     /* ro JACOBS-RPL-MIB::RplMinHopRankIncrease */
    guint32  *rplDodagMaxRankIncrease;        /* ro */
    guint32  *rplDodagIntervalDoublings;      /* ro */
    guint32  *rplDodagIntervalMin;            /* ro */
    guint32  *rplDodagRedundancyConstant;     /* ro */
    guint32  *rplDodagPathControlSize;        /* ro JACOBS-RPL-MIB::RplPathControlSize */
} jacobs_rpl_mib_rplDodagEntry_t;

extern void
jacobs_rpl_mib_get_rplDodagTable(GNetSnmp *s, jacobs_rpl_mib_rplDodagEntry_t ***rplDodagEntry, gint64 mask, GError **error);

extern void
jacobs_rpl_mib_free_rplDodagTable(jacobs_rpl_mib_rplDodagEntry_t **rplDodagEntry);

extern jacobs_rpl_mib_rplDodagEntry_t *
jacobs_rpl_mib_new_rplDodagEntry(void);

extern void
jacobs_rpl_mib_get_rplDodagEntry(GNetSnmp *s, jacobs_rpl_mib_rplDodagEntry_t **rplDodagEntry, guint32 rplInstanceID, guint32 rplDodagIndex, gint64 mask, GError **error);

extern void
jacobs_rpl_mib_free_rplDodagEntry(jacobs_rpl_mib_rplDodagEntry_t *rplDodagEntry);

/*
 * C type definitions for JACOBS-RPL-MIB::rplDodagParentEntry.
 */

#define JACOBS_RPL_MIB_RPLDODAGPARENTIF (1 << 0) 

typedef struct {
    guint32  rplInstanceID;         /* na JACOBS-RPL-MIB::RplInstanceID */
    guint32  rplDodagIndex;         /* na */
    guchar   rplDodagParentID[16];  /* na INET-ADDRESS-MIB::InetAddressIPv6 */
#define JACOBS_RPL_MIB_RPLDODAGPARENTIDLENGTH 16
    gint32   *rplDodagParentIf;     /* ro IF-MIB::InterfaceIndex */
} jacobs_rpl_mib_rplDodagParentEntry_t;

extern void
jacobs_rpl_mib_get_rplDodagParentTable(GNetSnmp *s, jacobs_rpl_mib_rplDodagParentEntry_t ***rplDodagParentEntry, gint64 mask, GError **error);

extern void
jacobs_rpl_mib_free_rplDodagParentTable(jacobs_rpl_mib_rplDodagParentEntry_t **rplDodagParentEntry);

extern jacobs_rpl_mib_rplDodagParentEntry_t *
jacobs_rpl_mib_new_rplDodagParentEntry(void);

extern void
jacobs_rpl_mib_get_rplDodagParentEntry(GNetSnmp *s, jacobs_rpl_mib_rplDodagParentEntry_t **rplDodagParentEntry, guint32 rplInstanceID, guint32 rplDodagIndex, guchar *rplDodagParentID, gint64 mask, GError **error);

extern void
jacobs_rpl_mib_free_rplDodagParentEntry(jacobs_rpl_mib_rplDodagParentEntry_t *rplDodagParentEntry);

/*
 * C type definitions for JACOBS-RPL-MIB::rplDodagChildEntry.
 */

#define JACOBS_RPL_MIB_RPLDODAGCHILDIF (1 << 0) 

typedef struct {
    guint32  rplInstanceID;        /* na JACOBS-RPL-MIB::RplInstanceID */
    guint32  rplDodagIndex;        /* na */
    guchar   rplDodagChildID[16];  /* na INET-ADDRESS-MIB::InetAddressIPv6 */
#define JACOBS_RPL_MIB_RPLDODAGCHILDIDLENGTH 16
    gint32   *rplDodagChildIf;     /* ro IF-MIB::InterfaceIndex */
} jacobs_rpl_mib_rplDodagChildEntry_t;

extern void
jacobs_rpl_mib_get_rplDodagChildTable(GNetSnmp *s, jacobs_rpl_mib_rplDodagChildEntry_t ***rplDodagChildEntry, gint64 mask, GError **error);

extern void
jacobs_rpl_mib_free_rplDodagChildTable(jacobs_rpl_mib_rplDodagChildEntry_t **rplDodagChildEntry);

extern jacobs_rpl_mib_rplDodagChildEntry_t *
jacobs_rpl_mib_new_rplDodagChildEntry(void);

extern void
jacobs_rpl_mib_get_rplDodagChildEntry(GNetSnmp *s, jacobs_rpl_mib_rplDodagChildEntry_t **rplDodagChildEntry, guint32 rplInstanceID, guint32 rplDodagIndex, guchar *rplDodagChildID, gint64 mask, GError **error);

extern void
jacobs_rpl_mib_free_rplDodagChildEntry(jacobs_rpl_mib_rplDodagChildEntry_t *rplDodagChildEntry);

/*
 * C type definitions for JACOBS-RPL-MIB::rplStats.
 */

#define JACOBS_RPL_MIB_RPLMEMOVERFLOWS             (1 << 0) 
#define JACOBS_RPL_MIB_RPLPARSEERRORS              (1 << 1) 
#define JACOBS_RPL_MIB_RPLUNKNOWNMSGTYPES          (1 << 2) 
#define JACOBS_RPL_MIB_RPLSECURITYPOLICYVIOLATIONS (1 << 3) 
#define JACOBS_RPL_MIB_RPLINTEGRITYCHECKFAILURES   (1 << 4) 
#define JACOBS_RPL_MIB_RPLREPLAYPROTECTIONFAILURES (1 << 5) 
#define JACOBS_RPL_MIB_RPLVALIDPARENTFAILURES      (1 << 6) 
#define JACOBS_RPL_MIB_RPLNOINSTANCEIDS            (1 << 7) 
#define JACOBS_RPL_MIB_RPLTRIGGEREDLOCALREPAIRS    (1 << 8) 
#define JACOBS_RPL_MIB_RPLTRIGGEREDGLOBALREPAIRS   (1 << 9) 
#define JACOBS_RPL_MIB_RPLNOPARENTSECS             (1 << 10) 
#define JACOBS_RPL_MIB_RPLACTIVENOPARENTSECS       (1 << 11) 
#define JACOBS_RPL_MIB_RPLOBITSETDOWNWARDS         (1 << 12) 
#define JACOBS_RPL_MIB_RPLOBITCLEAREDUPWARDS       (1 << 13) 
#define JACOBS_RPL_MIB_RPLFBITSET                  (1 << 14) 
#define JACOBS_RPL_MIB_RPLRBITSET                  (1 << 15) 
#define JACOBS_RPL_MIB_RPLTRICKLETIMERRESETS       (1 << 16) 

typedef struct {
    guint32  *rplMemOverflows;                 /* ro SNMPv2-SMI::Counter32 */
    guint32  *rplParseErrors;                  /* ro SNMPv2-SMI::Counter32 */
    guint32  *rplUnknownMsgTypes;              /* ro SNMPv2-SMI::Counter32 */
    guint32  *rplSecurityPolicyViolations;     /* ro SNMPv2-SMI::Counter32 */
    guint32  *rplIntegrityCheckFailures;       /* ro SNMPv2-SMI::Counter32 */
    guint32  *rplReplayProtectionFailures;     /* ro SNMPv2-SMI::Counter32 */
    guint32  *rplValidParentFailures;          /* ro SNMPv2-SMI::Counter32 */
    guint32  *rplNoInstanceIDs;                /* ro SNMPv2-SMI::Counter32 */
    guint32  *rplTriggeredLocalRepairs;        /* ro SNMPv2-SMI::Counter32 */
    guint32  *rplTriggeredGlobalRepairs;       /* ro SNMPv2-SMI::Counter32 */
    guint32  *rplNoParentSecs;                 /* ro SNMPv2-SMI::Counter32 */
    guint32  *rplActiveNoParentSecs;           /* ro SNMPv2-SMI::Counter32 */
    guint32  *rplOBitSetDownwards;             /* ro SNMPv2-SMI::Counter32 */
    guint32  *rplOBitClearedUpwards;           /* ro SNMPv2-SMI::Counter32 */
    guint32  *rplFBitSet;                      /* ro SNMPv2-SMI::Counter32 */
    guint32  *rplRBitSet;                      /* ro SNMPv2-SMI::Counter32 */
    guint32  *rplTrickleTimerResets;           /* ro SNMPv2-SMI::Counter32 */
} jacobs_rpl_mib_rplStats_t;

extern jacobs_rpl_mib_rplStats_t *
jacobs_rpl_mib_new_rplStats(void);

extern void
jacobs_rpl_mib_get_rplStats(GNetSnmp *s, jacobs_rpl_mib_rplStats_t **rplStats, gint64 mask, GError **error);

extern void
jacobs_rpl_mib_free_rplStats(jacobs_rpl_mib_rplStats_t *rplStats);

/*
 * C type definitions for JACOBS-RPL-MIB::rplMsgStatsEntry.
 */

#define JACOBS_RPL_MIB_RPLMSGSTATSINMSGS  (1 << 0) 
#define JACOBS_RPL_MIB_RPLMSGSTATSOUTMSGS (1 << 1) 

typedef struct {
    guint32  rplMsgStatsType;         /* na JACOBS-RPL-MIB::RplMessageType */
    guint32  *rplMsgStatsInMsgs;      /* ro SNMPv2-SMI::Counter32 */
    guint32  *rplMsgStatsOutMsgs;     /* ro SNMPv2-SMI::Counter32 */
} jacobs_rpl_mib_rplMsgStatsEntry_t;

extern void
jacobs_rpl_mib_get_rplMsgStatsTable(GNetSnmp *s, jacobs_rpl_mib_rplMsgStatsEntry_t ***rplMsgStatsEntry, gint64 mask, GError **error);

extern void
jacobs_rpl_mib_free_rplMsgStatsTable(jacobs_rpl_mib_rplMsgStatsEntry_t **rplMsgStatsEntry);

extern jacobs_rpl_mib_rplMsgStatsEntry_t *
jacobs_rpl_mib_new_rplMsgStatsEntry(void);

extern void
jacobs_rpl_mib_get_rplMsgStatsEntry(GNetSnmp *s, jacobs_rpl_mib_rplMsgStatsEntry_t **rplMsgStatsEntry, guint32 rplMsgStatsType, gint64 mask, GError **error);

extern void
jacobs_rpl_mib_free_rplMsgStatsEntry(jacobs_rpl_mib_rplMsgStatsEntry_t *rplMsgStatsEntry);


G_END_DECLS

#endif /* _JACOBS_RPL_MIB_H_ */
