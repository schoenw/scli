/*							-- DO NOT EDIT --
 * This file has been generated by smidump
 * version 0.2.17 for the scli package.
 *
 * Derived from RAPID-CITY:
 *   Enterprise MIB for the Accelar product family.
 *
 * Revision 1997-01-01 00:00:
 *   [Revision added by libsmi due to a LAST-UPDATED clause.]
 *
 * $Id$
 */

#ifndef _RAPID_CITY_H_
#define _RAPID_CITY_H_

#include "g_snmp.h"

/*
 * Tables to map enumerations to strings and vice versa.
 */

#define RAPID_CITY_RCSYSACTION_NONE	1
#define RAPID_CITY_RCSYSACTION_HARDRESET	2
#define RAPID_CITY_RCSYSACTION_SOFTRESET	3
#define RAPID_CITY_RCSYSACTION_SAVETONVRAM	4
#define RAPID_CITY_RCSYSACTION_RESETCOUNTERS	5
#define RAPID_CITY_RCSYSACTION_SAVETOSTANDBYNVRAM	6
#define RAPID_CITY_RCSYSACTION_CPUSWITCHOVER	7
#define RAPID_CITY_RCSYSACTION_CHECKSWINFLASH	8
#define RAPID_CITY_RCSYSACTION_CHECKSWINPCMCIA	9
#define RAPID_CITY_RCSYSACTION_RESETCONSOLE	10
#define RAPID_CITY_RCSYSACTION_RESETMODEM	11
#define RAPID_CITY_RCSYSACTION_FLUSHIPROUTETBL	12

extern GSnmpEnum const rapid_city_enums_rcSysAction[];

#define RAPID_CITY_RCSYSRESULT_NONE	1
#define RAPID_CITY_RCSYSRESULT_INPROGRESS	2
#define RAPID_CITY_RCSYSRESULT_SUCCESS	3
#define RAPID_CITY_RCSYSRESULT_FAIL	4
#define RAPID_CITY_RCSYSRESULT_FLASHREADFAILED	5
#define RAPID_CITY_RCSYSRESULT_PCMCIAREADFAILED	6
#define RAPID_CITY_RCSYSRESULT_CRCCHECKFAILED	7
#define RAPID_CITY_RCSYSRESULT_NOSTANDBYCPU	8

extern GSnmpEnum const rapid_city_enums_rcSysResult[];

#define RAPID_CITY_RCSYSRMONENABLE_TRUE	1
#define RAPID_CITY_RCSYSRMONENABLE_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcSysRmonEnable[];

#define RAPID_CITY_RCSYSRMONSAVECONFIG_TRUE	1
#define RAPID_CITY_RCSYSRMONSAVECONFIG_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcSysRmonSaveConfig[];

#define RAPID_CITY_RCSYSRMONTRAPOPTION_TOOWNER	1
#define RAPID_CITY_RCSYSRMONTRAPOPTION_TOALL	2

extern GSnmpEnum const rapid_city_enums_rcSysRmonTrapOption[];

#define RAPID_CITY_RCSYSSUPPORTROUTING_TRUE	1
#define RAPID_CITY_RCSYSSUPPORTROUTING_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcSysSupportRouting[];

#define RAPID_CITY_RCSYSSUPPORTWEBSERVER_TRUE	1
#define RAPID_CITY_RCSYSSUPPORTWEBSERVER_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcSysSupportWebServer[];

#define RAPID_CITY_RCSYSACCESSPOLICYENABLE_TRUE	1
#define RAPID_CITY_RCSYSACCESSPOLICYENABLE_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcSysAccessPolicyEnable[];

#define RAPID_CITY_RCSYSTRAPRECVVERSION_V1	1
#define RAPID_CITY_RCSYSTRAPRECVVERSION_V2C	2

extern GSnmpEnum const rapid_city_enums_rcSysTrapRecvVersion[];

#define RAPID_CITY_RCSYSTRAPRECVROWSTATUS_ACTIVE	1
#define RAPID_CITY_RCSYSTRAPRECVROWSTATUS_NOTINSERVICE	2
#define RAPID_CITY_RCSYSTRAPRECVROWSTATUS_NOTREADY	3
#define RAPID_CITY_RCSYSTRAPRECVROWSTATUS_CREATEANDGO	4
#define RAPID_CITY_RCSYSTRAPRECVROWSTATUS_CREATEANDWAIT	5
#define RAPID_CITY_RCSYSTRAPRECVROWSTATUS_DESTROY	6

extern GSnmpEnum const rapid_city_enums_rcSysTrapRecvRowStatus[];

#define RAPID_CITY_RCSYSACCESSPOLICYPOLICYENABLE_TRUE	1
#define RAPID_CITY_RCSYSACCESSPOLICYPOLICYENABLE_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcSysAccessPolicyPolicyEnable[];

#define RAPID_CITY_RCSYSACCESSPOLICYMODE_ALLOW	1
#define RAPID_CITY_RCSYSACCESSPOLICYMODE_DENY	2

extern GSnmpEnum const rapid_city_enums_rcSysAccessPolicyMode[];

#define RAPID_CITY_RCSYSACCESSPOLICYSERVICE_TELNET	1
#define RAPID_CITY_RCSYSACCESSPOLICYSERVICE_SNMP	2
#define RAPID_CITY_RCSYSACCESSPOLICYSERVICE_TFTP	4
#define RAPID_CITY_RCSYSACCESSPOLICYSERVICE_FTP	8
#define RAPID_CITY_RCSYSACCESSPOLICYSERVICE_HTTP	16
#define RAPID_CITY_RCSYSACCESSPOLICYSERVICE_RLOGIN	32

extern GSnmpEnum const rapid_city_enums_rcSysAccessPolicyService[];

#define RAPID_CITY_RCSYSACCESSPOLICYACCESSLEVEL_READONLY	1
#define RAPID_CITY_RCSYSACCESSPOLICYACCESSLEVEL_READWRITE	2
#define RAPID_CITY_RCSYSACCESSPOLICYACCESSLEVEL_READWRITEALL	3

extern GSnmpEnum const rapid_city_enums_rcSysAccessPolicyAccessLevel[];

#define RAPID_CITY_RCSYSACCESSPOLICYLOG_TRUE	1
#define RAPID_CITY_RCSYSACCESSPOLICYLOG_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcSysAccessPolicyLog[];

#define RAPID_CITY_RCSYSACCESSPOLICYROWSTATUS_ACTIVE	1
#define RAPID_CITY_RCSYSACCESSPOLICYROWSTATUS_NOTINSERVICE	2
#define RAPID_CITY_RCSYSACCESSPOLICYROWSTATUS_NOTREADY	3
#define RAPID_CITY_RCSYSACCESSPOLICYROWSTATUS_CREATEANDGO	4
#define RAPID_CITY_RCSYSACCESSPOLICYROWSTATUS_CREATEANDWAIT	5
#define RAPID_CITY_RCSYSACCESSPOLICYROWSTATUS_DESTROY	6

extern GSnmpEnum const rapid_city_enums_rcSysAccessPolicyRowStatus[];

#define RAPID_CITY_RCTFTPACTION_NONE	1
#define RAPID_CITY_RCTFTPACTION_DOWNLOADCONFIG	2
#define RAPID_CITY_RCTFTPACTION_UPLOADCONFIG	3
#define RAPID_CITY_RCTFTPACTION_DOWNLOADSWTOFLASH	4
#define RAPID_CITY_RCTFTPACTION_DOWNLOADSWTOPCMCIA	5
#define RAPID_CITY_RCTFTPACTION_UPLOADSW	6
#define RAPID_CITY_RCTFTPACTION_DOWNLOADSWTODRAM	7

extern GSnmpEnum const rapid_city_enums_rcTftpAction[];

#define RAPID_CITY_RCTFTPRESULT_NONE	1
#define RAPID_CITY_RCTFTPRESULT_INPROGRESS	2
#define RAPID_CITY_RCTFTPRESULT_NORESPONSE	3
#define RAPID_CITY_RCTFTPRESULT_FILEACCESSERROR	4
#define RAPID_CITY_RCTFTPRESULT_BADFLASH	5
#define RAPID_CITY_RCTFTPRESULT_FLASHERASEFAILED	6
#define RAPID_CITY_RCTFTPRESULT_PCMCIAERASEFAILED	7
#define RAPID_CITY_RCTFTPRESULT_SUCCESS	8
#define RAPID_CITY_RCTFTPRESULT_FAIL	9
#define RAPID_CITY_RCTFTPRESULT_WRITETONVRAMFAILED	10
#define RAPID_CITY_RCTFTPRESULT_FLASHWRITEFAILED	11
#define RAPID_CITY_RCTFTPRESULT_PCMCIAWRITEFAILED	12
#define RAPID_CITY_RCTFTPRESULT_CONFIGFILETOOBIG	13
#define RAPID_CITY_RCTFTPRESULT_IMAGEFILETOOBIG	14
#define RAPID_CITY_RCTFTPRESULT_NOPCMCIADETECT	15
#define RAPID_CITY_RCTFTPRESULT_PCMCIANOTSUPPORTED	16
#define RAPID_CITY_RCTFTPRESULT_INVALIDFILE	17
#define RAPID_CITY_RCTFTPRESULT_NOMEMORY	18
#define RAPID_CITY_RCTFTPRESULT_XFERERROR	19
#define RAPID_CITY_RCTFTPRESULT_CRCERROR	20
#define RAPID_CITY_RCTFTPRESULT_READNVRAMFAILED	21
#define RAPID_CITY_RCTFTPRESULT_PCMCIAWRITEPROTECT	22

extern GSnmpEnum const rapid_city_enums_rcTftpResult[];

#define RAPID_CITY_RCVLANHIGHPRIORITY_TRUE	1
#define RAPID_CITY_RCVLANHIGHPRIORITY_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcVlanHighPriority[];

#define RAPID_CITY_RCVLANROUTINGENABLE_TRUE	1
#define RAPID_CITY_RCVLANROUTINGENABLE_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcVlanRoutingEnable[];

#define RAPID_CITY_RCVLANACTION_NONE	1
#define RAPID_CITY_RCVLANACTION_FLUSHMACFDB	2
#define RAPID_CITY_RCVLANACTION_FLUSHARP	3
#define RAPID_CITY_RCVLANACTION_FLUSHIP	4
#define RAPID_CITY_RCVLANACTION_FLUSHDYNMEMB	5
#define RAPID_CITY_RCVLANACTION_ALL	6
#define RAPID_CITY_RCVLANACTION_FLUSHSNOOPMEMB	7
#define RAPID_CITY_RCVLANACTION_TRIGGERRIPUPDATE	8
#define RAPID_CITY_RCVLANACTION_FLUSHSNOOPMRTR	9

extern GSnmpEnum const rapid_city_enums_rcVlanAction[];

#define RAPID_CITY_RCVLANRESULT_NONE	1
#define RAPID_CITY_RCVLANRESULT_INPROGRESS	2
#define RAPID_CITY_RCVLANRESULT_SUCCESS	3
#define RAPID_CITY_RCVLANRESULT_FAIL	4

extern GSnmpEnum const rapid_city_enums_rcVlanResult[];

#define RAPID_CITY_RCVLANTYPE_BYPORT	1
#define RAPID_CITY_RCVLANTYPE_BYIPSUBNET	2
#define RAPID_CITY_RCVLANTYPE_BYPROTOCOLID	3
#define RAPID_CITY_RCVLANTYPE_BYSRCMAC	4
#define RAPID_CITY_RCVLANTYPE_BYDSTMCAST	5

extern GSnmpEnum const rapid_city_enums_rcVlanType[];

#define RAPID_CITY_RCVLANPROTOCOLID_NONE	0
#define RAPID_CITY_RCVLANPROTOCOLID_IP	1
#define RAPID_CITY_RCVLANPROTOCOLID_IPX802DOT3	2
#define RAPID_CITY_RCVLANPROTOCOLID_IPX802DOT2	3
#define RAPID_CITY_RCVLANPROTOCOLID_IPXSNAP	4
#define RAPID_CITY_RCVLANPROTOCOLID_IPXETHERNET2	5
#define RAPID_CITY_RCVLANPROTOCOLID_APPLETALK	6
#define RAPID_CITY_RCVLANPROTOCOLID_DECLAT	7
#define RAPID_CITY_RCVLANPROTOCOLID_DECOTHER	8
#define RAPID_CITY_RCVLANPROTOCOLID_SNA802DOT2	9
#define RAPID_CITY_RCVLANPROTOCOLID_SNAETHERNET2	10
#define RAPID_CITY_RCVLANPROTOCOLID_NETBIOS	11
#define RAPID_CITY_RCVLANPROTOCOLID_XNS	12
#define RAPID_CITY_RCVLANPROTOCOLID_VINES	13
#define RAPID_CITY_RCVLANPROTOCOLID_IPV6	14
#define RAPID_CITY_RCVLANPROTOCOLID_USRDEFINED	15
#define RAPID_CITY_RCVLANPROTOCOLID_RARP	16

extern GSnmpEnum const rapid_city_enums_rcVlanProtocolId[];

#define RAPID_CITY_RCVLANROWSTATUS_ACTIVE	1
#define RAPID_CITY_RCVLANROWSTATUS_NOTINSERVICE	2
#define RAPID_CITY_RCVLANROWSTATUS_NOTREADY	3
#define RAPID_CITY_RCVLANROWSTATUS_CREATEANDGO	4
#define RAPID_CITY_RCVLANROWSTATUS_CREATEANDWAIT	5
#define RAPID_CITY_RCVLANROWSTATUS_DESTROY	6

extern GSnmpEnum const rapid_city_enums_rcVlanRowStatus[];

#define RAPID_CITY_RCVLANIGMPSNOOPENABLE_TRUE	1
#define RAPID_CITY_RCVLANIGMPSNOOPENABLE_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcVlanIgmpSnoopEnable[];

#define RAPID_CITY_RCVLANIGMPSNOOPREPORTPROXYENABLE_TRUE	1
#define RAPID_CITY_RCVLANIGMPSNOOPREPORTPROXYENABLE_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcVlanIgmpSnoopReportProxyEnable[];

#define RAPID_CITY_RCVLANPORTTYPE_ACCESS	1
#define RAPID_CITY_RCVLANPORTTYPE_TRUNK	2

extern GSnmpEnum const rapid_city_enums_rcVlanPortType[];

#define RAPID_CITY_RCVLANPORTDISCARDTAGGEDFRAMES_TRUE	1
#define RAPID_CITY_RCVLANPORTDISCARDTAGGEDFRAMES_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcVlanPortDiscardTaggedFrames[];

#define RAPID_CITY_RCVLANPORTDISCARDUNTAGGEDFRAMES_TRUE	1
#define RAPID_CITY_RCVLANPORTDISCARDUNTAGGEDFRAMES_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcVlanPortDiscardUntaggedFrames[];

#define RAPID_CITY_RCVLANPORTPERFORMTAGGING_TRUE	1
#define RAPID_CITY_RCVLANPORTPERFORMTAGGING_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcVlanPortPerformTagging[];

#define RAPID_CITY_RCVLANMACROWSTATUS_ACTIVE	1
#define RAPID_CITY_RCVLANMACROWSTATUS_NOTINSERVICE	2
#define RAPID_CITY_RCVLANMACROWSTATUS_NOTREADY	3
#define RAPID_CITY_RCVLANMACROWSTATUS_CREATEANDGO	4
#define RAPID_CITY_RCVLANMACROWSTATUS_CREATEANDWAIT	5
#define RAPID_CITY_RCVLANMACROWSTATUS_DESTROY	6

extern GSnmpEnum const rapid_city_enums_rcVlanMacRowStatus[];

#define RAPID_CITY_RCVLANIGMPSNOOPTYPE_DYNAMIC	1
#define RAPID_CITY_RCVLANIGMPSNOOPTYPE_STATIC	2

extern GSnmpEnum const rapid_city_enums_rcVlanIgmpSnoopType[];

#define RAPID_CITY_RCVLANIGMPSNOOPSTATICROWSTATUS_ACTIVE	1
#define RAPID_CITY_RCVLANIGMPSNOOPSTATICROWSTATUS_NOTINSERVICE	2
#define RAPID_CITY_RCVLANIGMPSNOOPSTATICROWSTATUS_NOTREADY	3
#define RAPID_CITY_RCVLANIGMPSNOOPSTATICROWSTATUS_CREATEANDGO	4
#define RAPID_CITY_RCVLANIGMPSNOOPSTATICROWSTATUS_CREATEANDWAIT	5
#define RAPID_CITY_RCVLANIGMPSNOOPSTATICROWSTATUS_DESTROY	6

extern GSnmpEnum const rapid_city_enums_rcVlanIgmpSnoopStaticRowStatus[];

#define RAPID_CITY_RCVLANIGMPSNOOPACCESSMODE_DENYTX	1
#define RAPID_CITY_RCVLANIGMPSNOOPACCESSMODE_DENYRX	2
#define RAPID_CITY_RCVLANIGMPSNOOPACCESSMODE_DENYBOTH	3

extern GSnmpEnum const rapid_city_enums_rcVlanIgmpSnoopAccessMode[];

#define RAPID_CITY_RCVLANIGMPSNOOPACCESSROWSTATUS_ACTIVE	1
#define RAPID_CITY_RCVLANIGMPSNOOPACCESSROWSTATUS_NOTINSERVICE	2
#define RAPID_CITY_RCVLANIGMPSNOOPACCESSROWSTATUS_NOTREADY	3
#define RAPID_CITY_RCVLANIGMPSNOOPACCESSROWSTATUS_CREATEANDGO	4
#define RAPID_CITY_RCVLANIGMPSNOOPACCESSROWSTATUS_CREATEANDWAIT	5
#define RAPID_CITY_RCVLANIGMPSNOOPACCESSROWSTATUS_DESTROY	6

extern GSnmpEnum const rapid_city_enums_rcVlanIgmpSnoopAccessRowStatus[];

#define RAPID_CITY_RCVLANIGMPSNOOPSENDERACTION_NONE	0
#define RAPID_CITY_RCVLANIGMPSNOOPSENDERACTION_FLUSHENTRY	1
#define RAPID_CITY_RCVLANIGMPSNOOPSENDERACTION_FLUSHGRP	2

extern GSnmpEnum const rapid_city_enums_rcVlanIgmpSnoopSenderAction[];

#define RAPID_CITY_RCCHASTYPE_UNKNOWN	1
#define RAPID_CITY_RCCHASTYPE_A1100	2
#define RAPID_CITY_RCCHASTYPE_A1250	6
#define RAPID_CITY_RCCHASTYPE_A1150	7
#define RAPID_CITY_RCCHASTYPE_A1200	8
#define RAPID_CITY_RCCHASTYPE_A1050	9

extern GSnmpEnum const rapid_city_enums_rcChasType[];

#define RAPID_CITY_RCCHASTESTRESULT_OTHER	1
#define RAPID_CITY_RCCHASTESTRESULT_OK	2
#define RAPID_CITY_RCCHASTESTRESULT_CRCEEPROM	3
#define RAPID_CITY_RCCHASTESTRESULT_TIMER	4
#define RAPID_CITY_RCCHASTESTRESULT_PROCDRAM	5
#define RAPID_CITY_RCCHASTESTRESULT_LED	6
#define RAPID_CITY_RCCHASTESTRESULT_FORMACCPUACCESS	7
#define RAPID_CITY_RCCHASTESTRESULT_ASICCPUACCESS	8
#define RAPID_CITY_RCCHASTESTRESULT_MEMORY	9
#define RAPID_CITY_RCCHASTESTRESULT_LOOPBACK	10

extern GSnmpEnum const rapid_city_enums_rcChasTestResult[];

#define RAPID_CITY_RCCHASFANOPERSTATUS_UNKNOWN	1
#define RAPID_CITY_RCCHASFANOPERSTATUS_UP	2
#define RAPID_CITY_RCCHASFANOPERSTATUS_DOWN	3

extern GSnmpEnum const rapid_city_enums_rcChasFanOperStatus[];

#define RAPID_CITY_RCCHASPOWERSUPPLYOPERSTATUS_UNKNOWN	1
#define RAPID_CITY_RCCHASPOWERSUPPLYOPERSTATUS_EMPTY	2
#define RAPID_CITY_RCCHASPOWERSUPPLYOPERSTATUS_UP	3
#define RAPID_CITY_RCCHASPOWERSUPPLYOPERSTATUS_DOWN	4

extern GSnmpEnum const rapid_city_enums_rcChasPowerSupplyOperStatus[];

#define RAPID_CITY_RCCHASPOWERSUPPLYDETAILTYPE_AC	1
#define RAPID_CITY_RCCHASPOWERSUPPLYDETAILTYPE_DC	2

extern GSnmpEnum const rapid_city_enums_rcChasPowerSupplyDetailType[];

#define RAPID_CITY_RCCARDTYPE_OTHER	1
#define RAPID_CITY_RCCARDTYPE_RCCPU	2
#define RAPID_CITY_RCCARDTYPE_RC8X100BASETX	3
#define RAPID_CITY_RCCARDTYPE_RC8X100BASET2	4
#define RAPID_CITY_RCCARDTYPE_RC8X100BASEF	5
#define RAPID_CITY_RCCARDTYPE_RC16X100BASETX	6
#define RAPID_CITY_RCCARDTYPE_RC8X100BASETXWG	12
#define RAPID_CITY_RCCARDTYPE_RC16X100BASETXWG	13
#define RAPID_CITY_RCCARDTYPE_RC4X100BASEFWG	14
#define RAPID_CITY_RCCARDTYPE_RC12X100BASETXWG	15
#define RAPID_CITY_RCCARDTYPE_RC12X100BASEFBB	16
#define RAPID_CITY_RCCARDTYPE_RC8X100BASEFWG	17
#define RAPID_CITY_RCCARDTYPE_RC12X100BASETX_2X100BASEFBB	18
#define RAPID_CITY_RCCARDTYPE_RC2X155BASEFBB	19
#define RAPID_CITY_RCCARDTYPE_RC4X155BASEFBB	20
#define RAPID_CITY_RCCARDTYPE_RC16X100BASEFBB	21
#define RAPID_CITY_RCCARDTYPE_RC14X100BASETX_2X100BASEFBB	22
#define RAPID_CITY_RCCARDTYPE_RC8X10BASEFBB	23
#define RAPID_CITY_RCCARDTYPE_RC4XOC3	24
#define RAPID_CITY_RCCARDTYPE_RC1XOC12	25
#define RAPID_CITY_RCCARDTYPE_RCRMON	26
#define RAPID_CITY_RCCARDTYPE_RC4X1000BASESXWG	1028
#define RAPID_CITY_RCCARDTYPE_RC1X1000BASESXWG	1025
#define RAPID_CITY_RCCARDTYPE_RC2X1000BASESXWG	1026
#define RAPID_CITY_RCCARDTYPE_RC1X1000BASESXRWG	1537
#define RAPID_CITY_RCCARDTYPE_RC2X1000BASESXRWG	1538
#define RAPID_CITY_RCCARDTYPE_RC1X1000BASELXWG	1153
#define RAPID_CITY_RCCARDTYPE_RC2X1000BASELXWG	1154
#define RAPID_CITY_RCCARDTYPE_RC2X1000BASEXDWG	1282
#define RAPID_CITY_RCCARDTYPE_RC1X1000BASELXRWG	1665
#define RAPID_CITY_RCCARDTYPE_RC2X1000BASELXRWG	1666
#define RAPID_CITY_RCCARDTYPE_RC1X1000BASESXBB	1041
#define RAPID_CITY_RCCARDTYPE_RC2X1000BASESXBB	1042
#define RAPID_CITY_RCCARDTYPE_RC1X1000BASESXRBB	1553
#define RAPID_CITY_RCCARDTYPE_RC2X1000BASESXRBB	1554
#define RAPID_CITY_RCCARDTYPE_RC1X1000BASELXBB	1169
#define RAPID_CITY_RCCARDTYPE_RC2X1000BASELXBB	1170
#define RAPID_CITY_RCCARDTYPE_RC2X1000BASEXDBB	1298
#define RAPID_CITY_RCCARDTYPE_RC1X1000BASELXRBB	1681
#define RAPID_CITY_RCCARDTYPE_RC2X1000BASELXRBB	1682

extern GSnmpEnum const rapid_city_enums_rcCardType[];

#define RAPID_CITY_RCCARDADMINSTATUS_UP	1
#define RAPID_CITY_RCCARDADMINSTATUS_DOWN	2
#define RAPID_CITY_RCCARDADMINSTATUS_TESTING	3

extern GSnmpEnum const rapid_city_enums_rcCardAdminStatus[];

#define RAPID_CITY_RCCARDOPERSTATUS_UP	1
#define RAPID_CITY_RCCARDOPERSTATUS_DOWN	2
#define RAPID_CITY_RCCARDOPERSTATUS_TESTING	3
#define RAPID_CITY_RCCARDOPERSTATUS_UNKNOWN	4
#define RAPID_CITY_RCCARDOPERSTATUS_DORMANT	5

extern GSnmpEnum const rapid_city_enums_rcCardOperStatus[];

#define RAPID_CITY_RCCARDPCMCIATYPE_NONE	1
#define RAPID_CITY_RCCARDPCMCIATYPE_MODEM28KBS	2
#define RAPID_CITY_RCCARDPCMCIATYPE_FLASH2MEG	3
#define RAPID_CITY_RCCARDPCMCIATYPE_FLASH4MEG	4

extern GSnmpEnum const rapid_city_enums_rcCardPCMCIAType[];

#define RAPID_CITY_RCPORTTYPE_OTHER	0
#define RAPID_CITY_RCPORTTYPE_RC100BASETX	1
#define RAPID_CITY_RCPORTTYPE_RC100BASET2	2
#define RAPID_CITY_RCPORTTYPE_RC100BASEF	3
#define RAPID_CITY_RCPORTTYPE_RC1000BASEF	4
#define RAPID_CITY_RCPORTTYPE_RC1000BASEDUALF	5
#define RAPID_CITY_RCPORTTYPE_RC10BASEF	6

extern GSnmpEnum const rapid_city_enums_rcPortType[];

#define RAPID_CITY_RCPORTCONNECTORTYPE_NONREDUNDANT	1
#define RAPID_CITY_RCPORTCONNECTORTYPE_REDUNDANT	2

extern GSnmpEnum const rapid_city_enums_rcPortConnectorType[];

#define RAPID_CITY_RCPORTPERFORMROUTING_TRUE	1
#define RAPID_CITY_RCPORTPERFORMROUTING_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcPortPerformRouting[];

#define RAPID_CITY_RCPORTHIGHPRIORITY_TRUE	1
#define RAPID_CITY_RCPORTHIGHPRIORITY_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcPortHighPriority[];

#define RAPID_CITY_RCPORTACTION_NONE	1
#define RAPID_CITY_RCPORTACTION_FLUSHMACFDB	2
#define RAPID_CITY_RCPORTACTION_FLUSHARP	3
#define RAPID_CITY_RCPORTACTION_FLUSHIP	4
#define RAPID_CITY_RCPORTACTION_FLUSHALL	5
#define RAPID_CITY_RCPORTACTION_TRIGGERRIPUPDATE	6

extern GSnmpEnum const rapid_city_enums_rcPortAction[];

#define RAPID_CITY_RCPORTRESULT_NONE	1
#define RAPID_CITY_RCPORTRESULT_INPROGRESS	2
#define RAPID_CITY_RCPORTRESULT_SUCCESS	3
#define RAPID_CITY_RCPORTRESULT_FAIL	4

extern GSnmpEnum const rapid_city_enums_rcPortResult[];

#define RAPID_CITY_RCPORTPRIMARYCONNECTOR_LEFT	1
#define RAPID_CITY_RCPORTPRIMARYCONNECTOR_RIGHT	2
#define RAPID_CITY_RCPORTPRIMARYCONNECTOR_OTHER	3

extern GSnmpEnum const rapid_city_enums_rcPortPrimaryConnector[];

#define RAPID_CITY_RCPORTACTIVECONNECTOR_LEFT	1
#define RAPID_CITY_RCPORTACTIVECONNECTOR_RIGHT	2
#define RAPID_CITY_RCPORTACTIVECONNECTOR_OTHER	3

extern GSnmpEnum const rapid_city_enums_rcPortActiveConnector[];

#define RAPID_CITY_RCPORTBACKUPCONNECTORSTATUS_UP	1
#define RAPID_CITY_RCPORTBACKUPCONNECTORSTATUS_DOWN	2
#define RAPID_CITY_RCPORTBACKUPCONNECTORSTATUS_OTHER	3

extern GSnmpEnum const rapid_city_enums_rcPortBackupConnectorStatus[];

#define RAPID_CITY_RCPORTAUTONEGOTIATE_TRUE	1
#define RAPID_CITY_RCPORTAUTONEGOTIATE_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcPortAutoNegotiate[];

#define RAPID_CITY_RCPORTADMINDUPLEX_HALF	1
#define RAPID_CITY_RCPORTADMINDUPLEX_FULL	2

extern GSnmpEnum const rapid_city_enums_rcPortAdminDuplex[];

#define RAPID_CITY_RCPORTOPERDUPLEX_HALF	1
#define RAPID_CITY_RCPORTOPERDUPLEX_FULL	2

extern GSnmpEnum const rapid_city_enums_rcPortOperDuplex[];

#define RAPID_CITY_RCPORTADMINSPEED_NONE	0
#define RAPID_CITY_RCPORTADMINSPEED_MBPS10	1
#define RAPID_CITY_RCPORTADMINSPEED_MBPS100	2
#define RAPID_CITY_RCPORTADMINSPEED_MBPS1000	3

extern GSnmpEnum const rapid_city_enums_rcPortAdminSpeed[];

#define RAPID_CITY_RCPORTLOCKED_TRUE	1
#define RAPID_CITY_RCPORTLOCKED_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcPortLocked[];

#define RAPID_CITY_RCPORTAUTONEGOTIATIONSUPPORTED_TRUE	1
#define RAPID_CITY_RCPORTAUTONEGOTIATIONSUPPORTED_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcPortAutoNegotiationSupported[];

#define RAPID_CITY_RCPORTSINGLEROUTABLEPORT_TRUE	1
#define RAPID_CITY_RCPORTSINGLEROUTABLEPORT_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcPortSingleRoutablePort[];

#define RAPID_CITY_RCPORTUNKNOWNMACDISCARD_TRUE	1
#define RAPID_CITY_RCPORTUNKNOWNMACDISCARD_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcPortUnknownMacDiscard[];

#define RAPID_CITY_RCPORTLOCKENABLE_TRUE	1
#define RAPID_CITY_RCPORTLOCKENABLE_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcPortLockEnable[];

#define RAPID_CITY_RCCHASARUMODE_ARUONE	1
#define RAPID_CITY_RCCHASARUMODE_ARUTWO	2
#define RAPID_CITY_RCCHASARUMODE_ARUTHREE	3

extern GSnmpEnum const rapid_city_enums_rcChasAruMode[];

#define RAPID_CITY_RCCHASQUIDMODE_QUIDMIXED	1
#define RAPID_CITY_RCCHASQUIDMODE_QUIDTWO	2
#define RAPID_CITY_RCCHASQUIDMODE_QUIDTHREE	3
#define RAPID_CITY_RCCHASQUIDMODE_QUIDFOUR	4
#define RAPID_CITY_RCCHASQUIDMODE_QUIDFIVE	5

extern GSnmpEnum const rapid_city_enums_rcChasQuidMode[];

#define RAPID_CITY_RCCHASEOCMODEADMINSTATUS_DEFAULT	0
#define RAPID_CITY_RCCHASEOCMODEADMINSTATUS_ARU1QUID4	1
#define RAPID_CITY_RCCHASEOCMODEADMINSTATUS_ARU2QUID4	2
#define RAPID_CITY_RCCHASEOCMODEADMINSTATUS_ARU2QUID5	3
#define RAPID_CITY_RCCHASEOCMODEADMINSTATUS_ARU3QUID4	4
#define RAPID_CITY_RCCHASEOCMODEADMINSTATUS_ARU3QUID5	5

extern GSnmpEnum const rapid_city_enums_rcChasEocModeAdminStatus[];

#define RAPID_CITY_RCCHASEOCMODEOPERSTATUS_DEFAULT	0
#define RAPID_CITY_RCCHASEOCMODEOPERSTATUS_ARU1QUID4	1
#define RAPID_CITY_RCCHASEOCMODEOPERSTATUS_ARU2QUID4	2
#define RAPID_CITY_RCCHASEOCMODEOPERSTATUS_ARU2QUID5	3
#define RAPID_CITY_RCCHASEOCMODEOPERSTATUS_ARU3QUID4	4
#define RAPID_CITY_RCCHASEOCMODEOPERSTATUS_ARU3QUID5	5

extern GSnmpEnum const rapid_city_enums_rcChasEocModeOperStatus[];

#define RAPID_CITY_RCPORTATMLECEXTLECSTATUS_TRUE	1
#define RAPID_CITY_RCPORTATMLECEXTLECSTATUS_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcPortAtmLecExtLecStatus[];

#define RAPID_CITY_RCPORTATMLECEXTLECSTATE_NOTACTIVE	1
#define RAPID_CITY_RCPORTATMLECEXTLECSTATE_OPERATIONAL	2
#define RAPID_CITY_RCPORTATMLECEXTLECSTATE_IDLE	3
#define RAPID_CITY_RCPORTATMLECEXTLECSTATE_ERROR	4
#define RAPID_CITY_RCPORTATMLECEXTLECSTATE_UNKNOWN	5

extern GSnmpEnum const rapid_city_enums_rcPortAtmLecExtLecState[];

#define RAPID_CITY_RCPORTATMLECEXTDESIREDPHYSICALPORT_A1	1
#define RAPID_CITY_RCPORTATMLECEXTDESIREDPHYSICALPORT_A2	2

extern GSnmpEnum const rapid_city_enums_rcPortAtmLecExtDesiredPhysicalPort[];

#define RAPID_CITY_RCPORTATMLECEXTACTUALPHYSICALPORT_A1	1
#define RAPID_CITY_RCPORTATMLECEXTACTUALPHYSICALPORT_A2	2

extern GSnmpEnum const rapid_city_enums_rcPortAtmLecExtActualPhysicalPort[];

#define RAPID_CITY_RCPORTATMLECEXTFAILOVERENABLE_TRUE	1
#define RAPID_CITY_RCPORTATMLECEXTFAILOVERENABLE_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcPortAtmLecExtFailoverEnable[];

#define RAPID_CITY_RCMIRRORSAVECONFIG_TRUE	1
#define RAPID_CITY_RCMIRRORSAVECONFIG_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcMirrorSaveConfig[];

#define RAPID_CITY_RCMIRRORBYPORTENABLE_TRUE	1
#define RAPID_CITY_RCMIRRORBYPORTENABLE_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcMirrorByPortEnable[];

#define RAPID_CITY_RCMIRRORBYPORTENABLEMIRROREDPORTONE_TRUE	1
#define RAPID_CITY_RCMIRRORBYPORTENABLEMIRROREDPORTONE_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcMirrorByPortEnableMirroredPortOne[];

#define RAPID_CITY_RCMIRRORBYPORTENABLEMIRROREDPORTTWO_TRUE	1
#define RAPID_CITY_RCMIRRORBYPORTENABLEMIRROREDPORTTWO_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcMirrorByPortEnableMirroredPortTwo[];

#define RAPID_CITY_RCISOLATEUNCONFIGPORTS_TRUE	1
#define RAPID_CITY_RCISOLATEUNCONFIGPORTS_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcIsolateUnconfigPorts[];

#define RAPID_CITY_RCUSEFACTORYSETTINGS_TRUE	1
#define RAPID_CITY_RCUSEFACTORYSETTINGS_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcUseFactorySettings[];

#define RAPID_CITY_RCHIGHPRIORITYMODE_TRUE	1
#define RAPID_CITY_RCHIGHPRIORITYMODE_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcHighPriorityMode[];

#define RAPID_CITY_RCIPCONFADVERTDEFRTE_TRUE	1
#define RAPID_CITY_RCIPCONFADVERTDEFRTE_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcIpConfAdvertDefRte[];

#define RAPID_CITY_RCIPCONFACCEPTDEFRTE_TRUE	1
#define RAPID_CITY_RCIPCONFACCEPTDEFRTE_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcIpConfAcceptDefRte[];

#define RAPID_CITY_RCIPCONFROWSTATUS_ACTIVE	1
#define RAPID_CITY_RCIPCONFROWSTATUS_NOTINSERVICE	2
#define RAPID_CITY_RCIPCONFROWSTATUS_NOTREADY	3
#define RAPID_CITY_RCIPCONFROWSTATUS_CREATEANDGO	4
#define RAPID_CITY_RCIPCONFROWSTATUS_CREATEANDWAIT	5
#define RAPID_CITY_RCIPCONFROWSTATUS_DESTROY	6

extern GSnmpEnum const rapid_city_enums_rcIpConfRowStatus[];

#define RAPID_CITY_RCIPCONFRIPENABLE_TRUE	1
#define RAPID_CITY_RCIPCONFRIPENABLE_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcIpConfRipEnable[];

#define RAPID_CITY_RCIPCONFOSPFENABLE_TRUE	1
#define RAPID_CITY_RCIPCONFOSPFENABLE_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcIpConfOspfEnable[];

#define RAPID_CITY_RCIPCONFIGMPENABLE_TRUE	1
#define RAPID_CITY_RCIPCONFIGMPENABLE_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcIpConfIgmpEnable[];

#define RAPID_CITY_RCIPCONFADDRASSIGNED_TRUE	1
#define RAPID_CITY_RCIPCONFADDRASSIGNED_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcIpConfAddrAssigned[];

#define RAPID_CITY_RCIPCONFDHCPENABLE_TRUE	1
#define RAPID_CITY_RCIPCONFDHCPENABLE_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcIpConfDhcpEnable[];

#define RAPID_CITY_RCIPCONFTRIGGEREDUPDATEENABLE_TRUE	1
#define RAPID_CITY_RCIPCONFTRIGGEREDUPDATEENABLE_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcIpConfTriggeredUpdateEnable[];

#define RAPID_CITY_RCIPCONFRIPAUTOAGGRERATEENABLE_TRUE	1
#define RAPID_CITY_RCIPCONFRIPAUTOAGGRERATEENABLE_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcIpConfRipAutoAggrerateEnable[];

#define RAPID_CITY_RCIPCONFRIPGENERATEDEFAULTROUTE_TRUE	1
#define RAPID_CITY_RCIPCONFRIPGENERATEDEFAULTROUTE_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcIpConfRipGenerateDefaultRoute[];

#define RAPID_CITY_RCIPCONFOSPFROWSTATUS_ACTIVE	1
#define RAPID_CITY_RCIPCONFOSPFROWSTATUS_NOTINSERVICE	2
#define RAPID_CITY_RCIPCONFOSPFROWSTATUS_NOTREADY	3
#define RAPID_CITY_RCIPCONFOSPFROWSTATUS_CREATEANDGO	4
#define RAPID_CITY_RCIPCONFOSPFROWSTATUS_CREATEANDWAIT	5
#define RAPID_CITY_RCIPCONFOSPFROWSTATUS_DESTROY	6

extern GSnmpEnum const rapid_city_enums_rcIpConfOspfRowStatus[];

#define RAPID_CITY_RCIPCONFOSPFAUTHTYPE_NONE	0
#define RAPID_CITY_RCIPCONFOSPFAUTHTYPE_SIMPLEPASSWORD	1
#define RAPID_CITY_RCIPCONFOSPFAUTHTYPE_MD5	2

extern GSnmpEnum const rapid_city_enums_rcIpConfOspfAuthType[];

#define RAPID_CITY_RCIPCONFOSPFTRAPENABLE_TRUE	1
#define RAPID_CITY_RCIPCONFOSPFTRAPENABLE_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcIpConfOspfTrapEnable[];

#define RAPID_CITY_RCIPCONFOSPFAUTOVIRTLINKENABLE_TRUE	1
#define RAPID_CITY_RCIPCONFOSPFAUTOVIRTLINKENABLE_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcIpConfOspfAutoVirtLinkEnable[];

#define RAPID_CITY_RCIPCONFOSPFAREAIMPORTSUMMARY_TRUE	1
#define RAPID_CITY_RCIPCONFOSPFAREAIMPORTSUMMARY_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcIpConfOspfAreaImportSummary[];

#define RAPID_CITY_RCIPADENTBCASTADDRFORMAT_ZEROS	0
#define RAPID_CITY_RCIPADENTBCASTADDRFORMAT_ONES	1

extern GSnmpEnum const rapid_city_enums_rcIpAdEntBcastAddrFormat[];

#define RAPID_CITY_RCIPADENTROWSTATUS_ACTIVE	1
#define RAPID_CITY_RCIPADENTROWSTATUS_NOTINSERVICE	2
#define RAPID_CITY_RCIPADENTROWSTATUS_NOTREADY	3
#define RAPID_CITY_RCIPADENTROWSTATUS_CREATEANDGO	4
#define RAPID_CITY_RCIPADENTROWSTATUS_CREATEANDWAIT	5
#define RAPID_CITY_RCIPADENTROWSTATUS_DESTROY	6

extern GSnmpEnum const rapid_city_enums_rcIpAdEntRowStatus[];

#define RAPID_CITY_RCIPFLOWPROTOCOL_IP	4
#define RAPID_CITY_RCIPFLOWPROTOCOL_TCP	6
#define RAPID_CITY_RCIPFLOWPROTOCOL_UDP	17

extern GSnmpEnum const rapid_city_enums_rcIpFlowProtocol[];

#define RAPID_CITY_RCIPFLOWROWSTATUS_ACTIVE	1
#define RAPID_CITY_RCIPFLOWROWSTATUS_NOTINSERVICE	2
#define RAPID_CITY_RCIPFLOWROWSTATUS_NOTREADY	3
#define RAPID_CITY_RCIPFLOWROWSTATUS_CREATEANDGO	4
#define RAPID_CITY_RCIPFLOWROWSTATUS_CREATEANDWAIT	5
#define RAPID_CITY_RCIPFLOWROWSTATUS_DESTROY	6

extern GSnmpEnum const rapid_city_enums_rcIpFlowRowStatus[];

#define RAPID_CITY_RCIPROUTINGREDISTRIBUTERIPTOOSPFENABLE_TRUE	1
#define RAPID_CITY_RCIPROUTINGREDISTRIBUTERIPTOOSPFENABLE_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcIpRoutingRedistributeRipToOspfEnable[];

#define RAPID_CITY_RCIPROUTINGREDISTRIBUTERIPTOOSPFUSEEXPLICITMETRIC_TRUE	1
#define RAPID_CITY_RCIPROUTINGREDISTRIBUTERIPTOOSPFUSEEXPLICITMETRIC_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcIpRoutingRedistributeRipToOspfUseExplicitMetric[];

#define RAPID_CITY_RCIPROUTINGREDISTRIBUTERIPTOOSPFEXTERNALMETRICTYPE_TYPE1	1
#define RAPID_CITY_RCIPROUTINGREDISTRIBUTERIPTOOSPFEXTERNALMETRICTYPE_TYPE2	2

extern GSnmpEnum const rapid_city_enums_rcIpRoutingRedistributeRipToOspfExternalMetricType[];

#define RAPID_CITY_RCIPROUTINGREDISTRIBUTEOSPFTORIPENABLE_TRUE	1
#define RAPID_CITY_RCIPROUTINGREDISTRIBUTEOSPFTORIPENABLE_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcIpRoutingRedistributeOspfToRipEnable[];

#define RAPID_CITY_RCIPROUTINGREDISTRIBUTEOSPFTORIPUSEEXPLICITMETRIC_TRUE	1
#define RAPID_CITY_RCIPROUTINGREDISTRIBUTEOSPFTORIPUSEEXPLICITMETRIC_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcIpRoutingRedistributeOspfToRipUseExplicitMetric[];

#define RAPID_CITY_RCIPROUTINGREDISTRIBUTEDIRECTTOOSPFENABLE_TRUE	1
#define RAPID_CITY_RCIPROUTINGREDISTRIBUTEDIRECTTOOSPFENABLE_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcIpRoutingRedistributeDirectToOspfEnable[];

#define RAPID_CITY_RCIPROUTINGREDISTRIBUTEDIRECTTOOSPFMETHOD_USEPORTSPEED	1
#define RAPID_CITY_RCIPROUTINGREDISTRIBUTEDIRECTTOOSPFMETHOD_USEEXPLICITMETRIC	2

extern GSnmpEnum const rapid_city_enums_rcIpRoutingRedistributeDirectToOspfMethod[];

#define RAPID_CITY_RCIPROUTINGREDISTRIBUTEDIRECTTOOSPFEXTERNALMETRICTYPE_TYPE1	1
#define RAPID_CITY_RCIPROUTINGREDISTRIBUTEDIRECTTOOSPFEXTERNALMETRICTYPE_TYPE2	2

extern GSnmpEnum const rapid_city_enums_rcIpRoutingRedistributeDirectToOspfExternalMetricType[];

#define RAPID_CITY_RCIPROUTINGREDISTRIBUTESTATICTOOSPFENABLE_TRUE	1
#define RAPID_CITY_RCIPROUTINGREDISTRIBUTESTATICTOOSPFENABLE_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcIpRoutingRedistributeStaticToOspfEnable[];

#define RAPID_CITY_RCIPROUTINGREDISTRIBUTESTATICTOOSPFUSEEXPLICITMETRIC_TRUE	1
#define RAPID_CITY_RCIPROUTINGREDISTRIBUTESTATICTOOSPFUSEEXPLICITMETRIC_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcIpRoutingRedistributeStaticToOspfUseExplicitMetric[];

#define RAPID_CITY_RCIPROUTINGREDISTRIBUTESTATICTOOSPFEXTERNALMETRICTYPE_TYPE1	1
#define RAPID_CITY_RCIPROUTINGREDISTRIBUTESTATICTOOSPFEXTERNALMETRICTYPE_TYPE2	2

extern GSnmpEnum const rapid_city_enums_rcIpRoutingRedistributeStaticToOspfExternalMetricType[];

#define RAPID_CITY_RCIPROUTINGREDISTRIBUTESTATICTOOSPFADVERTDEFRTE_TRUE	1
#define RAPID_CITY_RCIPROUTINGREDISTRIBUTESTATICTOOSPFADVERTDEFRTE_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcIpRoutingRedistributeStaticToOspfAdvertDefRte[];

#define RAPID_CITY_RCIPROUTINGREDISTRIBUTEDIRECTTORIPENABLE_TRUE	1
#define RAPID_CITY_RCIPROUTINGREDISTRIBUTEDIRECTTORIPENABLE_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcIpRoutingRedistributeDirectToRipEnable[];

#define RAPID_CITY_RCIPROUTINGREDISTRIBUTESTATICTORIPENABLE_TRUE	1
#define RAPID_CITY_RCIPROUTINGREDISTRIBUTESTATICTORIPENABLE_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcIpRoutingRedistributeStaticToRipEnable[];

#define RAPID_CITY_RCIPCONFIGMPVERSION_VERSION1	1
#define RAPID_CITY_RCIPCONFIGMPVERSION_VERSION2	2

extern GSnmpEnum const rapid_city_enums_rcIpConfIgmpVersion[];

#define RAPID_CITY_RCIPCONFIGMPLEAVEENABLED_TRUE	1
#define RAPID_CITY_RCIPCONFIGMPLEAVEENABLED_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcIpConfIgmpLeaveEnabled[];

#define RAPID_CITY_RCIPCONFIGMPROWSTATUS_ACTIVE	1
#define RAPID_CITY_RCIPCONFIGMPROWSTATUS_NOTINSERVICE	2
#define RAPID_CITY_RCIPCONFIGMPROWSTATUS_NOTREADY	3
#define RAPID_CITY_RCIPCONFIGMPROWSTATUS_CREATEANDGO	4
#define RAPID_CITY_RCIPCONFIGMPROWSTATUS_CREATEANDWAIT	5
#define RAPID_CITY_RCIPCONFIGMPROWSTATUS_DESTROY	6

extern GSnmpEnum const rapid_city_enums_rcIpConfIgmpRowStatus[];

#define RAPID_CITY_RCIPROUTETYPE_OTHER	1
#define RAPID_CITY_RCIPROUTETYPE_DIRECT	3
#define RAPID_CITY_RCIPROUTETYPE_INDIRECT	4

extern GSnmpEnum const rapid_city_enums_rcIpRouteType[];

#define RAPID_CITY_RCIPROUTEPROTO_OTHER	1
#define RAPID_CITY_RCIPROUTEPROTO_LOCAL	2
#define RAPID_CITY_RCIPROUTEPROTO_NETMGMT	3
#define RAPID_CITY_RCIPROUTEPROTO_ICMP	4
#define RAPID_CITY_RCIPROUTEPROTO_EGP	5
#define RAPID_CITY_RCIPROUTEPROTO_GGP	6
#define RAPID_CITY_RCIPROUTEPROTO_HELLO	7
#define RAPID_CITY_RCIPROUTEPROTO_RIP	8
#define RAPID_CITY_RCIPROUTEPROTO_IS_IS	9
#define RAPID_CITY_RCIPROUTEPROTO_ES_IS	10
#define RAPID_CITY_RCIPROUTEPROTO_CISCOIGRP	11
#define RAPID_CITY_RCIPROUTEPROTO_BBNSPFIGP	12
#define RAPID_CITY_RCIPROUTEPROTO_OSPF	13
#define RAPID_CITY_RCIPROUTEPROTO_BGP	14

extern GSnmpEnum const rapid_city_enums_rcIpRouteProto[];

#define RAPID_CITY_RCIPROUTEROWSTATUS_ACTIVE	1
#define RAPID_CITY_RCIPROUTEROWSTATUS_NOTINSERVICE	2
#define RAPID_CITY_RCIPROUTEROWSTATUS_NOTREADY	3
#define RAPID_CITY_RCIPROUTEROWSTATUS_CREATEANDGO	4
#define RAPID_CITY_RCIPROUTEROWSTATUS_CREATEANDWAIT	5
#define RAPID_CITY_RCIPROUTEROWSTATUS_DESTROY	6

extern GSnmpEnum const rapid_city_enums_rcIpRouteRowStatus[];

#define RAPID_CITY_RCIPCONFDHCPMODE_NONE	0
#define RAPID_CITY_RCIPCONFDHCPMODE_BOOTP	2
#define RAPID_CITY_RCIPCONFDHCPMODE_DHCP	3
#define RAPID_CITY_RCIPCONFDHCPMODE_BOTH	4

extern GSnmpEnum const rapid_city_enums_rcIpConfDhcpMode[];

#define RAPID_CITY_RCIPCONFDHCPROWSTATUS_ACTIVE	1
#define RAPID_CITY_RCIPCONFDHCPROWSTATUS_NOTINSERVICE	2
#define RAPID_CITY_RCIPCONFDHCPROWSTATUS_NOTREADY	3
#define RAPID_CITY_RCIPCONFDHCPROWSTATUS_CREATEANDGO	4
#define RAPID_CITY_RCIPCONFDHCPROWSTATUS_CREATEANDWAIT	5
#define RAPID_CITY_RCIPCONFDHCPROWSTATUS_DESTROY	6

extern GSnmpEnum const rapid_city_enums_rcIpConfDhcpRowStatus[];

#define RAPID_CITY_RCIPCONFDHCPALWAYSBROADCAST_TRUE	1
#define RAPID_CITY_RCIPCONFDHCPALWAYSBROADCAST_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcIpConfDhcpAlwaysBroadcast[];

#define RAPID_CITY_RCIPDHCPFORWARDENABLE_TRUE	1
#define RAPID_CITY_RCIPDHCPFORWARDENABLE_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcIpDhcpForwardEnable[];

#define RAPID_CITY_RCIPDHCPFORWARDMODE_NONE	0
#define RAPID_CITY_RCIPDHCPFORWARDMODE_BOOTP	2
#define RAPID_CITY_RCIPDHCPFORWARDMODE_DHCP	3
#define RAPID_CITY_RCIPDHCPFORWARDMODE_BOTH	4

extern GSnmpEnum const rapid_city_enums_rcIpDhcpForwardMode[];

#define RAPID_CITY_RCIPDHCPFORWARDROWSTATUS_ACTIVE	1
#define RAPID_CITY_RCIPDHCPFORWARDROWSTATUS_NOTINSERVICE	2
#define RAPID_CITY_RCIPDHCPFORWARDROWSTATUS_NOTREADY	3
#define RAPID_CITY_RCIPDHCPFORWARDROWSTATUS_CREATEANDGO	4
#define RAPID_CITY_RCIPDHCPFORWARDROWSTATUS_CREATEANDWAIT	5
#define RAPID_CITY_RCIPDHCPFORWARDROWSTATUS_DESTROY	6

extern GSnmpEnum const rapid_city_enums_rcIpDhcpForwardRowStatus[];

#define RAPID_CITY_RCIPFILTERTYPE_GLOBAL	1
#define RAPID_CITY_RCIPFILTERTYPE_DESTINATION	2
#define RAPID_CITY_RCIPFILTERTYPE_SOURCE	3

extern GSnmpEnum const rapid_city_enums_rcIpFilterType[];

#define RAPID_CITY_RCIPFILTERPROTOCOLTYPE_IGNORE	0
#define RAPID_CITY_RCIPFILTERPROTOCOLTYPE_ICMP	1
#define RAPID_CITY_RCIPFILTERPROTOCOLTYPE_TCP	6
#define RAPID_CITY_RCIPFILTERPROTOCOLTYPE_UDP	17

extern GSnmpEnum const rapid_city_enums_rcIpFilterProtocolType[];

#define RAPID_CITY_RCIPFILTERSRCOPTION_EQUAL	0
#define RAPID_CITY_RCIPFILTERSRCOPTION_NOTEQUAL	1
#define RAPID_CITY_RCIPFILTERSRCOPTION_GREATER	2
#define RAPID_CITY_RCIPFILTERSRCOPTION_LESS	3
#define RAPID_CITY_RCIPFILTERSRCOPTION_IGNORE	4

extern GSnmpEnum const rapid_city_enums_rcIpFilterSrcOption[];

#define RAPID_CITY_RCIPFILTERDSTOPTION_EQUAL	0
#define RAPID_CITY_RCIPFILTERDSTOPTION_NOTEQUAL	1
#define RAPID_CITY_RCIPFILTERDSTOPTION_GREATER	2
#define RAPID_CITY_RCIPFILTERDSTOPTION_LESS	3
#define RAPID_CITY_RCIPFILTERDSTOPTION_IGNORE	4

extern GSnmpEnum const rapid_city_enums_rcIpFilterDstOption[];

#define RAPID_CITY_RCIPFILTERCOPYTOCPU_TRUE	1
#define RAPID_CITY_RCIPFILTERCOPYTOCPU_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcIpFilterCopyToCpu[];

#define RAPID_CITY_RCIPFILTERMIRROR_TRUE	1
#define RAPID_CITY_RCIPFILTERMIRROR_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcIpFilterMirror[];

#define RAPID_CITY_RCIPFILTERHIGHPRIORITY_TRUE	1
#define RAPID_CITY_RCIPFILTERHIGHPRIORITY_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcIpFilterHighPriority[];

#define RAPID_CITY_RCIPFILTERTCPCONNECT_TRUE	1
#define RAPID_CITY_RCIPFILTERTCPCONNECT_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcIpFilterTcpConnect[];

#define RAPID_CITY_RCIPFILTERUSEPKTLIMIT_TRUE	1
#define RAPID_CITY_RCIPFILTERUSEPKTLIMIT_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcIpFilterUsePktLimit[];

#define RAPID_CITY_RCIPFILTERROWSTATUS_ACTIVE	1
#define RAPID_CITY_RCIPFILTERROWSTATUS_NOTINSERVICE	2
#define RAPID_CITY_RCIPFILTERROWSTATUS_NOTREADY	3
#define RAPID_CITY_RCIPFILTERROWSTATUS_CREATEANDGO	4
#define RAPID_CITY_RCIPFILTERROWSTATUS_CREATEANDWAIT	5
#define RAPID_CITY_RCIPFILTERROWSTATUS_DESTROY	6

extern GSnmpEnum const rapid_city_enums_rcIpFilterRowStatus[];

#define RAPID_CITY_RCIPFILTERMODE_USEDEFAULTACTION	1
#define RAPID_CITY_RCIPFILTERMODE_FORWARD	2
#define RAPID_CITY_RCIPFILTERMODE_DROP	3

extern GSnmpEnum const rapid_city_enums_rcIpFilterMode[];

#define RAPID_CITY_RCIPFILTERGLOBALLISTROWSTATUS_ACTIVE	1
#define RAPID_CITY_RCIPFILTERGLOBALLISTROWSTATUS_NOTINSERVICE	2
#define RAPID_CITY_RCIPFILTERGLOBALLISTROWSTATUS_NOTREADY	3
#define RAPID_CITY_RCIPFILTERGLOBALLISTROWSTATUS_CREATEANDGO	4
#define RAPID_CITY_RCIPFILTERGLOBALLISTROWSTATUS_CREATEANDWAIT	5
#define RAPID_CITY_RCIPFILTERGLOBALLISTROWSTATUS_DESTROY	6

extern GSnmpEnum const rapid_city_enums_rcIpFilterGlobalListRowStatus[];

#define RAPID_CITY_RCIPFILTERBASELISTROWSTATUS_ACTIVE	1
#define RAPID_CITY_RCIPFILTERBASELISTROWSTATUS_NOTINSERVICE	2
#define RAPID_CITY_RCIPFILTERBASELISTROWSTATUS_NOTREADY	3
#define RAPID_CITY_RCIPFILTERBASELISTROWSTATUS_CREATEANDGO	4
#define RAPID_CITY_RCIPFILTERBASELISTROWSTATUS_CREATEANDWAIT	5
#define RAPID_CITY_RCIPFILTERBASELISTROWSTATUS_DESTROY	6

extern GSnmpEnum const rapid_city_enums_rcIpFilterBaseListRowStatus[];

#define RAPID_CITY_RCIPFILTERPORTMODE_PERMIT	1
#define RAPID_CITY_RCIPFILTERPORTMODE_DENY	2
#define RAPID_CITY_RCIPFILTERPORTMODE_NONE	3

extern GSnmpEnum const rapid_city_enums_rcIpFilterPortMode[];

#define RAPID_CITY_RCIPFILTERPORTENABLE_TRUE	1
#define RAPID_CITY_RCIPFILTERPORTENABLE_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcIpFilterPortEnable[];

#define RAPID_CITY_RCIPFILTERPORTROWSTATUS_ACTIVE	1
#define RAPID_CITY_RCIPFILTERPORTROWSTATUS_NOTINSERVICE	2
#define RAPID_CITY_RCIPFILTERPORTROWSTATUS_NOTREADY	3
#define RAPID_CITY_RCIPFILTERPORTROWSTATUS_CREATEANDGO	4
#define RAPID_CITY_RCIPFILTERPORTROWSTATUS_CREATEANDWAIT	5
#define RAPID_CITY_RCIPFILTERPORTROWSTATUS_DESTROY	6

extern GSnmpEnum const rapid_city_enums_rcIpFilterPortRowStatus[];

#define RAPID_CITY_RCIPFILTERPORTDEFAULTACTION_FORWARD	1
#define RAPID_CITY_RCIPFILTERPORTDEFAULTACTION_DROP	2
#define RAPID_CITY_RCIPFILTERPORTDEFAULTACTION_NONE	3

extern GSnmpEnum const rapid_city_enums_rcIpFilterPortDefaultAction[];

#define RAPID_CITY_RCIPPOLICYADDRROWSTATUS_ACTIVE	1
#define RAPID_CITY_RCIPPOLICYADDRROWSTATUS_NOTINSERVICE	2
#define RAPID_CITY_RCIPPOLICYADDRROWSTATUS_NOTREADY	3
#define RAPID_CITY_RCIPPOLICYADDRROWSTATUS_CREATEANDGO	4
#define RAPID_CITY_RCIPPOLICYADDRROWSTATUS_CREATEANDWAIT	5
#define RAPID_CITY_RCIPPOLICYADDRROWSTATUS_DESTROY	6

extern GSnmpEnum const rapid_city_enums_rcIpPolicyAddrRowStatus[];

#define RAPID_CITY_RCIPPOLICYNETROWSTATUS_ACTIVE	1
#define RAPID_CITY_RCIPPOLICYNETROWSTATUS_NOTINSERVICE	2
#define RAPID_CITY_RCIPPOLICYNETROWSTATUS_NOTREADY	3
#define RAPID_CITY_RCIPPOLICYNETROWSTATUS_CREATEANDGO	4
#define RAPID_CITY_RCIPPOLICYNETROWSTATUS_CREATEANDWAIT	5
#define RAPID_CITY_RCIPPOLICYNETROWSTATUS_DESTROY	6

extern GSnmpEnum const rapid_city_enums_rcIpPolicyNetRowStatus[];

#define RAPID_CITY_RCIPPOLICYADDRLISTROWSTATUS_ACTIVE	1
#define RAPID_CITY_RCIPPOLICYADDRLISTROWSTATUS_NOTINSERVICE	2
#define RAPID_CITY_RCIPPOLICYADDRLISTROWSTATUS_NOTREADY	3
#define RAPID_CITY_RCIPPOLICYADDRLISTROWSTATUS_CREATEANDGO	4
#define RAPID_CITY_RCIPPOLICYADDRLISTROWSTATUS_CREATEANDWAIT	5
#define RAPID_CITY_RCIPPOLICYADDRLISTROWSTATUS_DESTROY	6

extern GSnmpEnum const rapid_city_enums_rcIpPolicyAddrListRowStatus[];

#define RAPID_CITY_RCIPPOLICYRIPANNOUNCEENABLE_TRUE	1
#define RAPID_CITY_RCIPPOLICYRIPANNOUNCEENABLE_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcIpPolicyRipAnnounceEnable[];

#define RAPID_CITY_RCIPPOLICYRIPANNOUNCEROUTESOURCE_DIRECT	1
#define RAPID_CITY_RCIPPOLICYRIPANNOUNCEROUTESOURCE_STATIC	2
#define RAPID_CITY_RCIPPOLICYRIPANNOUNCEROUTESOURCE_RIP	4
#define RAPID_CITY_RCIPPOLICYRIPANNOUNCEROUTESOURCE_OSPF	8
#define RAPID_CITY_RCIPPOLICYRIPANNOUNCEROUTESOURCE_ANY	15

extern GSnmpEnum const rapid_city_enums_rcIpPolicyRipAnnounceRouteSource[];

#define RAPID_CITY_RCIPPOLICYRIPANNOUNCEACTION_ANNOUNCE	1
#define RAPID_CITY_RCIPPOLICYRIPANNOUNCEACTION_IGNORE	2

extern GSnmpEnum const rapid_city_enums_rcIpPolicyRipAnnounceAction[];

#define RAPID_CITY_RCIPPOLICYRIPANNOUNCEOSPFROUTETYPE_TYPE1	1
#define RAPID_CITY_RCIPPOLICYRIPANNOUNCEOSPFROUTETYPE_TYPE2	2
#define RAPID_CITY_RCIPPOLICYRIPANNOUNCEOSPFROUTETYPE_EXTERNAL	3
#define RAPID_CITY_RCIPPOLICYRIPANNOUNCEOSPFROUTETYPE_INTERNAL	4
#define RAPID_CITY_RCIPPOLICYRIPANNOUNCEOSPFROUTETYPE_ANY	5

extern GSnmpEnum const rapid_city_enums_rcIpPolicyRipAnnounceOspfRouteType[];

#define RAPID_CITY_RCIPPOLICYRIPANNOUNCEROWSTATUS_ACTIVE	1
#define RAPID_CITY_RCIPPOLICYRIPANNOUNCEROWSTATUS_NOTINSERVICE	2
#define RAPID_CITY_RCIPPOLICYRIPANNOUNCEROWSTATUS_NOTREADY	3
#define RAPID_CITY_RCIPPOLICYRIPANNOUNCEROWSTATUS_CREATEANDGO	4
#define RAPID_CITY_RCIPPOLICYRIPANNOUNCEROWSTATUS_CREATEANDWAIT	5
#define RAPID_CITY_RCIPPOLICYRIPANNOUNCEROWSTATUS_DESTROY	6

extern GSnmpEnum const rapid_city_enums_rcIpPolicyRipAnnounceRowStatus[];

#define RAPID_CITY_RCIPPOLICYOSPFANNOUNCEENABLE_TRUE	1
#define RAPID_CITY_RCIPPOLICYOSPFANNOUNCEENABLE_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcIpPolicyOspfAnnounceEnable[];

#define RAPID_CITY_RCIPPOLICYOSPFANNOUNCEROUTESOURCE_DIRECT	1
#define RAPID_CITY_RCIPPOLICYOSPFANNOUNCEROUTESOURCE_STATIC	2
#define RAPID_CITY_RCIPPOLICYOSPFANNOUNCEROUTESOURCE_RIP	4
#define RAPID_CITY_RCIPPOLICYOSPFANNOUNCEROUTESOURCE_ANY	7

extern GSnmpEnum const rapid_city_enums_rcIpPolicyOspfAnnounceRouteSource[];

#define RAPID_CITY_RCIPPOLICYOSPFANNOUNCEACTION_ANNOUNCE	1
#define RAPID_CITY_RCIPPOLICYOSPFANNOUNCEACTION_IGNORE	2

extern GSnmpEnum const rapid_city_enums_rcIpPolicyOspfAnnounceAction[];

#define RAPID_CITY_RCIPPOLICYOSPFANNOUNCEEXTMETRICTYPE_TYPE1	1
#define RAPID_CITY_RCIPPOLICYOSPFANNOUNCEEXTMETRICTYPE_TYPE2	2

extern GSnmpEnum const rapid_city_enums_rcIpPolicyOspfAnnounceExtMetricType[];

#define RAPID_CITY_RCIPPOLICYOSPFANNOUNCEROWSTATUS_ACTIVE	1
#define RAPID_CITY_RCIPPOLICYOSPFANNOUNCEROWSTATUS_NOTINSERVICE	2
#define RAPID_CITY_RCIPPOLICYOSPFANNOUNCEROWSTATUS_NOTREADY	3
#define RAPID_CITY_RCIPPOLICYOSPFANNOUNCEROWSTATUS_CREATEANDGO	4
#define RAPID_CITY_RCIPPOLICYOSPFANNOUNCEROWSTATUS_CREATEANDWAIT	5
#define RAPID_CITY_RCIPPOLICYOSPFANNOUNCEROWSTATUS_DESTROY	6

extern GSnmpEnum const rapid_city_enums_rcIpPolicyOspfAnnounceRowStatus[];

#define RAPID_CITY_RCIPPOLICYRIPACCEPTENABLE_TRUE	1
#define RAPID_CITY_RCIPPOLICYRIPACCEPTENABLE_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcIpPolicyRipAcceptEnable[];

#define RAPID_CITY_RCIPPOLICYRIPACCEPTACTION_ACCEPT	1
#define RAPID_CITY_RCIPPOLICYRIPACCEPTACTION_IGNORE	2

extern GSnmpEnum const rapid_city_enums_rcIpPolicyRipAcceptAction[];

#define RAPID_CITY_RCIPPOLICYRIPACCEPTROWSTATUS_ACTIVE	1
#define RAPID_CITY_RCIPPOLICYRIPACCEPTROWSTATUS_NOTINSERVICE	2
#define RAPID_CITY_RCIPPOLICYRIPACCEPTROWSTATUS_NOTREADY	3
#define RAPID_CITY_RCIPPOLICYRIPACCEPTROWSTATUS_CREATEANDGO	4
#define RAPID_CITY_RCIPPOLICYRIPACCEPTROWSTATUS_CREATEANDWAIT	5
#define RAPID_CITY_RCIPPOLICYRIPACCEPTROWSTATUS_DESTROY	6

extern GSnmpEnum const rapid_city_enums_rcIpPolicyRipAcceptRowStatus[];

#define RAPID_CITY_RCIPPOLICYOSPFACCEPTENABLE_TRUE	1
#define RAPID_CITY_RCIPPOLICYOSPFACCEPTENABLE_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcIpPolicyOspfAcceptEnable[];

#define RAPID_CITY_RCIPPOLICYOSPFACCEPTACTION_ACCEPT	1
#define RAPID_CITY_RCIPPOLICYOSPFACCEPTACTION_IGNORE	2

extern GSnmpEnum const rapid_city_enums_rcIpPolicyOspfAcceptAction[];

#define RAPID_CITY_RCIPPOLICYOSPFACCEPTEXTTYPE_TYPE1	1
#define RAPID_CITY_RCIPPOLICYOSPFACCEPTEXTTYPE_TYPE2	2
#define RAPID_CITY_RCIPPOLICYOSPFACCEPTEXTTYPE_ANY	3

extern GSnmpEnum const rapid_city_enums_rcIpPolicyOspfAcceptExtType[];

#define RAPID_CITY_RCIPPOLICYOSPFACCEPTROWSTATUS_ACTIVE	1
#define RAPID_CITY_RCIPPOLICYOSPFACCEPTROWSTATUS_NOTINSERVICE	2
#define RAPID_CITY_RCIPPOLICYOSPFACCEPTROWSTATUS_NOTREADY	3
#define RAPID_CITY_RCIPPOLICYOSPFACCEPTROWSTATUS_CREATEANDGO	4
#define RAPID_CITY_RCIPPOLICYOSPFACCEPTROWSTATUS_CREATEANDWAIT	5
#define RAPID_CITY_RCIPPOLICYOSPFACCEPTROWSTATUS_DESTROY	6

extern GSnmpEnum const rapid_city_enums_rcIpPolicyOspfAcceptRowStatus[];

#define RAPID_CITY_RCIPPOLICYNETLISTROWSTATUS_ACTIVE	1
#define RAPID_CITY_RCIPPOLICYNETLISTROWSTATUS_NOTINSERVICE	2
#define RAPID_CITY_RCIPPOLICYNETLISTROWSTATUS_NOTREADY	3
#define RAPID_CITY_RCIPPOLICYNETLISTROWSTATUS_CREATEANDGO	4
#define RAPID_CITY_RCIPPOLICYNETLISTROWSTATUS_CREATEANDWAIT	5
#define RAPID_CITY_RCIPPOLICYNETLISTROWSTATUS_DESTROY	6

extern GSnmpEnum const rapid_city_enums_rcIpPolicyNetListRowStatus[];

#define RAPID_CITY_RCIPDVMRPENABLE_TRUE	1
#define RAPID_CITY_RCIPDVMRPENABLE_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcIpDvmrpEnable[];

#define RAPID_CITY_RCIPCONFDVMRPTABLEENABLE_TRUE	1
#define RAPID_CITY_RCIPCONFDVMRPTABLEENABLE_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcIpConfDvmrpTableEnable[];

#define RAPID_CITY_RCIPUDPPROTOCOLROWSTATUS_ACTIVE	1
#define RAPID_CITY_RCIPUDPPROTOCOLROWSTATUS_NOTINSERVICE	2
#define RAPID_CITY_RCIPUDPPROTOCOLROWSTATUS_NOTREADY	3
#define RAPID_CITY_RCIPUDPPROTOCOLROWSTATUS_CREATEANDGO	4
#define RAPID_CITY_RCIPUDPPROTOCOLROWSTATUS_CREATEANDWAIT	5
#define RAPID_CITY_RCIPUDPPROTOCOLROWSTATUS_DESTROY	6

extern GSnmpEnum const rapid_city_enums_rcIpUdpProtocolRowStatus[];

#define RAPID_CITY_RCIPUDPPORTFWDROWSTATUS_ACTIVE	1
#define RAPID_CITY_RCIPUDPPORTFWDROWSTATUS_NOTINSERVICE	2
#define RAPID_CITY_RCIPUDPPORTFWDROWSTATUS_NOTREADY	3
#define RAPID_CITY_RCIPUDPPORTFWDROWSTATUS_CREATEANDGO	4
#define RAPID_CITY_RCIPUDPPORTFWDROWSTATUS_CREATEANDWAIT	5
#define RAPID_CITY_RCIPUDPPORTFWDROWSTATUS_DESTROY	6

extern GSnmpEnum const rapid_city_enums_rcIpUdpPortFwdRowStatus[];

#define RAPID_CITY_RCIPUDPPORTFWDLISTROWSTATUS_ACTIVE	1
#define RAPID_CITY_RCIPUDPPORTFWDLISTROWSTATUS_NOTINSERVICE	2
#define RAPID_CITY_RCIPUDPPORTFWDLISTROWSTATUS_NOTREADY	3
#define RAPID_CITY_RCIPUDPPORTFWDLISTROWSTATUS_CREATEANDGO	4
#define RAPID_CITY_RCIPUDPPORTFWDLISTROWSTATUS_CREATEANDWAIT	5
#define RAPID_CITY_RCIPUDPPORTFWDLISTROWSTATUS_DESTROY	6

extern GSnmpEnum const rapid_city_enums_rcIpUdpPortFwdListRowStatus[];

#define RAPID_CITY_RCIPUDPCONFBROADCASTINTFROWSTATUS_ACTIVE	1
#define RAPID_CITY_RCIPUDPCONFBROADCASTINTFROWSTATUS_NOTINSERVICE	2
#define RAPID_CITY_RCIPUDPCONFBROADCASTINTFROWSTATUS_NOTREADY	3
#define RAPID_CITY_RCIPUDPCONFBROADCASTINTFROWSTATUS_CREATEANDGO	4
#define RAPID_CITY_RCIPUDPCONFBROADCASTINTFROWSTATUS_CREATEANDWAIT	5
#define RAPID_CITY_RCIPUDPCONFBROADCASTINTFROWSTATUS_DESTROY	6

extern GSnmpEnum const rapid_city_enums_rcIpUdpConfBroadcastIntfRowStatus[];

#define RAPID_CITY_RCARPEXTENTDOPROXY_DISABLE	1
#define RAPID_CITY_RCARPEXTENTDOPROXY_ENABLE	2

extern GSnmpEnum const rapid_city_enums_rcArpExtEntDoProxy[];

#define RAPID_CITY_RCARPEXTENTDORESP_DISABLE	1
#define RAPID_CITY_RCARPEXTENTDORESP_ENABLE	2

extern GSnmpEnum const rapid_city_enums_rcArpExtEntDoResp[];

#define RAPID_CITY_RCRIPEXTOPERATION_DISABLE	1
#define RAPID_CITY_RCRIPEXTOPERATION_ENABLE	2

extern GSnmpEnum const rapid_city_enums_rcRipExtOperation[];

#define RAPID_CITY_RCRIPEXTENTTALK_DISABLE	1
#define RAPID_CITY_RCRIPEXTENTTALK_ENABLE	2

extern GSnmpEnum const rapid_city_enums_rcRipExtEntTalk[];

#define RAPID_CITY_RCRIPEXTENTLISTEN_DISABLE	1
#define RAPID_CITY_RCRIPEXTENTLISTEN_ENABLE	2

extern GSnmpEnum const rapid_city_enums_rcRipExtEntListen[];

#define RAPID_CITY_RCRIPEXTENTPOISON_DISABLE	1
#define RAPID_CITY_RCRIPEXTENTPOISON_ENABLE	2

extern GSnmpEnum const rapid_city_enums_rcRipExtEntPoison[];

#define RAPID_CITY_RCSTGPROTOCOLSPECIFICATION_UNKNOWN	1
#define RAPID_CITY_RCSTGPROTOCOLSPECIFICATION_DECLB100	2
#define RAPID_CITY_RCSTGPROTOCOLSPECIFICATION_IEEE8021D	3

extern GSnmpEnum const rapid_city_enums_rcStgProtocolSpecification[];

#define RAPID_CITY_RCSTGENABLESTP_TRUE	1
#define RAPID_CITY_RCSTGENABLESTP_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcStgEnableStp[];

#define RAPID_CITY_RCSTGSTPTRAPENABLE_TRUE	1
#define RAPID_CITY_RCSTGSTPTRAPENABLE_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcStgStpTrapEnable[];

#define RAPID_CITY_RCSTGROWSTATUS_ACTIVE	1
#define RAPID_CITY_RCSTGROWSTATUS_NOTINSERVICE	2
#define RAPID_CITY_RCSTGROWSTATUS_NOTREADY	3
#define RAPID_CITY_RCSTGROWSTATUS_CREATEANDGO	4
#define RAPID_CITY_RCSTGROWSTATUS_CREATEANDWAIT	5
#define RAPID_CITY_RCSTGROWSTATUS_DESTROY	6

extern GSnmpEnum const rapid_city_enums_rcStgRowStatus[];

#define RAPID_CITY_RCSTGPORTSTATE_DISABLED	1
#define RAPID_CITY_RCSTGPORTSTATE_BLOCKING	2
#define RAPID_CITY_RCSTGPORTSTATE_LISTENING	3
#define RAPID_CITY_RCSTGPORTSTATE_LEARNING	4
#define RAPID_CITY_RCSTGPORTSTATE_FORWARDING	5
#define RAPID_CITY_RCSTGPORTSTATE_BROKEN	6

extern GSnmpEnum const rapid_city_enums_rcStgPortState[];

#define RAPID_CITY_RCSTGPORTENABLESTP_TRUE	1
#define RAPID_CITY_RCSTGPORTENABLESTP_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcStgPortEnableStp[];

#define RAPID_CITY_RCSTGPORTFASTSTART_TRUE	1
#define RAPID_CITY_RCSTGPORTFASTSTART_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcStgPortFastStart[];

#define RAPID_CITY_RCSTGPORTROWSTATUS_ACTIVE	1
#define RAPID_CITY_RCSTGPORTROWSTATUS_NOTINSERVICE	2
#define RAPID_CITY_RCSTGPORTROWSTATUS_NOTREADY	3
#define RAPID_CITY_RCSTGPORTROWSTATUS_CREATEANDGO	4
#define RAPID_CITY_RCSTGPORTROWSTATUS_CREATEANDWAIT	5
#define RAPID_CITY_RCSTGPORTROWSTATUS_DESTROY	6

extern GSnmpEnum const rapid_city_enums_rcStgPortRowStatus[];

#define RAPID_CITY_RCBRIDGEFDBSTATUS_OTHER	1
#define RAPID_CITY_RCBRIDGEFDBSTATUS_INVALID	2
#define RAPID_CITY_RCBRIDGEFDBSTATUS_LEARNED	3
#define RAPID_CITY_RCBRIDGEFDBSTATUS_SELF	4
#define RAPID_CITY_RCBRIDGEFDBSTATUS_MGMT	5

extern GSnmpEnum const rapid_city_enums_rcBridgeFdbStatus[];

#define RAPID_CITY_RCBRIDGEFDBMONITOR_TRUE	1
#define RAPID_CITY_RCBRIDGEFDBMONITOR_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcBridgeFdbMonitor[];

#define RAPID_CITY_RCBRIDGEFDBPRIORITY_LOW	0
#define RAPID_CITY_RCBRIDGEFDBPRIORITY_HIGH	1

extern GSnmpEnum const rapid_city_enums_rcBridgeFdbPriority[];

#define RAPID_CITY_RCBRIDGESTATICMONITOR_TRUE	1
#define RAPID_CITY_RCBRIDGESTATICMONITOR_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcBridgeStaticMonitor[];

#define RAPID_CITY_RCBRIDGESTATICPRIORITY_LOW	0
#define RAPID_CITY_RCBRIDGESTATICPRIORITY_HIGH	1

extern GSnmpEnum const rapid_city_enums_rcBridgeStaticPriority[];

#define RAPID_CITY_RCBRIDGESTATICSTATUS_OTHER	1
#define RAPID_CITY_RCBRIDGESTATICSTATUS_INVALID	2
#define RAPID_CITY_RCBRIDGESTATICSTATUS_PERMANENT	3
#define RAPID_CITY_RCBRIDGESTATICSTATUS_DELETEONRESET	4
#define RAPID_CITY_RCBRIDGESTATICSTATUS_DELETEONTIMEOUT	5

extern GSnmpEnum const rapid_city_enums_rcBridgeStaticStatus[];

#define RAPID_CITY_RCBRIDGEFILTERSTATUS_OTHER	1
#define RAPID_CITY_RCBRIDGEFILTERSTATUS_INVALID	2
#define RAPID_CITY_RCBRIDGEFILTERSTATUS_PERMANENT	3
#define RAPID_CITY_RCBRIDGEFILTERSTATUS_DELETEONRESET	4
#define RAPID_CITY_RCBRIDGEFILTERSTATUS_DELETEONTIMEOUT	5

extern GSnmpEnum const rapid_city_enums_rcBridgeFilterStatus[];

#define RAPID_CITY_RCBOOTPRIMARY_FLASH	1
#define RAPID_CITY_RCBOOTPRIMARY_PCMCIA	2
#define RAPID_CITY_RCBOOTPRIMARY_NET	3
#define RAPID_CITY_RCBOOTPRIMARY_SKIP	4

extern GSnmpEnum const rapid_city_enums_rcBootPrimary[];

#define RAPID_CITY_RCBOOTSECONDARY_FLASH	1
#define RAPID_CITY_RCBOOTSECONDARY_PCMCIA	2
#define RAPID_CITY_RCBOOTSECONDARY_NET	3
#define RAPID_CITY_RCBOOTSECONDARY_SKIP	4

extern GSnmpEnum const rapid_city_enums_rcBootSecondary[];

#define RAPID_CITY_RCBOOTTERTIARY_FLASH	1
#define RAPID_CITY_RCBOOTTERTIARY_PCMCIA	2
#define RAPID_CITY_RCBOOTTERTIARY_NET	3
#define RAPID_CITY_RCBOOTTERTIARY_SKIP	4

extern GSnmpEnum const rapid_city_enums_rcBootTertiary[];

#define RAPID_CITY_RCDEVICEPRIMARYSOURCE_FLASH	1
#define RAPID_CITY_RCDEVICEPRIMARYSOURCE_PCMCIA	2
#define RAPID_CITY_RCDEVICEPRIMARYSOURCE_NET	3
#define RAPID_CITY_RCDEVICEPRIMARYSOURCE_SKIP	4

extern GSnmpEnum const rapid_city_enums_rcDevicePrimarySource[];

#define RAPID_CITY_RCDEVICESECONDARYSOURCE_FLASH	1
#define RAPID_CITY_RCDEVICESECONDARYSOURCE_PCMCIA	2
#define RAPID_CITY_RCDEVICESECONDARYSOURCE_NET	3
#define RAPID_CITY_RCDEVICESECONDARYSOURCE_SKIP	4

extern GSnmpEnum const rapid_city_enums_rcDeviceSecondarySource[];

#define RAPID_CITY_RCDEVICETERTIARYSOURCE_FLASH	1
#define RAPID_CITY_RCDEVICETERTIARYSOURCE_PCMCIA	2
#define RAPID_CITY_RCDEVICETERTIARYSOURCE_NET	3
#define RAPID_CITY_RCDEVICETERTIARYSOURCE_SKIP	4

extern GSnmpEnum const rapid_city_enums_rcDeviceTertiarySource[];

#define RAPID_CITY_RCDEVICECONFIGSOURCE_FLASH	1
#define RAPID_CITY_RCDEVICECONFIGSOURCE_PCMCIA	2
#define RAPID_CITY_RCDEVICECONFIGSOURCE_NVRAM	5

extern GSnmpEnum const rapid_city_enums_rcDeviceConfigSource[];

#define RAPID_CITY_RCDEVICEACTION_NONE	1
#define RAPID_CITY_RCDEVICEACTION_SQUEEZEFLASH	2
#define RAPID_CITY_RCDEVICEACTION_SQUEEZEPCMCIA	3
#define RAPID_CITY_RCDEVICEACTION_FORMATFLASH	4
#define RAPID_CITY_RCDEVICEACTION_FORMATPCMCIA	5
#define RAPID_CITY_RCDEVICEACTION_RECOVERFLASH	6
#define RAPID_CITY_RCDEVICEACTION_RECOVERPCMCIA	7

extern GSnmpEnum const rapid_city_enums_rcDeviceAction[];

#define RAPID_CITY_RCDEVICERESULT_NONE	1
#define RAPID_CITY_RCDEVICERESULT_INPROGRESS	2
#define RAPID_CITY_RCDEVICERESULT_SUCCESS	3
#define RAPID_CITY_RCDEVICERESULT_FAIL	4

extern GSnmpEnum const rapid_city_enums_rcDeviceResult[];

#define RAPID_CITY_RCDEVICEFLASHFILETYPE_CONFIG	1
#define RAPID_CITY_RCDEVICEFLASHFILETYPE_LOG	2
#define RAPID_CITY_RCDEVICEFLASHFILETYPE_TRACE	3
#define RAPID_CITY_RCDEVICEFLASHFILETYPE_EXECUTABLE	4

extern GSnmpEnum const rapid_city_enums_rcDeviceFlashFileType[];

#define RAPID_CITY_RCDEVICEFLASHFILEMODE_COMPRESSED	1
#define RAPID_CITY_RCDEVICEFLASHFILEMODE_UNCOMPRESSED	2

extern GSnmpEnum const rapid_city_enums_rcDeviceFlashFileMode[];

#define RAPID_CITY_RCDEVICEFLASHFILESTATUS_ACTIVE	1
#define RAPID_CITY_RCDEVICEFLASHFILESTATUS_DELETED	2

extern GSnmpEnum const rapid_city_enums_rcDeviceFlashFileStatus[];

#define RAPID_CITY_RCDEVICEFLASHROWSTATUS_ACTIVE	1
#define RAPID_CITY_RCDEVICEFLASHROWSTATUS_NOTINSERVICE	2
#define RAPID_CITY_RCDEVICEFLASHROWSTATUS_NOTREADY	3
#define RAPID_CITY_RCDEVICEFLASHROWSTATUS_CREATEANDGO	4
#define RAPID_CITY_RCDEVICEFLASHROWSTATUS_CREATEANDWAIT	5
#define RAPID_CITY_RCDEVICEFLASHROWSTATUS_DESTROY	6

extern GSnmpEnum const rapid_city_enums_rcDeviceFlashRowStatus[];

#define RAPID_CITY_RCDEVICEPCMCIAFILETYPE_CONFIG	1
#define RAPID_CITY_RCDEVICEPCMCIAFILETYPE_LOG	2
#define RAPID_CITY_RCDEVICEPCMCIAFILETYPE_TRACE	3
#define RAPID_CITY_RCDEVICEPCMCIAFILETYPE_EXECUTABLE	4

extern GSnmpEnum const rapid_city_enums_rcDevicePcmciaFileType[];

#define RAPID_CITY_RCDEVICEPCMCIAFILEMODE_COMPRESSED	1
#define RAPID_CITY_RCDEVICEPCMCIAFILEMODE_UNCOMPRESSED	2

extern GSnmpEnum const rapid_city_enums_rcDevicePcmciaFileMode[];

#define RAPID_CITY_RCDEVICEPCMCIAFILESTATUS_ACTIVE	1
#define RAPID_CITY_RCDEVICEPCMCIAFILESTATUS_DELETED	2

extern GSnmpEnum const rapid_city_enums_rcDevicePcmciaFileStatus[];

#define RAPID_CITY_RCDEVICEPCMCIAROWSTATUS_ACTIVE	1
#define RAPID_CITY_RCDEVICEPCMCIAROWSTATUS_NOTINSERVICE	2
#define RAPID_CITY_RCDEVICEPCMCIAROWSTATUS_NOTREADY	3
#define RAPID_CITY_RCDEVICEPCMCIAROWSTATUS_CREATEANDGO	4
#define RAPID_CITY_RCDEVICEPCMCIAROWSTATUS_CREATEANDWAIT	5
#define RAPID_CITY_RCDEVICEPCMCIAROWSTATUS_DESTROY	6

extern GSnmpEnum const rapid_city_enums_rcDevicePcmciaRowStatus[];

#define RAPID_CITY_RCMLTPORTTYPE_ACCESS	1
#define RAPID_CITY_RCMLTPORTTYPE_TRUNK	2

extern GSnmpEnum const rapid_city_enums_rcMltPortType[];

#define RAPID_CITY_RCMLTROWSTATUS_ACTIVE	1
#define RAPID_CITY_RCMLTROWSTATUS_NOTINSERVICE	2
#define RAPID_CITY_RCMLTROWSTATUS_NOTREADY	3
#define RAPID_CITY_RCMLTROWSTATUS_CREATEANDGO	4
#define RAPID_CITY_RCMLTROWSTATUS_CREATEANDWAIT	5
#define RAPID_CITY_RCMLTROWSTATUS_DESTROY	6

extern GSnmpEnum const rapid_city_enums_rcMltRowStatus[];

#define RAPID_CITY_RCMLTENABLE_TRUE	1
#define RAPID_CITY_RCMLTENABLE_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcMltEnable[];

#define RAPID_CITY_RCMLTLOADBALANCE_TRUE	1
#define RAPID_CITY_RCMLTLOADBALANCE_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcMltLoadBalance[];

#define RAPID_CITY_RCMLTDISTRIBUTIONALGORITHM_NONE	1

extern GSnmpEnum const rapid_city_enums_rcMltDistributionAlgorithm[];

#define RAPID_CITY_RCWEBENABLESERVER_TRUE	1
#define RAPID_CITY_RCWEBENABLESERVER_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcWebEnableServer[];

#define RAPID_CITY_RCERRORRETURNCODE_NONE	100
#define RAPID_CITY_RCERRORRETURNCODE_RESOURCENOTAVAILABLE	101
#define RAPID_CITY_RCERRORRETURNCODE_OPERATIONNOTALLOWED	102
#define RAPID_CITY_RCERRORRETURNCODE_OPERATIONINPROGRESS	103
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDPORTNUMBER	104
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDSUBNETADDRESS	105
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDSUBNETMASK	106
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDVLANID	107
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDVLANNAME	108
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDVLANTYPE	109
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDSTGID	110
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDPROTOCOLID	111
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDPORTMEMBERS	112
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDSTATICMEMBERS	113
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDNOTALLOWEDMEMBERS	114
#define RAPID_CITY_RCERRORRETURNCODE_DESTINATIONNOTREACHABLE	115
#define RAPID_CITY_RCERRORRETURNCODE_TABLEISFULL	116
#define RAPID_CITY_RCERRORRETURNCODE_NONDUALCONNECTORGIGPORT	117
#define RAPID_CITY_RCERRORRETURNCODE_TESTIDNOTPRESENT	118
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDTESTID	119
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDSTATUSCHANGE	120
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDCPUCARD	121
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDSRCPORTCHOICE	122
#define RAPID_CITY_RCERRORRETURNCODE_DSTPORTUNSPECIFIED	123
#define RAPID_CITY_RCERRORRETURNCODE_SRCPORTONEUNSPECIFIED	124
#define RAPID_CITY_RCERRORRETURNCODE_SRCPORTTWOUNSPECIFIED	125
#define RAPID_CITY_RCERRORRETURNCODE_NOTSUPPORTED	126
#define RAPID_CITY_RCERRORRETURNCODE_USERNAMEISNONUNIQUE	127
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDNAME	128
#define RAPID_CITY_RCERRORRETURNCODE_CANNOTMODIFYTHISFIELD	130
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDUSERPASSWORDLENGTH	131
#define RAPID_CITY_RCERRORRETURNCODE_THISUSERNAMEEXISTS	132
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDIPADDRESS	133
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDMACADDRESS	134
#define RAPID_CITY_RCERRORRETURNCODE_NOSUCHENTRY	135
#define RAPID_CITY_RCERRORRETURNCODE_ANOTHERLOOPBACKTESTALREADYRUNNING	136
#define RAPID_CITY_RCERRORRETURNCODE_PROTOCOLIDNOTROUTABLE	137
#define RAPID_CITY_RCERRORRETURNCODE_AUTONEGOTIATEISON	138
#define RAPID_CITY_RCERRORRETURNCODE_NOACTIONSPECIFIED	139
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDACTIONSPECIFIED	140
#define RAPID_CITY_RCERRORRETURNCODE_CANNOTMODIFYAUTONEGOTIATEISON	141
#define RAPID_CITY_RCERRORRETURNCODE_CANNOTMODIFYAUTOPORTISFIBER	142
#define RAPID_CITY_RCERRORRETURNCODE_AUTONEGOTIATIONNOTSUPPORTED	143
#define RAPID_CITY_RCERRORRETURNCODE_CANNOTSETADMINSPEED	144
#define RAPID_CITY_RCERRORRETURNCODE_CANNOTSETADMINDUPLEX	145
#define RAPID_CITY_RCERRORRETURNCODE_OSPFRTRDEADINTISNOTMULTOFHELLOINT	146
#define RAPID_CITY_RCERRORRETURNCODE_OSPFRTRDEADINTLESSTHAN4TIMESHELLOINT	147
#define RAPID_CITY_RCERRORRETURNCODE_NOTUSED1	148
#define RAPID_CITY_RCERRORRETURNCODE_OSPFBADAUTHVALUE	149
#define RAPID_CITY_RCERRORRETURNCODE_OSPFENABLED	150
#define RAPID_CITY_RCERRORRETURNCODE_OSPFAREANOTFOUND	151
#define RAPID_CITY_RCERRORRETURNCODE_OSPFBACKBONEAREA	152
#define RAPID_CITY_RCERRORRETURNCODE_NOTINTESTMODE	153
#define RAPID_CITY_RCERRORRETURNCODE_OSPFINVALIDAREARANGEMASK	154
#define RAPID_CITY_RCERRORRETURNCODE_OSPFDUPLICATEENTRY	155
#define RAPID_CITY_RCERRORRETURNCODE_OSPFRANGENOTALLOCATED	156
#define RAPID_CITY_RCERRORRETURNCODE_OSPFAREARANGENOTFOUND	157
#define RAPID_CITY_RCERRORRETURNCODE_TESTRUNNING	158
#define RAPID_CITY_RCERRORRETURNCODE_NVRAMLIMITEXCEEDED	159
#define RAPID_CITY_RCERRORRETURNCODE_FLOWALREADYEXIST	160
#define RAPID_CITY_RCERRORRETURNCODE_FLOWNOTFOUND	161
#define RAPID_CITY_RCERRORRETURNCODE_DUPLICATEIPADDRESS	163
#define RAPID_CITY_RCERRORRETURNCODE_CONFLICTINGIPADDRESS	164
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDROUTECOST	165
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDNEXTHOP	166
#define RAPID_CITY_RCERRORRETURNCODE_DUPLICATEROUTE	167
#define RAPID_CITY_RCERRORRETURNCODE_CANNOTFINDROUTE	168
#define RAPID_CITY_RCERRORRETURNCODE_CANNOTDELETELOCALROUTE	169
#define RAPID_CITY_RCERRORRETURNCODE_BADDHCPMINSEC	170
#define RAPID_CITY_RCERRORRETURNCODE_BADDHCPMAXHOP	171
#define RAPID_CITY_RCERRORRETURNCODE_BADDHCPMODE	172
#define RAPID_CITY_RCERRORRETURNCODE_BADAGENTADDRESS	173
#define RAPID_CITY_RCERRORRETURNCODE_DHCPNOTENABLED	174
#define RAPID_CITY_RCERRORRETURNCODE_DHCPFORWARDNOTFOUND	175
#define RAPID_CITY_RCERRORRETURNCODE_DHCPDUPLICATEFORWARD	176
#define RAPID_CITY_RCERRORRETURNCODE_DHCPMAXFORWARD	177
#define RAPID_CITY_RCERRORRETURNCODE_DHCPBADENABLE	178
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDDEVICEFILENUMBER	179
#define RAPID_CITY_RCERRORRETURNCODE_NOTEXECUTABLEDEVICEFILE	180
#define RAPID_CITY_RCERRORRETURNCODE_DELETEDDEVICEFILE	181
#define RAPID_CITY_RCERRORRETURNCODE_PCMCIANOTPRESENT	182
#define RAPID_CITY_RCERRORRETURNCODE_PCMCIAWRITEPROTECTED	183
#define RAPID_CITY_RCERRORRETURNCODE_DISCONTIGUOUSSUBNETMASK	184
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDOSPFMETRIC	185
#define RAPID_CITY_RCERRORRETURNCODE_OSPFHOSTROUTENOTFOUND	186
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDMLTID	187
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDMLTNAME	188
#define RAPID_CITY_RCERRORRETURNCODE_ONLYONEPORTINMLT	189
#define RAPID_CITY_RCERRORRETURNCODE_MORETHAN4PORTSINMLT	190
#define RAPID_CITY_RCERRORRETURNCODE_PORTSINDIFFERENTQUID	191
#define RAPID_CITY_RCERRORRETURNCODE_PORTALREADYINANOTHERMLT	192
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDVLAN	193
#define RAPID_CITY_RCERRORRETURNCODE_NONEXISTIPMCASTADDRIESS	194
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDIPMULTICASTADDRESS	195
#define RAPID_CITY_RCERRORRETURNCODE_PORTISLOCKED	196
#define RAPID_CITY_RCERRORRETURNCODE_ACCESSRESTRICTION	197
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDDEVICEFILELENGTH	198
#define RAPID_CITY_RCERRORRETURNCODE_DUPLICATEACCESSPOLICYID	199
#define RAPID_CITY_RCERRORRETURNCODE_NODESIREDACCESSPOLICYITEM	200
#define RAPID_CITY_RCERRORRETURNCODE_IPFFILTERNONEXIST	201
#define RAPID_CITY_RCERRORRETURNCODE_IPFINVALIDVLANPRIORITY	202
#define RAPID_CITY_RCERRORRETURNCODE_IPFINVALIDDESTINATIONADDRESS	203
#define RAPID_CITY_RCERRORRETURNCODE_IPFINVALIDSOURCEADDRESS	204
#define RAPID_CITY_RCERRORRETURNCODE_IPFFILTERDUPLICATE	205
#define RAPID_CITY_RCERRORRETURNCODE_IPFGLOBALLISTDUPLICATE	206
#define RAPID_CITY_RCERRORRETURNCODE_IPFGLOBALLISTNONEXIST	207
#define RAPID_CITY_RCERRORRETURNCODE_IPFBASELISTDUPLICATE	208
#define RAPID_CITY_RCERRORRETURNCODE_IPFBASELISTNONEXIST	209
#define RAPID_CITY_RCERRORRETURNCODE_IPFPORTDUPLICATE	210
#define RAPID_CITY_RCERRORRETURNCODE_IPFPORTNONEXIST	211
#define RAPID_CITY_RCERRORRETURNCODE_IPFLISTNONEXIST	212
#define RAPID_CITY_RCERRORRETURNCODE_SNMPSNOOPDISABLED	213
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDHOSTIPADDRESS	214
#define RAPID_CITY_RCERRORRETURNCODE_SNOOPSTATICGROUPEXIST	215
#define RAPID_CITY_RCERRORRETURNCODE_RIPANNOUNCEPOLICYNOTFOUND	216
#define RAPID_CITY_RCERRORRETURNCODE_DUPLICATERIPANNOUNCEPOLICY	217
#define RAPID_CITY_RCERRORRETURNCODE_OSPFANNOUNCEPOLICYNOTFOUND	218
#define RAPID_CITY_RCERRORRETURNCODE_DUPLICATEOSPFANNOUNCEPOLICY	219
#define RAPID_CITY_RCERRORRETURNCODE_POLICYMATCHNETENTRYNOTFOUND	220
#define RAPID_CITY_RCERRORRETURNCODE_DUPLICATEPOLICYNETENTRY	221
#define RAPID_CITY_RCERRORRETURNCODE_POLICYADDRLISTENTRYNOTFOUND	222
#define RAPID_CITY_RCERRORRETURNCODE_DUPLICATEPOLICYADDRLISTENTRY	223
#define RAPID_CITY_RCERRORRETURNCODE_POLICYADDRLISTIDNOTFOUND	224
#define RAPID_CITY_RCERRORRETURNCODE_POLICYEXACTNETLISTNOTFOUND	225
#define RAPID_CITY_RCERRORRETURNCODE_POLICYRANGENETLISTNOTFOUND	226
#define RAPID_CITY_RCERRORRETURNCODE_POLICYRIPGATEWAYLISTNOTFOUND	227
#define RAPID_CITY_RCERRORRETURNCODE_POLICYRIPINTERFACELISTNOTFOUND	228
#define RAPID_CITY_RCERRORRETURNCODE_POLICYOSPFRTRIDLISTNOTFOUND	229
#define RAPID_CITY_RCERRORRETURNCODE_POLICYANNOUNCEINTERFACELISTNOTFOUND	230
#define RAPID_CITY_RCERRORRETURNCODE_POLICYADVERTISENETLISTNOTFOUND	231
#define RAPID_CITY_RCERRORRETURNCODE_POLICYINJECTNETLISTNOTFOUND	232
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDPOLICYLISTIDLISTSIZE	233
#define RAPID_CITY_RCERRORRETURNCODE_POLICYADDRENTRYNOTFOUND	234
#define RAPID_CITY_RCERRORRETURNCODE_DUPLICATEPOLICYADDRENTRY	235
#define RAPID_CITY_RCERRORRETURNCODE_DISABLETHISPORTFIRST	236
#define RAPID_CITY_RCERRORRETURNCODE_MUTINETTINGNOTSUPPORTED	237
#define RAPID_CITY_RCERRORRETURNCODE_ADDINGGLOBALFILTERTONONGLOBALLIST	238
#define RAPID_CITY_RCERRORRETURNCODE_ADDINGNONGLOBALFILTERTOGLOBALLIST	239
#define RAPID_CITY_RCERRORRETURNCODE_SETFILTEREDPORTMODE	240
#define RAPID_CITY_RCERRORRETURNCODE_SETFILTEREDPORTENABLEVALUE	241
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDMODETYPE	242
#define RAPID_CITY_RCERRORRETURNCODE_DUPLICATERIPACCEPTPOLICY	243
#define RAPID_CITY_RCERRORRETURNCODE_RIPACCEPPOLICYNOTFOUND	244
#define RAPID_CITY_RCERRORRETURNCODE_DUPLICATEOSPFACCEPTPOLICY	245
#define RAPID_CITY_RCERRORRETURNCODE_OSPFACCEPPOLICYNOTFOUND	246
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDACCESSPOLICYNAME	247
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDACCESSPOLICYPOLICYENABLE	248
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDACCESSPOLICYMODE	249
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDACCESSPOLICYSERVICE	250
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDACCESSPOLICYPRECEDENCE	251
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDACCESSPOLICYNETADDRESS	252
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDACCESSPOLICYTRUSTEDHOSTADDRESS	253
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDACCESSPOLICYTRUSTEDHOSTUSERNAME	254
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDACCESSPOLICYACCESSLEVEL	255
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDACCESSPOLICYLOGSETTING	256
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDACCESSPOLICYPOLICYID	257
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDAREAOPTIONS	258
#define RAPID_CITY_RCERRORRETURNCODE_CANNOTDELETEAREAIFCOUNTISNOTZERO	259
#define RAPID_CITY_RCERRORRETURNCODE_OSPFINTERFACENOTFOUND	260
#define RAPID_CITY_RCERRORRETURNCODE_OSPFIFAREAIDCONFLICTSWITHCONFIGUREDAREARANGE	261
#define RAPID_CITY_RCERRORRETURNCODE_APPLYINGDUPLICATEGLOBALFILTERTOPORT	262
#define RAPID_CITY_RCERRORRETURNCODE_DIFFERENTMLTPORTTYPES	263
#define RAPID_CITY_RCERRORRETURNCODE_ADDPORTTOMLTFAILED	264
#define RAPID_CITY_RCERRORRETURNCODE_REMOVEPORTFROMMLTFAILED	265
#define RAPID_CITY_RCERRORRETURNCODE_MIRRORPORTINMLT	266
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDDHCPALWAYSBROADCAST	267
#define RAPID_CITY_RCERRORRETURNCODE_INTERFACEISSETTOTRANSMITRIPV1	268
#define RAPID_CITY_RCERRORRETURNCODE_RIPINTERFACEDOESNOTEXIST	269
#define RAPID_CITY_RCERRORRETURNCODE_INTERFACEISNOTRUNNINGRIP	270
#define RAPID_CITY_RCERRORRETURNCODE_CANNOTCREATEVIRTLINKSTHROUGHSTUBAREA	271
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDSYSLOGENABLESETTING	272
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDSYSLOGHOSTIPADDR	274
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDSYSLOGHOSTUDPPORT	275
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDSYSLOGHOSTFACILITY	276
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDSYSLOGMODULEID	277
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDSYSLOGSEVERITY	278
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDSYSLOGMAPINFOSEVERITY	279
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDSYSLOGMAPWARNINGSEVERITY	280
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDSYSLOGMAPERRORSEVERITY	281
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDSYSLOGMAPMFGSEVERITY	282
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDSYSLOGMAPFATALSEVERITY	283
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDSYSLOGMAPTRACEMSGSETTING	284
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDSYSLOGMAPTRAPMSGSETTING	285
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDSYSLOGLOGTRACEMSGSETTING	286
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDSYSLOGLOGTRAPMSGSETTING	287
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDSYSLOGENTRYENABLESETTING	288
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDSYSLOGMAXHOSTSETTING	289
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDSYSLOGHOSTID	290
#define RAPID_CITY_RCERRORRETURNCODE_DUPLICATESYSLOGENTRY	291
#define RAPID_CITY_RCERRORRETURNCODE_SYSLOGHOSTTABLEISFULL	292
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDHOLDDOWNTIME	294
#define RAPID_CITY_RCERRORRETURNCODE_INCOMPATIBLEARUHARDWARE	295
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDVRID	296
#define RAPID_CITY_RCERRORRETURNCODE_DUPLICATEVRRPENTRY	297
#define RAPID_CITY_RCERRORRETURNCODE_NOVRRPIPADDRESSSPECIFIED	298
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDVRRPCONTROLVALUE	299
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDVRRPPRIORITY	300
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDVRRPADVERTISEMENTINTERVAL	301
#define RAPID_CITY_RCERRORRETURNCODE_MAXNUMOFVRRPSENTRIESEXCEEDED	302
#define RAPID_CITY_RCERRORRETURNCODE_POLICYNETLISTENTRYNOTFOUND	303
#define RAPID_CITY_RCERRORRETURNCODE_DUPLICATEPOLICYNETLISTENTRY	304
#define RAPID_CITY_RCERRORRETURNCODE_POLICYNETLISTIDNOTFOUND	305
#define RAPID_CITY_RCERRORRETURNCODE_FILTERONANENABLEDPORT	306
#define RAPID_CITY_RCERRORRETURNCODE_LISTONANENABLEDPORT	307
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDIPFILTERSRCOPTION	308
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDIPFILTERDSTOPTION	309
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDOSPFAREAIMPORTEXTOPTION	310
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDOSPFINTERFACEMD5KEYIDLENGTH	311
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDOSPFINTERFACEMD5KEYLENGTH	312
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDIPXNETWORKNUMBER	313
#define RAPID_CITY_RCERRORRETURNCODE_IPXCIRCUITALREADYEXISTS	314
#define RAPID_CITY_RCERRORRETURNCODE_IPXCIRCUITDOESNOTEXIST	315
#define RAPID_CITY_RCERRORRETURNCODE_ENCAPSULATIONISNOTALLOWEDONSAMESEGMENT	316
#define RAPID_CITY_RCERRORRETURNCODE_ENCAPSULATIONDOESNOTMATCHPROTOCOLBASEDVLAN	317
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDDVMRPIFTBLENABLEVALUE	318
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDDVMRPIFTBLMETRICVALUE	319
#define RAPID_CITY_RCERRORRETURNCODE_IPHOSTPARTFORSUBNETADDRISNONZERO	320
#define RAPID_CITY_RCERRORRETURNCODE_GLOBALMULTICASTNOTENABLED	321
#define RAPID_CITY_RCERRORRETURNCODE_METRICFIELDISCREATEDBUTMODIFIED	322
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDIPMROUTEINTERFACETBLTTLVALUE	323
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDUDPPORTNUMBER	324
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDUDPPROTOCOLNAMELENGTH	325
#define RAPID_CITY_RCERRORRETURNCODE_CANNOTMODIFYUDPPROTOCOLNAME	326
#define RAPID_CITY_RCERRORRETURNCODE_UDPPROTOCOLENTRYDOESNOTEXISTS	327
#define RAPID_CITY_RCERRORRETURNCODE_DUPLICATEUDPPROTOCOLENTRY	328
#define RAPID_CITY_RCERRORRETURNCODE_CANNOTDELUDPPROTOCOLENTRYFWDENTRIESEXISTS	329
#define RAPID_CITY_RCERRORRETURNCODE_UDPBROADCASTINTFENTRYDOESNOTEXISTS	330
#define RAPID_CITY_RCERRORRETURNCODE_DUPLICATEUDPBROADCASTINTFENTRY	331
#define RAPID_CITY_RCERRORRETURNCODE_INVALIDUDPCONFBROACASTINTERFACE	332
#define RAPID_CITY_RCERRORRETURNCODE_UPDCONFINTFENTRYNOTENABLEDFORUDPBCASTFORWARDING	333
#define RAPID_CITY_RCERRORRETURNCODE_UDPPORTFWDENTRYDOESNOTEXISTS	334
#define RAPID_CITY_RCERRORRETURNCODE_DUPLICATEUDPPORTFWDENTRYDOESNOTEXISTS	335
#define RAPID_CITY_RCERRORRETURNCODE_UDPPORTFWDENTRYUDPPORTINTERFACEDOESNOTEXISTS	336
#define RAPID_CITY_RCERRORRETURNCODE_UDPPORTFWDLISTENTRYDOESNOTEXISTS	337
#define RAPID_CITY_RCERRORRETURNCODE_DUPLICATEUDPPORTFWDLISTENTRYDOESNOTEXISTS	338
#define RAPID_CITY_RCERRORRETURNCODE_UDPPORTFWDLISTENTRYPORTFWDIDDOESNOTEXISTS	339
#define RAPID_CITY_RCERRORRETURNCODE_UDPPORTFWDLISTENTRYINVALIDFWDIDLISTSIZE	340
#define RAPID_CITY_RCERRORRETURNCODE_CANNOTDELETEUDPPORTFWDLISTENTRYINTERFACEUSINGTHISLIST	341

extern GSnmpEnum const rapid_city_enums_rcErrorReturnCode[];

#define RAPID_CITY_RCERRORSENDTRAP_TRUE	1
#define RAPID_CITY_RCERRORSENDTRAP_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcErrorSendTrap[];

#define RAPID_CITY_RCSYSLOGGLOBALENABLE_TRUE	1
#define RAPID_CITY_RCSYSLOGGLOBALENABLE_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcSyslogGlobalEnable[];

#define RAPID_CITY_RCSYSLOGGLOBALOPERSTATE_ACTIVE	1
#define RAPID_CITY_RCSYSLOGGLOBALOPERSTATE_INACTIVE	2
#define RAPID_CITY_RCSYSLOGGLOBALOPERSTATE_EMPTYHOSTTBL	3
#define RAPID_CITY_RCSYSLOGGLOBALOPERSTATE_ALLHOSTDISABLED	4

extern GSnmpEnum const rapid_city_enums_rcSyslogGlobalOperState[];

#define RAPID_CITY_RCSYSLOGHOSTFACILITY_LOCAL0	128
#define RAPID_CITY_RCSYSLOGHOSTFACILITY_LOCAL1	136
#define RAPID_CITY_RCSYSLOGHOSTFACILITY_LOCAL2	144
#define RAPID_CITY_RCSYSLOGHOSTFACILITY_LOCAL3	152
#define RAPID_CITY_RCSYSLOGHOSTFACILITY_LOCAL4	160
#define RAPID_CITY_RCSYSLOGHOSTFACILITY_LOCAL5	168
#define RAPID_CITY_RCSYSLOGHOSTFACILITY_LOCAL6	176
#define RAPID_CITY_RCSYSLOGHOSTFACILITY_LOCAL7	184

extern GSnmpEnum const rapid_city_enums_rcSyslogHostFacility[];

#define RAPID_CITY_RCSYSLOGHOSTMODULEID_COMMON	1
#define RAPID_CITY_RCSYSLOGHOSTMODULEID_SNMP	2
#define RAPID_CITY_RCSYSLOGHOSTMODULEID_RMON	4
#define RAPID_CITY_RCSYSLOGHOSTMODULEID_PORTMGR	8
#define RAPID_CITY_RCSYSLOGHOSTMODULEID_CHASMGR	16
#define RAPID_CITY_RCSYSLOGHOSTMODULEID_BRIDGE	32
#define RAPID_CITY_RCSYSLOGHOSTMODULEID_OSPF	64
#define RAPID_CITY_RCSYSLOGHOSTMODULEID_HWIF	128
#define RAPID_CITY_RCSYSLOGHOSTMODULEID_SIM	256
#define RAPID_CITY_RCSYSLOGHOSTMODULEID_CPP	512
#define RAPID_CITY_RCSYSLOGHOSTMODULEID_NETDRV	1024
#define RAPID_CITY_RCSYSLOGHOSTMODULEID_VLANMGR	2048
#define RAPID_CITY_RCSYSLOGHOSTMODULEID_CLI	4096
#define RAPID_CITY_RCSYSLOGHOSTMODULEID_MAIN	8192
#define RAPID_CITY_RCSYSLOGHOSTMODULEID_P2IP	16384
#define RAPID_CITY_RCSYSLOGHOSTMODULEID_RCIP	32768
#define RAPID_CITY_RCSYSLOGHOSTMODULEID_ROMPAGER	65536
#define RAPID_CITY_RCSYSLOGHOSTMODULEID_ACIF	131072
#define RAPID_CITY_RCSYSLOGHOSTMODULEID_GBIP	262144
#define RAPID_CITY_RCSYSLOGHOSTMODULEID_WDT	524288
#define RAPID_CITY_RCSYSLOGHOSTMODULEID_TDP	1048576
#define RAPID_CITY_RCSYSLOGHOSTMODULEID_MANDIAG	2097152
#define RAPID_CITY_RCSYSLOGHOSTMODULEID_MANTEST	4194304
#define RAPID_CITY_RCSYSLOGHOSTMODULEID_IGMP	8388608
#define RAPID_CITY_RCSYSLOGHOSTMODULEID_IPFIL	16777216
#define RAPID_CITY_RCSYSLOGHOSTMODULEID_MLT	33554432
#define RAPID_CITY_RCSYSLOGHOSTMODULEID_IPPOLICY	67108864
#define RAPID_CITY_RCSYSLOGHOSTMODULEID_IPMC	134217728
#define RAPID_CITY_RCSYSLOGHOSTMODULEID_SYSLOG	268435456

extern GSnmpEnum const rapid_city_enums_rcSyslogHostModuleId[];

#define RAPID_CITY_RCSYSLOGHOSTSEVERITY_INFO	1
#define RAPID_CITY_RCSYSLOGHOSTSEVERITY_WARNING	2
#define RAPID_CITY_RCSYSLOGHOSTSEVERITY_ERROR	4
#define RAPID_CITY_RCSYSLOGHOSTSEVERITY_MFG	8
#define RAPID_CITY_RCSYSLOGHOSTSEVERITY_FATAL	16

extern GSnmpEnum const rapid_city_enums_rcSyslogHostSeverity[];

#define RAPID_CITY_RCSYSLOGHOSTMAPINFOSEVERITY_EMERGENCY	1
#define RAPID_CITY_RCSYSLOGHOSTMAPINFOSEVERITY_ALERT	2
#define RAPID_CITY_RCSYSLOGHOSTMAPINFOSEVERITY_CRITICAL	3
#define RAPID_CITY_RCSYSLOGHOSTMAPINFOSEVERITY_ERROR	4
#define RAPID_CITY_RCSYSLOGHOSTMAPINFOSEVERITY_WARNING	5
#define RAPID_CITY_RCSYSLOGHOSTMAPINFOSEVERITY_NOTICE	6
#define RAPID_CITY_RCSYSLOGHOSTMAPINFOSEVERITY_INFO	7
#define RAPID_CITY_RCSYSLOGHOSTMAPINFOSEVERITY_DEBUG	8

extern GSnmpEnum const rapid_city_enums_rcSyslogHostMapInfoSeverity[];

#define RAPID_CITY_RCSYSLOGHOSTMAPWARNINGSEVERITY_EMERGENCY	1
#define RAPID_CITY_RCSYSLOGHOSTMAPWARNINGSEVERITY_ALERT	2
#define RAPID_CITY_RCSYSLOGHOSTMAPWARNINGSEVERITY_CRITICAL	3
#define RAPID_CITY_RCSYSLOGHOSTMAPWARNINGSEVERITY_ERROR	4
#define RAPID_CITY_RCSYSLOGHOSTMAPWARNINGSEVERITY_WARNING	5
#define RAPID_CITY_RCSYSLOGHOSTMAPWARNINGSEVERITY_NOTICE	6
#define RAPID_CITY_RCSYSLOGHOSTMAPWARNINGSEVERITY_INFO	7
#define RAPID_CITY_RCSYSLOGHOSTMAPWARNINGSEVERITY_DEBUG	8

extern GSnmpEnum const rapid_city_enums_rcSyslogHostMapWarningSeverity[];

#define RAPID_CITY_RCSYSLOGHOSTMAPERRORSEVERITY_EMERGENCY	1
#define RAPID_CITY_RCSYSLOGHOSTMAPERRORSEVERITY_ALERT	2
#define RAPID_CITY_RCSYSLOGHOSTMAPERRORSEVERITY_CRITICAL	3
#define RAPID_CITY_RCSYSLOGHOSTMAPERRORSEVERITY_ERROR	4
#define RAPID_CITY_RCSYSLOGHOSTMAPERRORSEVERITY_WARNING	5
#define RAPID_CITY_RCSYSLOGHOSTMAPERRORSEVERITY_NOTICE	6
#define RAPID_CITY_RCSYSLOGHOSTMAPERRORSEVERITY_INFO	7
#define RAPID_CITY_RCSYSLOGHOSTMAPERRORSEVERITY_DEBUG	8

extern GSnmpEnum const rapid_city_enums_rcSyslogHostMapErrorSeverity[];

#define RAPID_CITY_RCSYSLOGHOSTMAPMFGSEVERITY_EMERGENCY	1
#define RAPID_CITY_RCSYSLOGHOSTMAPMFGSEVERITY_ALERT	2
#define RAPID_CITY_RCSYSLOGHOSTMAPMFGSEVERITY_CRITICAL	3
#define RAPID_CITY_RCSYSLOGHOSTMAPMFGSEVERITY_ERROR	4
#define RAPID_CITY_RCSYSLOGHOSTMAPMFGSEVERITY_WARNING	5
#define RAPID_CITY_RCSYSLOGHOSTMAPMFGSEVERITY_NOTICE	6
#define RAPID_CITY_RCSYSLOGHOSTMAPMFGSEVERITY_INFO	7
#define RAPID_CITY_RCSYSLOGHOSTMAPMFGSEVERITY_DEBUG	8

extern GSnmpEnum const rapid_city_enums_rcSyslogHostMapMfgSeverity[];

#define RAPID_CITY_RCSYSLOGHOSTMAPFATALSEVERITY_EMERGENCY	1
#define RAPID_CITY_RCSYSLOGHOSTMAPFATALSEVERITY_ALERT	2
#define RAPID_CITY_RCSYSLOGHOSTMAPFATALSEVERITY_CRITICAL	3
#define RAPID_CITY_RCSYSLOGHOSTMAPFATALSEVERITY_ERROR	4
#define RAPID_CITY_RCSYSLOGHOSTMAPFATALSEVERITY_WARNING	5
#define RAPID_CITY_RCSYSLOGHOSTMAPFATALSEVERITY_NOTICE	6
#define RAPID_CITY_RCSYSLOGHOSTMAPFATALSEVERITY_INFO	7
#define RAPID_CITY_RCSYSLOGHOSTMAPFATALSEVERITY_DEBUG	8

extern GSnmpEnum const rapid_city_enums_rcSyslogHostMapFatalSeverity[];

#define RAPID_CITY_RCSYSLOGHOSTMAPTRACEMSG_EMERGENCY	1
#define RAPID_CITY_RCSYSLOGHOSTMAPTRACEMSG_ALERT	2
#define RAPID_CITY_RCSYSLOGHOSTMAPTRACEMSG_CRITICAL	3
#define RAPID_CITY_RCSYSLOGHOSTMAPTRACEMSG_ERROR	4
#define RAPID_CITY_RCSYSLOGHOSTMAPTRACEMSG_WARNING	5
#define RAPID_CITY_RCSYSLOGHOSTMAPTRACEMSG_NOTICE	6
#define RAPID_CITY_RCSYSLOGHOSTMAPTRACEMSG_INFO	7
#define RAPID_CITY_RCSYSLOGHOSTMAPTRACEMSG_DEBUG	8

extern GSnmpEnum const rapid_city_enums_rcSyslogHostMapTraceMsg[];

#define RAPID_CITY_RCSYSLOGHOSTMAPTRAPMSG_EMERGENCY	1
#define RAPID_CITY_RCSYSLOGHOSTMAPTRAPMSG_ALERT	2
#define RAPID_CITY_RCSYSLOGHOSTMAPTRAPMSG_CRITICAL	3
#define RAPID_CITY_RCSYSLOGHOSTMAPTRAPMSG_ERROR	4
#define RAPID_CITY_RCSYSLOGHOSTMAPTRAPMSG_WARNING	5
#define RAPID_CITY_RCSYSLOGHOSTMAPTRAPMSG_NOTICE	6
#define RAPID_CITY_RCSYSLOGHOSTMAPTRAPMSG_INFO	7
#define RAPID_CITY_RCSYSLOGHOSTMAPTRAPMSG_DEBUG	8

extern GSnmpEnum const rapid_city_enums_rcSyslogHostMapTrapMsg[];

#define RAPID_CITY_RCSYSLOGHOSTLOGTRACEMSGS_TRUE	1
#define RAPID_CITY_RCSYSLOGHOSTLOGTRACEMSGS_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcSyslogHostLogTraceMsgs[];

#define RAPID_CITY_RCSYSLOGHOSTLOGTRAPMSGS_TRUE	1
#define RAPID_CITY_RCSYSLOGHOSTLOGTRAPMSGS_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcSyslogHostLogTrapMsgs[];

#define RAPID_CITY_RCSYSLOGHOSTENABLE_TRUE	1
#define RAPID_CITY_RCSYSLOGHOSTENABLE_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcSyslogHostEnable[];

#define RAPID_CITY_RCSYSLOGHOSTROWSTATUS_ACTIVE	1
#define RAPID_CITY_RCSYSLOGHOSTROWSTATUS_NOTINSERVICE	2
#define RAPID_CITY_RCSYSLOGHOSTROWSTATUS_NOTREADY	3
#define RAPID_CITY_RCSYSLOGHOSTROWSTATUS_CREATEANDGO	4
#define RAPID_CITY_RCSYSLOGHOSTROWSTATUS_CREATEANDWAIT	5
#define RAPID_CITY_RCSYSLOGHOSTROWSTATUS_DESTROY	6

extern GSnmpEnum const rapid_city_enums_rcSyslogHostRowStatus[];

#define RAPID_CITY_RCDIAGMIRRORBYPORTMODE_TX	1
#define RAPID_CITY_RCDIAGMIRRORBYPORTMODE_RX	2
#define RAPID_CITY_RCDIAGMIRRORBYPORTMODE_BOTH	3

extern GSnmpEnum const rapid_city_enums_rcDiagMirrorByPortMode[];

#define RAPID_CITY_RCDIAGMIRRORBYPORTENABLE_TRUE	1
#define RAPID_CITY_RCDIAGMIRRORBYPORTENABLE_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcDiagMirrorByPortEnable[];

#define RAPID_CITY_RCDIAGMIRRORBYPORTROWSTATUS_ACTIVE	1
#define RAPID_CITY_RCDIAGMIRRORBYPORTROWSTATUS_NOTINSERVICE	2
#define RAPID_CITY_RCDIAGMIRRORBYPORTROWSTATUS_NOTREADY	3
#define RAPID_CITY_RCDIAGMIRRORBYPORTROWSTATUS_CREATEANDGO	4
#define RAPID_CITY_RCDIAGMIRRORBYPORTROWSTATUS_CREATEANDWAIT	5
#define RAPID_CITY_RCDIAGMIRRORBYPORTROWSTATUS_DESTROY	6

extern GSnmpEnum const rapid_city_enums_rcDiagMirrorByPortRowStatus[];

#define RAPID_CITY_RCDIAGPORTCONVSTEERINGMODE_ONETOTWO	1
#define RAPID_CITY_RCDIAGPORTCONVSTEERINGMODE_TWOTOONE	2
#define RAPID_CITY_RCDIAGPORTCONVSTEERINGMODE_BOTH	3

extern GSnmpEnum const rapid_city_enums_rcDiagPortConvSteeringMode[];

#define RAPID_CITY_RCDIAGPORTCONVSTEERINGENABLE_TRUE	1
#define RAPID_CITY_RCDIAGPORTCONVSTEERINGENABLE_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcDiagPortConvSteeringEnable[];

#define RAPID_CITY_RCDIAGPORTCONVSTEERINGROWSTATUS_ACTIVE	1
#define RAPID_CITY_RCDIAGPORTCONVSTEERINGROWSTATUS_NOTINSERVICE	2
#define RAPID_CITY_RCDIAGPORTCONVSTEERINGROWSTATUS_NOTREADY	3
#define RAPID_CITY_RCDIAGPORTCONVSTEERINGROWSTATUS_CREATEANDGO	4
#define RAPID_CITY_RCDIAGPORTCONVSTEERINGROWSTATUS_CREATEANDWAIT	5
#define RAPID_CITY_RCDIAGPORTCONVSTEERINGROWSTATUS_DESTROY	6

extern GSnmpEnum const rapid_city_enums_rcDiagPortConvSteeringRowStatus[];

#define RAPID_CITY_RCDIAGMACCONVSTEERINGENABLE_TRUE	1
#define RAPID_CITY_RCDIAGMACCONVSTEERINGENABLE_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcDiagMacConvSteeringEnable[];

#define RAPID_CITY_RCDIAGMACCONVSTEERINGROWSTATUS_ACTIVE	1
#define RAPID_CITY_RCDIAGMACCONVSTEERINGROWSTATUS_NOTINSERVICE	2
#define RAPID_CITY_RCDIAGMACCONVSTEERINGROWSTATUS_NOTREADY	3
#define RAPID_CITY_RCDIAGMACCONVSTEERINGROWSTATUS_CREATEANDGO	4
#define RAPID_CITY_RCDIAGMACCONVSTEERINGROWSTATUS_CREATEANDWAIT	5
#define RAPID_CITY_RCDIAGMACCONVSTEERINGROWSTATUS_DESTROY	6

extern GSnmpEnum const rapid_city_enums_rcDiagMacConvSteeringRowStatus[];

#define RAPID_CITY_RCDIAGSAVECONFIG_TRUE	1
#define RAPID_CITY_RCDIAGSAVECONFIG_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcDiagSaveConfig[];

#define RAPID_CITY_RCIPXROUTINGENABLE_TRUE	1
#define RAPID_CITY_RCIPXROUTINGENABLE_FALSE	2

extern GSnmpEnum const rapid_city_enums_rcIpxRoutingEnable[];

#define RAPID_CITY_RCIPXADDRENCAP_NONE	0
#define RAPID_CITY_RCIPXADDRENCAP_ETHERNETII	1
#define RAPID_CITY_RCIPXADDRENCAP_SNAP	2
#define RAPID_CITY_RCIPXADDRENCAP_LLC	3
#define RAPID_CITY_RCIPXADDRENCAP_RAW	4

extern GSnmpEnum const rapid_city_enums_rcIpxAddrEncap[];

#define RAPID_CITY_RCIPXADDRENTRYSTATUS_ACTIVE	1
#define RAPID_CITY_RCIPXADDRENTRYSTATUS_NOTINSERVICE	2
#define RAPID_CITY_RCIPXADDRENTRYSTATUS_NOTREADY	3
#define RAPID_CITY_RCIPXADDRENTRYSTATUS_CREATEANDGO	4
#define RAPID_CITY_RCIPXADDRENTRYSTATUS_CREATEANDWAIT	5
#define RAPID_CITY_RCIPXADDRENTRYSTATUS_DESTROY	6

extern GSnmpEnum const rapid_city_enums_rcIpxAddrEntryStatus[];


/*
 * C type definitions for RAPID-CITY::rcSystem.
 */

#define RAPID_CITY_RCSYSIPADDR	0x1 
#define RAPID_CITY_RCSYSNETMASK	0x2 
#define RAPID_CITY_RCSYSBROADCAST	0x4 
#define RAPID_CITY_RCSYSCOMMREADWRITEALL	0x8 
#define RAPID_CITY_RCSYSCOMMREADWRITE	0x10 
#define RAPID_CITY_RCSYSCOMMREADONLY	0x20 
#define RAPID_CITY_RCSYSVERSION	0x40 
#define RAPID_CITY_RCSYSACTION	0x80 
#define RAPID_CITY_RCSYSRESULT	0x100 
#define RAPID_CITY_RCSYSLASTCHANGE	0x200 
#define RAPID_CITY_RCSYSLASTVLANCHANGE	0x400 
#define RAPID_CITY_RCSYSLASTSTATISTICSRESET	0x800 
#define RAPID_CITY_RCSYSBUFFERUTIL	0x1000 
#define RAPID_CITY_RCSYSBUFFERUTILPEAK	0x2000 
#define RAPID_CITY_RCSYSBUFFERUTILPEAKTIME	0x4000 
#define RAPID_CITY_RCSYSNVRAMSIZE	0x8000 
#define RAPID_CITY_RCSYSNVRAMUSED	0x10000 
#define RAPID_CITY_RCSYSLASTSAVETONVRAM	0x20000 
#define RAPID_CITY_RCSYSLASTSAVETOSTANDBYNVRAM	0x40000 
#define RAPID_CITY_RCSYSCPUUTIL	0x80000 
#define RAPID_CITY_RCSYSSWITCHFABRICUTIL	0x100000 
#define RAPID_CITY_RCSYSRMONMEMSIZE	0x200000 
#define RAPID_CITY_RCSYSRMONENABLE	0x400000 
#define RAPID_CITY_RCSYSRMONSAVECONFIG	0x800000 
#define RAPID_CITY_RCSYSRMONTRAPOPTION	0x1000000 
#define RAPID_CITY_RCSYSSUPPORTROUTING	0x2000000 
#define RAPID_CITY_RCSYSSUPPORTWEBSERVER	0x4000000 
#define RAPID_CITY_RCSYSLASTIPADDRCHANGE	0x8000000 
#define RAPID_CITY_RCSYSCOMMREADWRITELAYER3	0x10000000 
#define RAPID_CITY_RCSYSCOMMREADWRITELAYER2	0x20000000 
#define RAPID_CITY_RCSYSACCESSPOLICYENABLE	0x40000000 
typedef struct {
    guchar   *rcSysIpAddr;
    guchar   *rcSysNetMask;
    guchar   *rcSysBroadcast;
    guchar   *rcSysCommReadWriteAll;
    gsize    _rcSysCommReadWriteAllLength;
    guchar   *rcSysCommReadWrite;
    gsize    _rcSysCommReadWriteLength;
    guchar   *rcSysCommReadOnly;
    gsize    _rcSysCommReadOnlyLength;
    guchar   *rcSysVersion;
    gsize    _rcSysVersionLength;
    gint32   *rcSysAction;
    gint32   *rcSysResult;
    guint32  *rcSysLastChange;
    guint32  *rcSysLastVlanChange;
    guint32  *rcSysLastStatisticsReset;
    gint32   *rcSysBufferUtil;
    gint32   *rcSysBufferUtilPeak;
    guint32  *rcSysBufferUtilPeakTime;
    guint32  *rcSysNVRamSize;
    guint32  *rcSysNVRamUsed;
    guint32  *rcSysLastSaveToNVRam;
    guint32  *rcSysLastSaveToStandbyNVRam;
    guint32  *rcSysCpuUtil;
    guint32  *rcSysSwitchFabricUtil;
    gint32   *rcSysRmonMemSize;
    gint32   *rcSysRmonEnable;
    gint32   *rcSysRmonSaveConfig;
    gint32   *rcSysRmonTrapOption;
    gint32   *rcSysSupportRouting;
    gint32   *rcSysSupportWebServer;
    guint32  *rcSysLastIpAddrChange;
    guchar   *rcSysCommReadWriteLayer3;
    gsize    _rcSysCommReadWriteLayer3Length;
    guchar   *rcSysCommReadWriteLayer2;
    gsize    _rcSysCommReadWriteLayer2Length;
    gint32   *rcSysAccessPolicyEnable;
} rapid_city_rcSystem_t;

extern rapid_city_rcSystem_t *
rapid_city_new_rcSystem(void);

extern void
rapid_city_get_rcSystem(GSnmpSession *s, rapid_city_rcSystem_t **rcSystem, gint mask);

extern void
rapid_city_set_rcSystem(GSnmpSession *s, rapid_city_rcSystem_t *rcSystem, gint mask);

extern void
rapid_city_free_rcSystem(rapid_city_rcSystem_t *rcSystem);

/*
 * C type definitions for RAPID-CITY::rcSysTrapRecvEntry.
 */

#define RAPID_CITY_RCSYSTRAPRECVADDRESS	0x1 
#define RAPID_CITY_RCSYSTRAPRECVVERSION	0x2 
#define RAPID_CITY_RCSYSTRAPRECVCOMMUNITY	0x4 
#define RAPID_CITY_RCSYSTRAPRECVSRCADDRESS	0x8 
#define RAPID_CITY_RCSYSTRAPRECVROWSTATUS	0x10 

typedef struct {
    guchar   rcSysTrapRecvAddress[4];
    gint32   *rcSysTrapRecvVersion;
    guchar   *rcSysTrapRecvCommunity;
    gsize    _rcSysTrapRecvCommunityLength;
    guchar   *rcSysTrapRecvSrcAddress;
    gint32   *rcSysTrapRecvRowStatus;
} rapid_city_rcSysTrapRecvEntry_t;

extern void
rapid_city_get_rcSysTrapRecvTable(GSnmpSession *s, rapid_city_rcSysTrapRecvEntry_t ***rcSysTrapRecvEntry, gint mask);

extern void
rapid_city_free_rcSysTrapRecvTable(rapid_city_rcSysTrapRecvEntry_t **rcSysTrapRecvEntry);

extern rapid_city_rcSysTrapRecvEntry_t *
rapid_city_new_rcSysTrapRecvEntry(void);

extern void
rapid_city_get_rcSysTrapRecvEntry(GSnmpSession *s, rapid_city_rcSysTrapRecvEntry_t **rcSysTrapRecvEntry, guchar *rcSysTrapRecvAddress, gint mask);

extern void
rapid_city_set_rcSysTrapRecvEntry(GSnmpSession *s, rapid_city_rcSysTrapRecvEntry_t *rcSysTrapRecvEntry, gint mask);

extern void
rapid_city_free_rcSysTrapRecvEntry(rapid_city_rcSysTrapRecvEntry_t *rcSysTrapRecvEntry);

/*
 * C type definitions for RAPID-CITY::rcSysAccessPolicyEntry.
 */

#define RAPID_CITY_RCSYSACCESSPOLICYID	0x1 
#define RAPID_CITY_RCSYSACCESSPOLICYNAME	0x2 
#define RAPID_CITY_RCSYSACCESSPOLICYPOLICYENABLE	0x4 
#define RAPID_CITY_RCSYSACCESSPOLICYMODE	0x8 
#define RAPID_CITY_RCSYSACCESSPOLICYSERVICE	0x10 
#define RAPID_CITY_RCSYSACCESSPOLICYPRECEDENCE	0x20 
#define RAPID_CITY_RCSYSACCESSPOLICYNETADDR	0x40 
#define RAPID_CITY_RCSYSACCESSPOLICYNETMASK	0x80 
#define RAPID_CITY_RCSYSACCESSPOLICYTRUSTEDHOSTADDR	0x100 
#define RAPID_CITY_RCSYSACCESSPOLICYTRUSTEDHOSTUSERNAME	0x200 
#define RAPID_CITY_RCSYSACCESSPOLICYACCESSLEVEL	0x400 
#define RAPID_CITY_RCSYSACCESSPOLICYLOG	0x800 
#define RAPID_CITY_RCSYSACCESSPOLICYUSAGE	0x1000 
#define RAPID_CITY_RCSYSACCESSPOLICYROWSTATUS	0x2000 

typedef struct {
    gint32   rcSysAccessPolicyId;
    guchar   *rcSysAccessPolicyName;
    gsize    _rcSysAccessPolicyNameLength;
    gint32   *rcSysAccessPolicyPolicyEnable;
    gint32   *rcSysAccessPolicyMode;
    gint32   *rcSysAccessPolicyService;
    gint32   *rcSysAccessPolicyPrecedence;
    guchar   *rcSysAccessPolicyNetAddr;
    guchar   *rcSysAccessPolicyNetMask;
    guchar   *rcSysAccessPolicyTrustedHostAddr;
    guchar   *rcSysAccessPolicyTrustedHostUserName;
    gsize    _rcSysAccessPolicyTrustedHostUserNameLength;
    gint32   *rcSysAccessPolicyAccessLevel;
    gint32   *rcSysAccessPolicyLog;
    guint32  *rcSysAccessPolicyUsage;
    gint32   *rcSysAccessPolicyRowStatus;
} rapid_city_rcSysAccessPolicyEntry_t;

extern void
rapid_city_get_rcSysAccessPolicyTable(GSnmpSession *s, rapid_city_rcSysAccessPolicyEntry_t ***rcSysAccessPolicyEntry, gint mask);

extern void
rapid_city_free_rcSysAccessPolicyTable(rapid_city_rcSysAccessPolicyEntry_t **rcSysAccessPolicyEntry);

extern rapid_city_rcSysAccessPolicyEntry_t *
rapid_city_new_rcSysAccessPolicyEntry(void);

extern void
rapid_city_get_rcSysAccessPolicyEntry(GSnmpSession *s, rapid_city_rcSysAccessPolicyEntry_t **rcSysAccessPolicyEntry, gint32 rcSysAccessPolicyId, gint mask);

extern void
rapid_city_set_rcSysAccessPolicyEntry(GSnmpSession *s, rapid_city_rcSysAccessPolicyEntry_t *rcSysAccessPolicyEntry, gint mask);

extern void
rapid_city_free_rcSysAccessPolicyEntry(rapid_city_rcSysAccessPolicyEntry_t *rcSysAccessPolicyEntry);

/*
 * C type definitions for RAPID-CITY::rcTftp.
 */

#define RAPID_CITY_RCTFTPHOST	0x1 
#define RAPID_CITY_RCTFTPFILE	0x2 
#define RAPID_CITY_RCTFTPACTION	0x4 
#define RAPID_CITY_RCTFTPRESULT	0x8 

typedef struct {
    guchar   *rcTftpHost;
    guchar   *rcTftpFile;
    gsize    _rcTftpFileLength;
    gint32   *rcTftpAction;
    gint32   *rcTftpResult;
} rapid_city_rcTftp_t;

extern rapid_city_rcTftp_t *
rapid_city_new_rcTftp(void);

extern void
rapid_city_get_rcTftp(GSnmpSession *s, rapid_city_rcTftp_t **rcTftp, gint mask);

extern void
rapid_city_set_rcTftp(GSnmpSession *s, rapid_city_rcTftp_t *rcTftp, gint mask);

extern void
rapid_city_free_rcTftp(rapid_city_rcTftp_t *rcTftp);

/*
 * C type definitions for RAPID-CITY::rcVlan.
 */

#define RAPID_CITY_RCVLANNUMVLANS	0x1 
#define RAPID_CITY_RCVLANIGMPSNOOPNUMGROUPS	0x2 

typedef struct {
    gint32   *rcVlanNumVlans;
    gint32   *rcVlanIgmpSnoopNumGroups;
} rapid_city_rcVlan_t;

extern rapid_city_rcVlan_t *
rapid_city_new_rcVlan(void);

extern void
rapid_city_get_rcVlan(GSnmpSession *s, rapid_city_rcVlan_t **rcVlan, gint mask);

extern void
rapid_city_free_rcVlan(rapid_city_rcVlan_t *rcVlan);

/*
 * C type definitions for RAPID-CITY::rcVlanEntry.
 */

#define RAPID_CITY_RCVLANID	0x1 
#define RAPID_CITY_RCVLANNAME	0x2 
#define RAPID_CITY_RCVLANCOLOR	0x4 
#define RAPID_CITY_RCVLANHIGHPRIORITY	0x8 
#define RAPID_CITY_RCVLANROUTINGENABLE	0x10 
#define RAPID_CITY_RCVLANIFINDEX	0x20 
#define RAPID_CITY_RCVLANACTION	0x40 
#define RAPID_CITY_RCVLANRESULT	0x80 
#define RAPID_CITY_RCVLANSTGID	0x100 
#define RAPID_CITY_RCVLANTYPE	0x200 
#define RAPID_CITY_RCVLANPORTMEMBERS	0x400 
#define RAPID_CITY_RCVLANACTIVEMEMBERS	0x800 
#define RAPID_CITY_RCVLANSTATICMEMBERS	0x1000 
#define RAPID_CITY_RCVLANNOTALLOWTOJOIN	0x2000 
#define RAPID_CITY_RCVLANPROTOCOLID	0x4000 
#define RAPID_CITY_RCVLANSUBNETADDR	0x8000 
#define RAPID_CITY_RCVLANSUBNETMASK	0x10000 
#define RAPID_CITY_RCVLANAGINGTIME	0x20000 
#define RAPID_CITY_RCVLANMACADDRESS	0x40000 
#define RAPID_CITY_RCVLANROWSTATUS	0x80000 
#define RAPID_CITY_RCVLANIGMPSNOOPENABLE	0x100000 
#define RAPID_CITY_RCVLANIGMPSNOOPREPORTPROXYENABLE	0x200000 
#define RAPID_CITY_RCVLANIGMPSNOOPROBUSTNESS	0x400000 
#define RAPID_CITY_RCVLANIGMPSNOOPQUERYINTERVAL	0x800000 
#define RAPID_CITY_RCVLANIGMPSNOOPMROUTERPORTS	0x1000000 
#define RAPID_CITY_RCVLANUSERDEFINEDPID	0x2000000 
#define RAPID_CITY_RCVLANIGMPSNOOPACTIVEMROUTERPORTS	0x4000000 
#define RAPID_CITY_RCVLANPROTOCOLIDS	0x8000000 
#define RAPID_CITY_RCVLANIGMPSNOOPACTIVEQUERIER	0x10000000 
#define RAPID_CITY_RCVLANIGMPSNOOPMROUTEREXPIRATION	0x20000000 
#define RAPID_CITY_RCVLANIGMPSNOOPQUERIERPORT	0x40000000 
typedef struct {
    gint32   rcVlanId;
    guchar   *rcVlanName;
    gsize    _rcVlanNameLength;
    gint32   *rcVlanColor;
    gint32   *rcVlanHighPriority;
    gint32   *rcVlanRoutingEnable;
    gint32   *rcVlanIfIndex;
    gint32   *rcVlanAction;
    gint32   *rcVlanResult;
    gint32   *rcVlanStgId;
    gint32   *rcVlanType;
    guchar   *rcVlanPortMembers;
    guchar   *rcVlanActiveMembers;
    guchar   *rcVlanStaticMembers;
    guchar   *rcVlanNotAllowToJoin;
    gint32   *rcVlanProtocolId;
    guchar   *rcVlanSubnetAddr;
    guchar   *rcVlanSubnetMask;
    gint32   *rcVlanAgingTime;
    guchar   *rcVlanMacAddress;
    gint32   *rcVlanRowStatus;
    gint32   *rcVlanIgmpSnoopEnable;
    gint32   *rcVlanIgmpSnoopReportProxyEnable;
    gint32   *rcVlanIgmpSnoopRobustness;
    gint32   *rcVlanIgmpSnoopQueryInterval;
    guchar   *rcVlanIgmpSnoopMRouterPorts;
    gint32   *rcVlanUserDefinedPid;
    guchar   *rcVlanIgmpSnoopActiveMRouterPorts;
    gint32   *rcVlanProtocolIds;
    guchar   *rcVlanIgmpSnoopActiveQuerier;
    gint32   *rcVlanIgmpSnoopMRouterExpiration;
    gint32   *rcVlanIgmpSnoopQuerierPort;
} rapid_city_rcVlanEntry_t;

extern void
rapid_city_get_rcVlanTable(GSnmpSession *s, rapid_city_rcVlanEntry_t ***rcVlanEntry, gint mask);

extern void
rapid_city_free_rcVlanTable(rapid_city_rcVlanEntry_t **rcVlanEntry);

extern rapid_city_rcVlanEntry_t *
rapid_city_new_rcVlanEntry(void);

extern void
rapid_city_get_rcVlanEntry(GSnmpSession *s, rapid_city_rcVlanEntry_t **rcVlanEntry, gint32 rcVlanId, gint mask);

extern void
rapid_city_set_rcVlanEntry(GSnmpSession *s, rapid_city_rcVlanEntry_t *rcVlanEntry, gint mask);

extern void
rapid_city_free_rcVlanEntry(rapid_city_rcVlanEntry_t *rcVlanEntry);

/*
 * C type definitions for RAPID-CITY::rcVlanPortEntry.
 */

#define RAPID_CITY_RCVLANPORTINDEX	0x1 
#define RAPID_CITY_RCVLANPORTNUMVLANIDS	0x2 
#define RAPID_CITY_RCVLANPORTVLANIDS	0x4 
#define RAPID_CITY_RCVLANPORTTYPE	0x8 
#define RAPID_CITY_RCVLANPORTDISCARDTAGGEDFRAMES	0x10 
#define RAPID_CITY_RCVLANPORTDISCARDUNTAGGEDFRAMES	0x20 
#define RAPID_CITY_RCVLANPORTDEFAULTVLANID	0x40 
#define RAPID_CITY_RCVLANPORTPERFORMTAGGING	0x80 

typedef struct {
    gint32   rcVlanPortIndex;
    gint32   *rcVlanPortNumVlanIds;
    guchar   *rcVlanPortVlanIds;
    gint32   *rcVlanPortType;
    gint32   *rcVlanPortDiscardTaggedFrames;
    gint32   *rcVlanPortDiscardUntaggedFrames;
    gint32   *rcVlanPortDefaultVlanId;
    gint32   *rcVlanPortPerformTagging;
} rapid_city_rcVlanPortEntry_t;

extern void
rapid_city_get_rcVlanPortTable(GSnmpSession *s, rapid_city_rcVlanPortEntry_t ***rcVlanPortEntry, gint mask);

extern void
rapid_city_free_rcVlanPortTable(rapid_city_rcVlanPortEntry_t **rcVlanPortEntry);

extern rapid_city_rcVlanPortEntry_t *
rapid_city_new_rcVlanPortEntry(void);

extern void
rapid_city_get_rcVlanPortEntry(GSnmpSession *s, rapid_city_rcVlanPortEntry_t **rcVlanPortEntry, gint32 rcVlanPortIndex, gint mask);

extern void
rapid_city_set_rcVlanPortEntry(GSnmpSession *s, rapid_city_rcVlanPortEntry_t *rcVlanPortEntry, gint mask);

extern void
rapid_city_free_rcVlanPortEntry(rapid_city_rcVlanPortEntry_t *rcVlanPortEntry);

/*
 * C type definitions for RAPID-CITY::rcVlanMacEntry.
 */

#define RAPID_CITY_RCVLANMACVLANID	0x1 
#define RAPID_CITY_RCVLANMACADDR	0x2 
#define RAPID_CITY_RCVLANMACROWSTATUS	0x4 

typedef struct {
    gint32   rcVlanMacVlanId;
    guchar   rcVlanMacAddr[6];
    gint32   *rcVlanMacRowStatus;
} rapid_city_rcVlanMacEntry_t;

extern void
rapid_city_get_rcVlanMacTable(GSnmpSession *s, rapid_city_rcVlanMacEntry_t ***rcVlanMacEntry, gint mask);

extern void
rapid_city_free_rcVlanMacTable(rapid_city_rcVlanMacEntry_t **rcVlanMacEntry);

extern rapid_city_rcVlanMacEntry_t *
rapid_city_new_rcVlanMacEntry(void);

extern void
rapid_city_get_rcVlanMacEntry(GSnmpSession *s, rapid_city_rcVlanMacEntry_t **rcVlanMacEntry, gint32 rcVlanMacVlanId, guchar *rcVlanMacAddr, gint mask);

extern void
rapid_city_set_rcVlanMacEntry(GSnmpSession *s, rapid_city_rcVlanMacEntry_t *rcVlanMacEntry, gint mask);

extern void
rapid_city_free_rcVlanMacEntry(rapid_city_rcVlanMacEntry_t *rcVlanMacEntry);

/*
 * C type definitions for RAPID-CITY::rcVlanIgmpSnoopEntry.
 */

#define RAPID_CITY_RCVLANIGMPSNOOPVLANID	0x1 
#define RAPID_CITY_RCVLANIGMPSNOOPIPADDRESS	0x2 
#define RAPID_CITY_RCVLANIGMPSNOOPIFINDEX	0x4 
#define RAPID_CITY_RCVLANIGMPSNOOPMEMBER	0x8 
#define RAPID_CITY_RCVLANIGMPSNOOPEXPIRATION	0x10 
#define RAPID_CITY_RCVLANIGMPSNOOPTYPE	0x20 

typedef struct {
    gint32   rcVlanIgmpSnoopVlanId;
    guchar   rcVlanIgmpSnoopIpAddress[4];
    gint32   rcVlanIgmpSnoopIfIndex;
    guchar   rcVlanIgmpSnoopMember[4];
    gint32   *rcVlanIgmpSnoopExpiration;
    gint32   *rcVlanIgmpSnoopType;
} rapid_city_rcVlanIgmpSnoopEntry_t;

extern void
rapid_city_get_rcVlanIgmpSnoopTable(GSnmpSession *s, rapid_city_rcVlanIgmpSnoopEntry_t ***rcVlanIgmpSnoopEntry, gint mask);

extern void
rapid_city_free_rcVlanIgmpSnoopTable(rapid_city_rcVlanIgmpSnoopEntry_t **rcVlanIgmpSnoopEntry);

extern rapid_city_rcVlanIgmpSnoopEntry_t *
rapid_city_new_rcVlanIgmpSnoopEntry(void);

extern void
rapid_city_get_rcVlanIgmpSnoopEntry(GSnmpSession *s, rapid_city_rcVlanIgmpSnoopEntry_t **rcVlanIgmpSnoopEntry, gint32 rcVlanIgmpSnoopVlanId, guchar *rcVlanIgmpSnoopIpAddress, gint32 rcVlanIgmpSnoopIfIndex, guchar *rcVlanIgmpSnoopMember, gint mask);

extern void
rapid_city_free_rcVlanIgmpSnoopEntry(rapid_city_rcVlanIgmpSnoopEntry_t *rcVlanIgmpSnoopEntry);

/*
 * C type definitions for RAPID-CITY::rcVlanIgmpSnoopStaticEntry.
 */

#define RAPID_CITY_RCVLANIGMPSNOOPSTATICVLANID	0x1 
#define RAPID_CITY_RCVLANIGMPSNOOPSTATICIPADDRESS	0x2 
#define RAPID_CITY_RCVLANIGMPSNOOPSTATICMEMBERPORTS	0x4 
#define RAPID_CITY_RCVLANIGMPSNOOPSTATICROWSTATUS	0x8 
#define RAPID_CITY_RCVLANIGMPSNOOPSTATICNOTALLOWEDTOJOIN	0x10 

typedef struct {
    gint32   rcVlanIgmpSnoopStaticVlanId;
    guchar   rcVlanIgmpSnoopStaticIpAddress[4];
    guchar   *rcVlanIgmpSnoopStaticMemberPorts;
    gint32   *rcVlanIgmpSnoopStaticRowStatus;
    guchar   *rcVlanIgmpSnoopStaticNotAllowedToJoin;
} rapid_city_rcVlanIgmpSnoopStaticEntry_t;

extern void
rapid_city_get_rcVlanIgmpSnoopStaticTable(GSnmpSession *s, rapid_city_rcVlanIgmpSnoopStaticEntry_t ***rcVlanIgmpSnoopStaticEntry, gint mask);

extern void
rapid_city_free_rcVlanIgmpSnoopStaticTable(rapid_city_rcVlanIgmpSnoopStaticEntry_t **rcVlanIgmpSnoopStaticEntry);

extern rapid_city_rcVlanIgmpSnoopStaticEntry_t *
rapid_city_new_rcVlanIgmpSnoopStaticEntry(void);

extern void
rapid_city_get_rcVlanIgmpSnoopStaticEntry(GSnmpSession *s, rapid_city_rcVlanIgmpSnoopStaticEntry_t **rcVlanIgmpSnoopStaticEntry, gint32 rcVlanIgmpSnoopStaticVlanId, guchar *rcVlanIgmpSnoopStaticIpAddress, gint mask);

extern void
rapid_city_set_rcVlanIgmpSnoopStaticEntry(GSnmpSession *s, rapid_city_rcVlanIgmpSnoopStaticEntry_t *rcVlanIgmpSnoopStaticEntry, gint mask);

extern void
rapid_city_free_rcVlanIgmpSnoopStaticEntry(rapid_city_rcVlanIgmpSnoopStaticEntry_t *rcVlanIgmpSnoopStaticEntry);

/*
 * C type definitions for RAPID-CITY::rcVlanIgmpSnoopAccessEntry.
 */

#define RAPID_CITY_RCVLANIGMPSNOOPACCESSVLANID	0x1 
#define RAPID_CITY_RCVLANIGMPSNOOPACCESSGRPADDR	0x2 
#define RAPID_CITY_RCVLANIGMPSNOOPACCESSHOSTADDR	0x4 
#define RAPID_CITY_RCVLANIGMPSNOOPACCESSHOSTMASK	0x8 
#define RAPID_CITY_RCVLANIGMPSNOOPACCESSMODE	0x10 
#define RAPID_CITY_RCVLANIGMPSNOOPACCESSROWSTATUS	0x20 

typedef struct {
    gint32   rcVlanIgmpSnoopAccessVlanId;
    guchar   rcVlanIgmpSnoopAccessGrpAddr[4];
    guchar   rcVlanIgmpSnoopAccessHostAddr[4];
    guchar   rcVlanIgmpSnoopAccessHostMask[4];
    gint32   *rcVlanIgmpSnoopAccessMode;
    gint32   *rcVlanIgmpSnoopAccessRowStatus;
} rapid_city_rcVlanIgmpSnoopAccessEntry_t;

extern void
rapid_city_get_rcVlanIgmpSnoopAccessTable(GSnmpSession *s, rapid_city_rcVlanIgmpSnoopAccessEntry_t ***rcVlanIgmpSnoopAccessEntry, gint mask);

extern void
rapid_city_free_rcVlanIgmpSnoopAccessTable(rapid_city_rcVlanIgmpSnoopAccessEntry_t **rcVlanIgmpSnoopAccessEntry);

extern rapid_city_rcVlanIgmpSnoopAccessEntry_t *
rapid_city_new_rcVlanIgmpSnoopAccessEntry(void);

extern void
rapid_city_get_rcVlanIgmpSnoopAccessEntry(GSnmpSession *s, rapid_city_rcVlanIgmpSnoopAccessEntry_t **rcVlanIgmpSnoopAccessEntry, gint32 rcVlanIgmpSnoopAccessVlanId, guchar *rcVlanIgmpSnoopAccessGrpAddr, guchar *rcVlanIgmpSnoopAccessHostAddr, guchar *rcVlanIgmpSnoopAccessHostMask, gint mask);

extern void
rapid_city_set_rcVlanIgmpSnoopAccessEntry(GSnmpSession *s, rapid_city_rcVlanIgmpSnoopAccessEntry_t *rcVlanIgmpSnoopAccessEntry, gint mask);

extern void
rapid_city_free_rcVlanIgmpSnoopAccessEntry(rapid_city_rcVlanIgmpSnoopAccessEntry_t *rcVlanIgmpSnoopAccessEntry);

/*
 * C type definitions for RAPID-CITY::rcVlanIgmpSnoopSenderEntry.
 */

#define RAPID_CITY_RCVLANIGMPSNOOPSENDERVLANID	0x1 
#define RAPID_CITY_RCVLANIGMPSNOOPSENDERIPADDRESS	0x2 
#define RAPID_CITY_RCVLANIGMPSNOOPSENDERIFINDEX	0x4 
#define RAPID_CITY_RCVLANIGMPSNOOPSENDERMEMBER	0x8 
#define RAPID_CITY_RCVLANIGMPSNOOPSENDERACTION	0x10 

typedef struct {
    gint32   rcVlanIgmpSnoopSenderVlanId;
    guchar   rcVlanIgmpSnoopSenderIpAddress[4];
    gint32   rcVlanIgmpSnoopSenderIfIndex;
    guchar   rcVlanIgmpSnoopSenderMember[4];
    gint32   *rcVlanIgmpSnoopSenderAction;
} rapid_city_rcVlanIgmpSnoopSenderEntry_t;

extern void
rapid_city_get_rcVlanIgmpSnoopSenderTable(GSnmpSession *s, rapid_city_rcVlanIgmpSnoopSenderEntry_t ***rcVlanIgmpSnoopSenderEntry, gint mask);

extern void
rapid_city_free_rcVlanIgmpSnoopSenderTable(rapid_city_rcVlanIgmpSnoopSenderEntry_t **rcVlanIgmpSnoopSenderEntry);

extern rapid_city_rcVlanIgmpSnoopSenderEntry_t *
rapid_city_new_rcVlanIgmpSnoopSenderEntry(void);

extern void
rapid_city_get_rcVlanIgmpSnoopSenderEntry(GSnmpSession *s, rapid_city_rcVlanIgmpSnoopSenderEntry_t **rcVlanIgmpSnoopSenderEntry, gint32 rcVlanIgmpSnoopSenderVlanId, guchar *rcVlanIgmpSnoopSenderIpAddress, gint32 rcVlanIgmpSnoopSenderIfIndex, guchar *rcVlanIgmpSnoopSenderMember, gint mask);

extern void
rapid_city_set_rcVlanIgmpSnoopSenderEntry(GSnmpSession *s, rapid_city_rcVlanIgmpSnoopSenderEntry_t *rcVlanIgmpSnoopSenderEntry, gint mask);

extern void
rapid_city_free_rcVlanIgmpSnoopSenderEntry(rapid_city_rcVlanIgmpSnoopSenderEntry_t *rcVlanIgmpSnoopSenderEntry);

/*
 * C type definitions for RAPID-CITY::rcChassis.
 */

#define RAPID_CITY_RCCHASTYPE	0x1 
#define RAPID_CITY_RCCHASSERIALNUMBER	0x2 
#define RAPID_CITY_RCCHASHARDWAREREVISION	0x4 
#define RAPID_CITY_RCCHASNUMSLOTS	0x8 
#define RAPID_CITY_RCCHASNUMPORTS	0x10 
#define RAPID_CITY_RCCHASTESTRESULT	0x20 
#define RAPID_CITY_RCCHASARUMODE	0x40 
#define RAPID_CITY_RCCHASQUIDMODE	0x80 
#define RAPID_CITY_RCCHASEOCMODEADMINSTATUS	0x100 
#define RAPID_CITY_RCCHASEOCMODEOPERSTATUS	0x200 

typedef struct {
    gint32   *rcChasType;
    guchar   *rcChasSerialNumber;
    gsize    _rcChasSerialNumberLength;
    guchar   *rcChasHardwareRevision;
    gsize    _rcChasHardwareRevisionLength;
    gint32   *rcChasNumSlots;
    gint32   *rcChasNumPorts;
    gint32   *rcChasTestResult;
    gint32   *rcChasAruMode;
    gint32   *rcChasQuidMode;
    gint32   *rcChasEocModeAdminStatus;
    gint32   *rcChasEocModeOperStatus;
} rapid_city_rcChassis_t;

extern rapid_city_rcChassis_t *
rapid_city_new_rcChassis(void);

extern void
rapid_city_get_rcChassis(GSnmpSession *s, rapid_city_rcChassis_t **rcChassis, gint mask);

extern void
rapid_city_set_rcChassis(GSnmpSession *s, rapid_city_rcChassis_t *rcChassis, gint mask);

extern void
rapid_city_free_rcChassis(rapid_city_rcChassis_t *rcChassis);

/*
 * C type definitions for RAPID-CITY::rcChasFanEntry.
 */

#define RAPID_CITY_RCCHASFANID	0x1 
#define RAPID_CITY_RCCHASFANOPERSTATUS	0x2 

typedef struct {
    gint32   rcChasFanId;
    gint32   *rcChasFanOperStatus;
} rapid_city_rcChasFanEntry_t;

extern void
rapid_city_get_rcChasFanTable(GSnmpSession *s, rapid_city_rcChasFanEntry_t ***rcChasFanEntry, gint mask);

extern void
rapid_city_free_rcChasFanTable(rapid_city_rcChasFanEntry_t **rcChasFanEntry);

extern rapid_city_rcChasFanEntry_t *
rapid_city_new_rcChasFanEntry(void);

extern void
rapid_city_get_rcChasFanEntry(GSnmpSession *s, rapid_city_rcChasFanEntry_t **rcChasFanEntry, gint32 rcChasFanId, gint mask);

extern void
rapid_city_free_rcChasFanEntry(rapid_city_rcChasFanEntry_t *rcChasFanEntry);

/*
 * C type definitions for RAPID-CITY::rcChasPowerSupplyEntry.
 */

#define RAPID_CITY_RCCHASPOWERSUPPLYID	0x1 
#define RAPID_CITY_RCCHASPOWERSUPPLYOPERSTATUS	0x2 

typedef struct {
    gint32   rcChasPowerSupplyId;
    gint32   *rcChasPowerSupplyOperStatus;
} rapid_city_rcChasPowerSupplyEntry_t;

extern void
rapid_city_get_rcChasPowerSupplyTable(GSnmpSession *s, rapid_city_rcChasPowerSupplyEntry_t ***rcChasPowerSupplyEntry, gint mask);

extern void
rapid_city_free_rcChasPowerSupplyTable(rapid_city_rcChasPowerSupplyEntry_t **rcChasPowerSupplyEntry);

extern rapid_city_rcChasPowerSupplyEntry_t *
rapid_city_new_rcChasPowerSupplyEntry(void);

extern void
rapid_city_get_rcChasPowerSupplyEntry(GSnmpSession *s, rapid_city_rcChasPowerSupplyEntry_t **rcChasPowerSupplyEntry, gint32 rcChasPowerSupplyId, gint mask);

extern void
rapid_city_free_rcChasPowerSupplyEntry(rapid_city_rcChasPowerSupplyEntry_t *rcChasPowerSupplyEntry);

/*
 * C type definitions for RAPID-CITY::rcChasPowerSupplyDetailEntry.
 */

#define RAPID_CITY_RCCHASPOWERSUPPLYDETAILID	0x1 
#define RAPID_CITY_RCCHASPOWERSUPPLYDETAILTYPE	0x2 
#define RAPID_CITY_RCCHASPOWERSUPPLYDETAILSERIALNUMBER	0x4 
#define RAPID_CITY_RCCHASPOWERSUPPLYDETAILHARDWAREREVISION	0x8 
#define RAPID_CITY_RCCHASPOWERSUPPLYDETAILPARTNUMBER	0x10 

typedef struct {
    gint32   rcChasPowerSupplyDetailId;
    gint32   *rcChasPowerSupplyDetailType;
    guchar   *rcChasPowerSupplyDetailSerialNumber;
    gsize    _rcChasPowerSupplyDetailSerialNumberLength;
    guchar   *rcChasPowerSupplyDetailHardwareRevision;
    gsize    _rcChasPowerSupplyDetailHardwareRevisionLength;
    guchar   *rcChasPowerSupplyDetailPartNumber;
    gsize    _rcChasPowerSupplyDetailPartNumberLength;
} rapid_city_rcChasPowerSupplyDetailEntry_t;

extern void
rapid_city_get_rcChasPowerSupplyDetailTable(GSnmpSession *s, rapid_city_rcChasPowerSupplyDetailEntry_t ***rcChasPowerSupplyDetailEntry, gint mask);

extern void
rapid_city_free_rcChasPowerSupplyDetailTable(rapid_city_rcChasPowerSupplyDetailEntry_t **rcChasPowerSupplyDetailEntry);

extern rapid_city_rcChasPowerSupplyDetailEntry_t *
rapid_city_new_rcChasPowerSupplyDetailEntry(void);

extern void
rapid_city_get_rcChasPowerSupplyDetailEntry(GSnmpSession *s, rapid_city_rcChasPowerSupplyDetailEntry_t **rcChasPowerSupplyDetailEntry, gint32 rcChasPowerSupplyDetailId, gint mask);

extern void
rapid_city_free_rcChasPowerSupplyDetailEntry(rapid_city_rcChasPowerSupplyDetailEntry_t *rcChasPowerSupplyDetailEntry);

/*
 * C type definitions for RAPID-CITY::rcCardEntry.
 */

#define RAPID_CITY_RCCARDINDEX	0x1 
#define RAPID_CITY_RCCARDTYPE	0x2 
#define RAPID_CITY_RCCARDSERIALNUMBER	0x4 
#define RAPID_CITY_RCCARDHARDWAREREVISION	0x8 
#define RAPID_CITY_RCCARDADMINSTATUS	0x10 
#define RAPID_CITY_RCCARDOPERSTATUS	0x20 
#define RAPID_CITY_RCCARDPCMCIATYPE	0x40 
#define RAPID_CITY_RCCARDPARTNUMBER	0x80 

typedef struct {
    gint32   rcCardIndex;
    gint32   *rcCardType;
    guchar   *rcCardSerialNumber;
    gsize    _rcCardSerialNumberLength;
    guchar   *rcCardHardwareRevision;
    gsize    _rcCardHardwareRevisionLength;
    gint32   *rcCardAdminStatus;
    gint32   *rcCardOperStatus;
    gint32   *rcCardPCMCIAType;
    guchar   *rcCardPartNumber;
    gsize    _rcCardPartNumberLength;
} rapid_city_rcCardEntry_t;

extern void
rapid_city_get_rcCardTable(GSnmpSession *s, rapid_city_rcCardEntry_t ***rcCardEntry, gint mask);

extern void
rapid_city_free_rcCardTable(rapid_city_rcCardEntry_t **rcCardEntry);

extern rapid_city_rcCardEntry_t *
rapid_city_new_rcCardEntry(void);

extern void
rapid_city_get_rcCardEntry(GSnmpSession *s, rapid_city_rcCardEntry_t **rcCardEntry, gint32 rcCardIndex, gint mask);

extern void
rapid_city_set_rcCardEntry(GSnmpSession *s, rapid_city_rcCardEntry_t *rcCardEntry, gint mask);

extern void
rapid_city_free_rcCardEntry(rapid_city_rcCardEntry_t *rcCardEntry);

/*
 * C type definitions for RAPID-CITY::rcPortEntry.
 */

#define RAPID_CITY_RCPORTINDEX	0x1 
#define RAPID_CITY_RCPORTTYPE	0x2 
#define RAPID_CITY_RCPORTCONNECTORTYPE	0x4 
#define RAPID_CITY_RCPORTPERFORMROUTING	0x8 
#define RAPID_CITY_RCPORTHIGHPRIORITY	0x10 
#define RAPID_CITY_RCPORTACTION	0x20 
#define RAPID_CITY_RCPORTRESULT	0x40 
#define RAPID_CITY_RCPORTPRIMARYCONNECTOR	0x80 
#define RAPID_CITY_RCPORTACTIVECONNECTOR	0x100 
#define RAPID_CITY_RCPORTBACKUPCONNECTORSTATUS	0x200 
#define RAPID_CITY_RCPORTAUTONEGOTIATE	0x400 
#define RAPID_CITY_RCPORTADMINDUPLEX	0x800 
#define RAPID_CITY_RCPORTOPERDUPLEX	0x1000 
#define RAPID_CITY_RCPORTADMINSPEED	0x2000 
#define RAPID_CITY_RCPORTOPERSPEED	0x4000 
#define RAPID_CITY_RCPORTMLTID	0x8000 
#define RAPID_CITY_RCPORTLOCKED	0x10000 
#define RAPID_CITY_RCPORTAUTONEGOTIATIONSUPPORTED	0x20000 
#define RAPID_CITY_RCPORTSINGLEROUTABLEPORT	0x40000 
#define RAPID_CITY_RCPORTUNKNOWNMACDISCARD	0x80000 
#define RAPID_CITY_RCPORTNUMSTATETRANSITION	0x100000 

typedef struct {
    gint32   rcPortIndex;
    gint32   *rcPortType;
    gint32   *rcPortConnectorType;
    gint32   *rcPortPerformRouting;
    gint32   *rcPortHighPriority;
    gint32   *rcPortAction;
    gint32   *rcPortResult;
    gint32   *rcPortPrimaryConnector;
    gint32   *rcPortActiveConnector;
    gint32   *rcPortBackupConnectorStatus;
    gint32   *rcPortAutoNegotiate;
    gint32   *rcPortAdminDuplex;
    gint32   *rcPortOperDuplex;
    gint32   *rcPortAdminSpeed;
    gint32   *rcPortOperSpeed;
    gint32   *rcPortMltId;
    gint32   *rcPortLocked;
    gint32   *rcPortAutoNegotiationSupported;
    gint32   *rcPortSingleRoutablePort;
    gint32   *rcPortUnknownMacDiscard;
    guint32  *rcPortNumStateTransition;
} rapid_city_rcPortEntry_t;

extern void
rapid_city_get_rcPortTable(GSnmpSession *s, rapid_city_rcPortEntry_t ***rcPortEntry, gint mask);

extern void
rapid_city_free_rcPortTable(rapid_city_rcPortEntry_t **rcPortEntry);

extern rapid_city_rcPortEntry_t *
rapid_city_new_rcPortEntry(void);

extern void
rapid_city_get_rcPortEntry(GSnmpSession *s, rapid_city_rcPortEntry_t **rcPortEntry, gint32 rcPortIndex, gint mask);

extern void
rapid_city_set_rcPortEntry(GSnmpSession *s, rapid_city_rcPortEntry_t *rcPortEntry, gint mask);

extern void
rapid_city_free_rcPortEntry(rapid_city_rcPortEntry_t *rcPortEntry);

/*
 * C type definitions for RAPID-CITY::rcPortLock.
 */

#define RAPID_CITY_RCPORTLOCKENABLE	0x1 
#define RAPID_CITY_RCPORTLOCKLOCKEDPORTS	0x2 

typedef struct {
    gint32   *rcPortLockEnable;
    guchar   *rcPortLockLockedPorts;
} rapid_city_rcPortLock_t;

extern rapid_city_rcPortLock_t *
rapid_city_new_rcPortLock(void);

extern void
rapid_city_get_rcPortLock(GSnmpSession *s, rapid_city_rcPortLock_t **rcPortLock, gint mask);

extern void
rapid_city_set_rcPortLock(GSnmpSession *s, rapid_city_rcPortLock_t *rcPortLock, gint mask);

extern void
rapid_city_free_rcPortLock(rapid_city_rcPortLock_t *rcPortLock);

/*
 * C type definitions for RAPID-CITY::rcPortAtmLecExtEntry.
 */

#define RAPID_CITY_RCPORTATMLECEXTIFINDEX	0x1 
#define RAPID_CITY_RCPORTATMLECEXTLECSTATUS	0x2 
#define RAPID_CITY_RCPORTATMLECEXTLECSTATE	0x4 
#define RAPID_CITY_RCPORTATMLECEXTVIRTUALPORTID	0x8 
#define RAPID_CITY_RCPORTATMLECEXTELANNAME	0x10 
#define RAPID_CITY_RCPORTATMLECEXTVLANID	0x20 
#define RAPID_CITY_RCPORTATMLECEXTDESIREDPHYSICALPORT	0x40 
#define RAPID_CITY_RCPORTATMLECEXTACTUALPHYSICALPORT	0x80 
#define RAPID_CITY_RCPORTATMLECEXTFAILOVERENABLE	0x100 

typedef struct {
    gint32   rcPortAtmLecExtIfIndex;
    gint32   *rcPortAtmLecExtLecStatus;
    gint32   *rcPortAtmLecExtLecState;
    gint32   *rcPortAtmLecExtVirtualPortId;
    guchar   *rcPortAtmLecExtElanName;
    gsize    _rcPortAtmLecExtElanNameLength;
    gint32   *rcPortAtmLecExtVlanId;
    gint32   *rcPortAtmLecExtDesiredPhysicalPort;
    gint32   *rcPortAtmLecExtActualPhysicalPort;
    gint32   *rcPortAtmLecExtFailoverEnable;
} rapid_city_rcPortAtmLecExtEntry_t;

extern void
rapid_city_get_rcPortAtmLecExtTable(GSnmpSession *s, rapid_city_rcPortAtmLecExtEntry_t ***rcPortAtmLecExtEntry, gint mask);

extern void
rapid_city_free_rcPortAtmLecExtTable(rapid_city_rcPortAtmLecExtEntry_t **rcPortAtmLecExtEntry);

extern rapid_city_rcPortAtmLecExtEntry_t *
rapid_city_new_rcPortAtmLecExtEntry(void);

extern void
rapid_city_get_rcPortAtmLecExtEntry(GSnmpSession *s, rapid_city_rcPortAtmLecExtEntry_t **rcPortAtmLecExtEntry, gint32 rcPortAtmLecExtIfIndex, gint mask);

extern void
rapid_city_set_rcPortAtmLecExtEntry(GSnmpSession *s, rapid_city_rcPortAtmLecExtEntry_t *rcPortAtmLecExtEntry, gint mask);

extern void
rapid_city_free_rcPortAtmLecExtEntry(rapid_city_rcPortAtmLecExtEntry_t *rcPortAtmLecExtEntry);

/*
 * C type definitions for RAPID-CITY::rcMirror.
 */

#define RAPID_CITY_RCMIRRORSAVECONFIG	0x1 

typedef struct {
    gint32   *rcMirrorSaveConfig;
} rapid_city_rcMirror_t;

extern rapid_city_rcMirror_t *
rapid_city_new_rcMirror(void);

extern void
rapid_city_get_rcMirror(GSnmpSession *s, rapid_city_rcMirror_t **rcMirror, gint mask);

extern void
rapid_city_set_rcMirror(GSnmpSession *s, rapid_city_rcMirror_t *rcMirror, gint mask);

extern void
rapid_city_free_rcMirror(rapid_city_rcMirror_t *rcMirror);

/*
 * C type definitions for RAPID-CITY::rcMirrorByPort.
 */

#define RAPID_CITY_RCMIRRORBYPORTENABLE	0x1 
#define RAPID_CITY_RCMIRRORBYPORTMIRRORPORT	0x2 
#define RAPID_CITY_RCMIRRORBYPORTENABLEMIRROREDPORTONE	0x4 
#define RAPID_CITY_RCMIRRORBYPORTMIRROREDPORTONE	0x8 
#define RAPID_CITY_RCMIRRORBYPORTENABLEMIRROREDPORTTWO	0x10 
#define RAPID_CITY_RCMIRRORBYPORTMIRROREDPORTTWO	0x20 

typedef struct {
    gint32   *rcMirrorByPortEnable;
    gint32   *rcMirrorByPortMirrorPort;
    gint32   *rcMirrorByPortEnableMirroredPortOne;
    gint32   *rcMirrorByPortMirroredPortOne;
    gint32   *rcMirrorByPortEnableMirroredPortTwo;
    gint32   *rcMirrorByPortMirroredPortTwo;
} rapid_city_rcMirrorByPort_t;

extern rapid_city_rcMirrorByPort_t *
rapid_city_new_rcMirrorByPort(void);

extern void
rapid_city_get_rcMirrorByPort(GSnmpSession *s, rapid_city_rcMirrorByPort_t **rcMirrorByPort, gint mask);

extern void
rapid_city_set_rcMirrorByPort(GSnmpSession *s, rapid_city_rcMirrorByPort_t *rcMirrorByPort, gint mask);

extern void
rapid_city_free_rcMirrorByPort(rapid_city_rcMirrorByPort_t *rcMirrorByPort);

/*
 * C type definitions for RAPID-CITY::rcDipSwitch.
 */

#define RAPID_CITY_RCISOLATEUNCONFIGPORTS	0x1 
#define RAPID_CITY_RCUSEFACTORYSETTINGS	0x2 
#define RAPID_CITY_RCHIGHPRIORITYMODE	0x4 

typedef struct {
    gint32   *rcIsolateUnconfigPorts;
    gint32   *rcUseFactorySettings;
    gint32   *rcHighPriorityMode;
} rapid_city_rcDipSwitch_t;

extern rapid_city_rcDipSwitch_t *
rapid_city_new_rcDipSwitch(void);

extern void
rapid_city_get_rcDipSwitch(GSnmpSession *s, rapid_city_rcDipSwitch_t **rcDipSwitch, gint mask);

extern void
rapid_city_free_rcDipSwitch(rapid_city_rcDipSwitch_t *rcDipSwitch);

/*
 * C type definitions for RAPID-CITY::rcTblSize.
 */

#define RAPID_CITY_RCTBLRMONSTATSIZE	0x1 
#define RAPID_CITY_RCTBLRMONHISTORYCONTROLSIZE	0x2 
#define RAPID_CITY_RCTBLRMONHISTORYENETSIZE	0x4 
#define RAPID_CITY_RCTBLRMONALARMSIZE	0x8 
#define RAPID_CITY_RCTBLRMONEVENTSIZE	0x10 
#define RAPID_CITY_RCTBLRMONLOGSIZE	0x20 
#define RAPID_CITY_RCTBLARTBLSIZE	0x40 
#define RAPID_CITY_RCTBLARFREE	0x80 
#define RAPID_CITY_RCTBLARNOSPACE	0x100 
#define RAPID_CITY_RCTBLARADDED	0x200 
#define RAPID_CITY_RCTBLARDELETED	0x400 
#define RAPID_CITY_RCTBLARMACADDED	0x800 
#define RAPID_CITY_RCTBLARMACDELETED	0x1000 
#define RAPID_CITY_RCTBLARMACMOVED	0x2000 
#define RAPID_CITY_RCTBLARIPADDED	0x4000 
#define RAPID_CITY_RCTBLARIPDELETED	0x8000 
#define RAPID_CITY_RCTBLARMCASTTBLSIZE	0x10000 
#define RAPID_CITY_RCTBLARFREEMCASTGROUPS	0x20000 
#define RAPID_CITY_RCTBLARIPMCASTADDED	0x40000 
#define RAPID_CITY_RCTBLARIPMCASTDELETED	0x80000 
#define RAPID_CITY_RCTBLARVLANBYPORTADDED	0x100000 
#define RAPID_CITY_RCTBLARVLANBYPORTDELETED	0x200000 
#define RAPID_CITY_RCTBLARVLANBYPROTOCOLADDED	0x400000 
#define RAPID_CITY_RCTBLARVLANBYPROTOCOLDELETED	0x800000 
#define RAPID_CITY_RCTBLARVLANBYIPSUBNETADDED	0x1000000 
#define RAPID_CITY_RCTBLARVLANBYIPSUBNETDELETED	0x2000000 
#define RAPID_CITY_RCTBLARIPSUBNETSADDED	0x4000000 
#define RAPID_CITY_RCTBLARIPSUBNETSDELETED	0x8000000 
#define RAPID_CITY_RCTBLARRSVPSADDED	0x10000000 
#define RAPID_CITY_RCTBLARRSVPSDELETED	0x20000000 
#define RAPID_CITY_RCTBLBRDGFDBSIZE	0x40000000 
#define RAPID_CITY_RCTBLBRDGSTATICSIZE	0x80000000 
#define RAPID_CITY_RCTBLIPADDRSIZE	0x0 
#define RAPID_CITY_RCTBLIPFORWARDINGSIZE	0x0 
#define RAPID_CITY_RCTBLIPNETTOMEDIASIZE	0x0 
typedef struct {
    gint32   *rcTblRmonStatSize;
    gint32   *rcTblRmonHistoryControlSize;
    gint32   *rcTblRmonHistoryEnetSize;
    gint32   *rcTblRmonAlarmSize;
    gint32   *rcTblRmonEventSize;
    gint32   *rcTblRmonLogSize;
    gint32   *rcTblArTblSize;
    gint32   *rcTblArFree;
    gint32   *rcTblArNoSpace;
    gint32   *rcTblArAdded;
    gint32   *rcTblArDeleted;
    gint32   *rcTblArMacAdded;
    gint32   *rcTblArMacDeleted;
    gint32   *rcTblArMacMoved;
    gint32   *rcTblArIpAdded;
    gint32   *rcTblArIpDeleted;
    gint32   *rcTblArMcastTblSize;
    gint32   *rcTblArFreeMcastGroups;
    gint32   *rcTblArIpMcastAdded;
    gint32   *rcTblArIpMcastDeleted;
    gint32   *rcTblArVlanByPortAdded;
    gint32   *rcTblArVlanByPortDeleted;
    gint32   *rcTblArVlanByProtocolAdded;
    gint32   *rcTblArVlanByProtocolDeleted;
    gint32   *rcTblArVlanByIpSubnetAdded;
    gint32   *rcTblArVlanByIpSubnetDeleted;
    gint32   *rcTblArIpSubnetsAdded;
    gint32   *rcTblArIpSubnetsDeleted;
    gint32   *rcTblArRsvpsAdded;
    gint32   *rcTblArRsvpsDeleted;
    gint32   *rcTblBrdgFdbSize;
    gint32   *rcTblBrdgStaticSize;
    gint32   *rcTblIpAddrSize;
    gint32   *rcTblIpForwardingSize;
    gint32   *rcTblIpNetToMediaSize;
} rapid_city_rcTblSize_t;

extern rapid_city_rcTblSize_t *
rapid_city_new_rcTblSize(void);

extern void
rapid_city_get_rcTblSize(GSnmpSession *s, rapid_city_rcTblSize_t **rcTblSize, gint mask);

extern void
rapid_city_free_rcTblSize(rapid_city_rcTblSize_t *rcTblSize);

/*
 * C type definitions for RAPID-CITY::rcIpConfEntry.
 */

#define RAPID_CITY_RCIPCONFIFINDEX	0x1 
#define RAPID_CITY_RCIPCONFADVERTDEFRTE	0x2 
#define RAPID_CITY_RCIPCONFACCEPTDEFRTE	0x4 
#define RAPID_CITY_RCIPCONFROWSTATUS	0x8 
#define RAPID_CITY_RCIPCONFRIPENABLE	0x10 
#define RAPID_CITY_RCIPCONFOSPFENABLE	0x20 
#define RAPID_CITY_RCIPCONFIGMPENABLE	0x40 
#define RAPID_CITY_RCIPCONFADDRASSIGNED	0x80 
#define RAPID_CITY_RCIPCONFDHCPENABLE	0x100 
#define RAPID_CITY_RCIPCONFTRIGGEREDUPDATEENABLE	0x200 
#define RAPID_CITY_RCIPCONFRIPAUTOAGGRERATEENABLE	0x400 
#define RAPID_CITY_RCIPCONFRIPGENERATEDEFAULTROUTE	0x800 

typedef struct {
    gint32   rcIpConfIfIndex;
    gint32   *rcIpConfAdvertDefRte;
    gint32   *rcIpConfAcceptDefRte;
    gint32   *rcIpConfRowStatus;
    gint32   *rcIpConfRipEnable;
    gint32   *rcIpConfOspfEnable;
    gint32   *rcIpConfIgmpEnable;
    gint32   *rcIpConfAddrAssigned;
    gint32   *rcIpConfDhcpEnable;
    gint32   *rcIpConfTriggeredUpdateEnable;
    gint32   *rcIpConfRipAutoAggrerateEnable;
    gint32   *rcIpConfRipGenerateDefaultRoute;
} rapid_city_rcIpConfEntry_t;

extern void
rapid_city_get_rcIpConfTable(GSnmpSession *s, rapid_city_rcIpConfEntry_t ***rcIpConfEntry, gint mask);

extern void
rapid_city_free_rcIpConfTable(rapid_city_rcIpConfEntry_t **rcIpConfEntry);

extern rapid_city_rcIpConfEntry_t *
rapid_city_new_rcIpConfEntry(void);

extern void
rapid_city_get_rcIpConfEntry(GSnmpSession *s, rapid_city_rcIpConfEntry_t **rcIpConfEntry, gint32 rcIpConfIfIndex, gint mask);

extern void
rapid_city_set_rcIpConfEntry(GSnmpSession *s, rapid_city_rcIpConfEntry_t *rcIpConfEntry, gint mask);

extern void
rapid_city_free_rcIpConfEntry(rapid_city_rcIpConfEntry_t *rcIpConfEntry);

/*
 * C type definitions for RAPID-CITY::rcIpConfOspfEntry.
 */

#define RAPID_CITY_RCIPCONFOSPFIFINDEX	0x1 
#define RAPID_CITY_RCIPCONFOSPFRTRPRIORITY	0x2 
#define RAPID_CITY_RCIPCONFOSPFMETRIC	0x4 
#define RAPID_CITY_RCIPCONFOSPFAUTHKEY	0x8 
#define RAPID_CITY_RCIPCONFOSPFROWSTATUS	0x10 
#define RAPID_CITY_RCIPCONFOSPFHELLOINTERVAL	0x20 
#define RAPID_CITY_RCIPCONFOSPFRTRDEADINTERVAL	0x40 
#define RAPID_CITY_RCIPCONFOSPFIFAREAID	0x80 
#define RAPID_CITY_RCIPCONFOSPFAUTHTYPE	0x100 

typedef struct {
    gint32   rcIpConfOspfIfIndex;
    gint32   *rcIpConfOspfRtrPriority;
    gint32   *rcIpConfOspfMetric;
    guchar   *rcIpConfOspfAuthKey;
    gint32   *rcIpConfOspfRowStatus;
    gint32   *rcIpConfOspfHelloInterval;
    gint32   *rcIpConfOspfRtrDeadInterval;
    guchar   *rcIpConfOspfIfAreaId;
    gint32   *rcIpConfOspfAuthType;
} rapid_city_rcIpConfOspfEntry_t;

extern void
rapid_city_get_rcIpConfOspfTable(GSnmpSession *s, rapid_city_rcIpConfOspfEntry_t ***rcIpConfOspfEntry, gint mask);

extern void
rapid_city_free_rcIpConfOspfTable(rapid_city_rcIpConfOspfEntry_t **rcIpConfOspfEntry);

extern rapid_city_rcIpConfOspfEntry_t *
rapid_city_new_rcIpConfOspfEntry(void);

extern void
rapid_city_get_rcIpConfOspfEntry(GSnmpSession *s, rapid_city_rcIpConfOspfEntry_t **rcIpConfOspfEntry, gint32 rcIpConfOspfIfIndex, gint mask);

extern void
rapid_city_set_rcIpConfOspfEntry(GSnmpSession *s, rapid_city_rcIpConfOspfEntry_t *rcIpConfOspfEntry, gint mask);

extern void
rapid_city_free_rcIpConfOspfEntry(rapid_city_rcIpConfOspfEntry_t *rcIpConfOspfEntry);

/*
 * C type definitions for RAPID-CITY::rcIpConfOspfDefaultMetric.
 */

#define RAPID_CITY_RCIPCONFOSPFDEFAULTMETRIC10MEGPORT	0x1 
#define RAPID_CITY_RCIPCONFOSPFDEFAULTMETRIC100MEGPORT	0x2 
#define RAPID_CITY_RCIPCONFOSPFDEFAULTMETRIC1000MEGPORT	0x4 

typedef struct {
    gint32   *rcIpConfOspfDefaultMetric10MegPort;
    gint32   *rcIpConfOspfDefaultMetric100MegPort;
    gint32   *rcIpConfOspfDefaultMetric1000MegPort;
} rapid_city_rcIpConfOspfDefaultMetric_t;

extern rapid_city_rcIpConfOspfDefaultMetric_t *
rapid_city_new_rcIpConfOspfDefaultMetric(void);

extern void
rapid_city_get_rcIpConfOspfDefaultMetric(GSnmpSession *s, rapid_city_rcIpConfOspfDefaultMetric_t **rcIpConfOspfDefaultMetric, gint mask);

extern void
rapid_city_set_rcIpConfOspfDefaultMetric(GSnmpSession *s, rapid_city_rcIpConfOspfDefaultMetric_t *rcIpConfOspfDefaultMetric, gint mask);

extern void
rapid_city_free_rcIpConfOspfDefaultMetric(rapid_city_rcIpConfOspfDefaultMetric_t *rcIpConfOspfDefaultMetric);

/*
 * C type definitions for RAPID-CITY::rcIpConfOspf.
 */

#define RAPID_CITY_RCIPCONFOSPFTRAPENABLE	0x1 
#define RAPID_CITY_RCIPCONFOSPFAUTOVIRTLINKENABLE	0x2 
#define RAPID_CITY_RCIPCONFOSPFSPFHOLDDOWNTIME	0x4 

typedef struct {
    gint32   *rcIpConfOspfTrapEnable;
    gint32   *rcIpConfOspfAutoVirtLinkEnable;
    gint32   *rcIpConfOspfSpfHoldDownTime;
} rapid_city_rcIpConfOspf_t;

extern rapid_city_rcIpConfOspf_t *
rapid_city_new_rcIpConfOspf(void);

extern void
rapid_city_get_rcIpConfOspf(GSnmpSession *s, rapid_city_rcIpConfOspf_t **rcIpConfOspf, gint mask);

extern void
rapid_city_set_rcIpConfOspf(GSnmpSession *s, rapid_city_rcIpConfOspf_t *rcIpConfOspf, gint mask);

extern void
rapid_city_free_rcIpConfOspf(rapid_city_rcIpConfOspf_t *rcIpConfOspf);

/*
 * C type definitions for RAPID-CITY::rcIpConfGlobal.
 */

#define RAPID_CITY_RCIPCONFGLOBALRIPHOLDDOWNTIME	0x1 

typedef struct {
    gint32   *rcIpConfGlobalRipHoldDownTime;
} rapid_city_rcIpConfGlobal_t;

extern rapid_city_rcIpConfGlobal_t *
rapid_city_new_rcIpConfGlobal(void);

extern void
rapid_city_get_rcIpConfGlobal(GSnmpSession *s, rapid_city_rcIpConfGlobal_t **rcIpConfGlobal, gint mask);

extern void
rapid_city_set_rcIpConfGlobal(GSnmpSession *s, rapid_city_rcIpConfGlobal_t *rcIpConfGlobal, gint mask);

extern void
rapid_city_free_rcIpConfGlobal(rapid_city_rcIpConfGlobal_t *rcIpConfGlobal);

/*
 * C type definitions for RAPID-CITY::rcIpConfOspfAreaEntry.
 */

#define RAPID_CITY_RCIPCONFOSPFAREAID	0x1 
#define RAPID_CITY_RCIPCONFOSPFAREAIMPORTSUMMARY	0x2 
#define RAPID_CITY_RCIPCONFOSPFAREAACTIVEIFCOUNT	0x4 

typedef struct {
    guchar   rcIpConfOspfAreaId[4];
    gint32   *rcIpConfOspfAreaImportSummary;
    gint32   *rcIpConfOspfAreaActiveIfCount;
} rapid_city_rcIpConfOspfAreaEntry_t;

extern void
rapid_city_get_rcIpConfOspfAreaTable(GSnmpSession *s, rapid_city_rcIpConfOspfAreaEntry_t ***rcIpConfOspfAreaEntry, gint mask);

extern void
rapid_city_free_rcIpConfOspfAreaTable(rapid_city_rcIpConfOspfAreaEntry_t **rcIpConfOspfAreaEntry);

extern rapid_city_rcIpConfOspfAreaEntry_t *
rapid_city_new_rcIpConfOspfAreaEntry(void);

extern void
rapid_city_get_rcIpConfOspfAreaEntry(GSnmpSession *s, rapid_city_rcIpConfOspfAreaEntry_t **rcIpConfOspfAreaEntry, guchar *rcIpConfOspfAreaId, gint mask);

extern void
rapid_city_set_rcIpConfOspfAreaEntry(GSnmpSession *s, rapid_city_rcIpConfOspfAreaEntry_t *rcIpConfOspfAreaEntry, gint mask);

extern void
rapid_city_free_rcIpConfOspfAreaEntry(rapid_city_rcIpConfOspfAreaEntry_t *rcIpConfOspfAreaEntry);

/*
 * C type definitions for RAPID-CITY::rcIpAddrEntry.
 */

#define RAPID_CITY_RCIPADENTIFINDEX	0x1 
#define RAPID_CITY_RCIPADENTADDR	0x2 
#define RAPID_CITY_RCIPADENTNETMASK	0x4 
#define RAPID_CITY_RCIPADENTBCASTADDRFORMAT	0x8 
#define RAPID_CITY_RCIPADENTREASMMAXSIZE	0x10 
#define RAPID_CITY_RCIPADENTROWSTATUS	0x20 

typedef struct {
    gint32   rcIpAdEntIfIndex;
    guchar   rcIpAdEntAddr[4];
    guchar   *rcIpAdEntNetMask;
    gint32   *rcIpAdEntBcastAddrFormat;
    gint32   *rcIpAdEntReasmMaxSize;
    gint32   *rcIpAdEntRowStatus;
} rapid_city_rcIpAddrEntry_t;

extern void
rapid_city_get_rcIpAddrTable(GSnmpSession *s, rapid_city_rcIpAddrEntry_t ***rcIpAddrEntry, gint mask);

extern void
rapid_city_free_rcIpAddrTable(rapid_city_rcIpAddrEntry_t **rcIpAddrEntry);

extern rapid_city_rcIpAddrEntry_t *
rapid_city_new_rcIpAddrEntry(void);

extern void
rapid_city_get_rcIpAddrEntry(GSnmpSession *s, rapid_city_rcIpAddrEntry_t **rcIpAddrEntry, gint32 rcIpAdEntIfIndex, guchar *rcIpAdEntAddr, gint mask);

extern void
rapid_city_set_rcIpAddrEntry(GSnmpSession *s, rapid_city_rcIpAddrEntry_t *rcIpAddrEntry, gint mask);

extern void
rapid_city_free_rcIpAddrEntry(rapid_city_rcIpAddrEntry_t *rcIpAddrEntry);

/*
 * C type definitions for RAPID-CITY::rcIpFlowEntry.
 */

#define RAPID_CITY_RCIPFLOWSRCIPADDRESS	0x1 
#define RAPID_CITY_RCIPFLOWSRCIPPORT	0x2 
#define RAPID_CITY_RCIPFLOWDSTIPADDRESS	0x4 
#define RAPID_CITY_RCIPFLOWDSTIPPORT	0x8 
#define RAPID_CITY_RCIPFLOWPROTOCOL	0x10 
#define RAPID_CITY_RCIPFLOWROWSTATUS	0x20 

typedef struct {
    guchar   rcIpFlowSrcIpAddress[4];
    gint32   rcIpFlowSrcIpPort;
    guchar   rcIpFlowDstIpAddress[4];
    gint32   rcIpFlowDstIpPort;
    gint32   rcIpFlowProtocol;
    gint32   *rcIpFlowRowStatus;
} rapid_city_rcIpFlowEntry_t;

extern void
rapid_city_get_rcIpFlowTable(GSnmpSession *s, rapid_city_rcIpFlowEntry_t ***rcIpFlowEntry, gint mask);

extern void
rapid_city_free_rcIpFlowTable(rapid_city_rcIpFlowEntry_t **rcIpFlowEntry);

extern rapid_city_rcIpFlowEntry_t *
rapid_city_new_rcIpFlowEntry(void);

extern void
rapid_city_get_rcIpFlowEntry(GSnmpSession *s, rapid_city_rcIpFlowEntry_t **rcIpFlowEntry, guchar *rcIpFlowSrcIpAddress, gint32 rcIpFlowSrcIpPort, guchar *rcIpFlowDstIpAddress, gint32 rcIpFlowDstIpPort, gint32 rcIpFlowProtocol, gint mask);

extern void
rapid_city_set_rcIpFlowEntry(GSnmpSession *s, rapid_city_rcIpFlowEntry_t *rcIpFlowEntry, gint mask);

extern void
rapid_city_free_rcIpFlowEntry(rapid_city_rcIpFlowEntry_t *rcIpFlowEntry);

/*
 * C type definitions for RAPID-CITY::rcIpRoutingRedistributeRipToOspf.
 */

#define RAPID_CITY_RCIPROUTINGREDISTRIBUTERIPTOOSPFENABLE	0x1 
#define RAPID_CITY_RCIPROUTINGREDISTRIBUTERIPTOOSPFEXPLICITMETRIC	0x2 
#define RAPID_CITY_RCIPROUTINGREDISTRIBUTERIPTOOSPFUSEEXPLICITMETRIC	0x4 
#define RAPID_CITY_RCIPROUTINGREDISTRIBUTERIPTOOSPFEXTERNALMETRICTYPE	0x8 

typedef struct {
    gint32   *rcIpRoutingRedistributeRipToOspfEnable;
    gint32   *rcIpRoutingRedistributeRipToOspfExplicitMetric;
    gint32   *rcIpRoutingRedistributeRipToOspfUseExplicitMetric;
    gint32   *rcIpRoutingRedistributeRipToOspfExternalMetricType;
} rapid_city_rcIpRoutingRedistributeRipToOspf_t;

extern rapid_city_rcIpRoutingRedistributeRipToOspf_t *
rapid_city_new_rcIpRoutingRedistributeRipToOspf(void);

extern void
rapid_city_get_rcIpRoutingRedistributeRipToOspf(GSnmpSession *s, rapid_city_rcIpRoutingRedistributeRipToOspf_t **rcIpRoutingRedistributeRipToOspf, gint mask);

extern void
rapid_city_set_rcIpRoutingRedistributeRipToOspf(GSnmpSession *s, rapid_city_rcIpRoutingRedistributeRipToOspf_t *rcIpRoutingRedistributeRipToOspf, gint mask);

extern void
rapid_city_free_rcIpRoutingRedistributeRipToOspf(rapid_city_rcIpRoutingRedistributeRipToOspf_t *rcIpRoutingRedistributeRipToOspf);

/*
 * C type definitions for RAPID-CITY::rcIpRoutingRedistributeOspfToRip.
 */

#define RAPID_CITY_RCIPROUTINGREDISTRIBUTEOSPFTORIPENABLE	0x1 
#define RAPID_CITY_RCIPROUTINGREDISTRIBUTEOSPFTORIPEXPLICITMETRIC	0x2 
#define RAPID_CITY_RCIPROUTINGREDISTRIBUTEOSPFTORIPUSEEXPLICITMETRIC	0x4 

typedef struct {
    gint32   *rcIpRoutingRedistributeOspfToRipEnable;
    gint32   *rcIpRoutingRedistributeOspfToRipExplicitMetric;
    gint32   *rcIpRoutingRedistributeOspfToRipUseExplicitMetric;
} rapid_city_rcIpRoutingRedistributeOspfToRip_t;

extern rapid_city_rcIpRoutingRedistributeOspfToRip_t *
rapid_city_new_rcIpRoutingRedistributeOspfToRip(void);

extern void
rapid_city_get_rcIpRoutingRedistributeOspfToRip(GSnmpSession *s, rapid_city_rcIpRoutingRedistributeOspfToRip_t **rcIpRoutingRedistributeOspfToRip, gint mask);

extern void
rapid_city_set_rcIpRoutingRedistributeOspfToRip(GSnmpSession *s, rapid_city_rcIpRoutingRedistributeOspfToRip_t *rcIpRoutingRedistributeOspfToRip, gint mask);

extern void
rapid_city_free_rcIpRoutingRedistributeOspfToRip(rapid_city_rcIpRoutingRedistributeOspfToRip_t *rcIpRoutingRedistributeOspfToRip);

/*
 * C type definitions for RAPID-CITY::rcIpRoutingRedistributeDirectToOspf.
 */

#define RAPID_CITY_RCIPROUTINGREDISTRIBUTEDIRECTTOOSPFENABLE	0x1 
#define RAPID_CITY_RCIPROUTINGREDISTRIBUTEDIRECTTOOSPFMETHOD	0x2 
#define RAPID_CITY_RCIPROUTINGREDISTRIBUTEDIRECTTOOSPFEXPLICITMETRIC	0x4 
#define RAPID_CITY_RCIPROUTINGREDISTRIBUTEDIRECTTOOSPFEXTERNALMETRICTYPE	0x8 

typedef struct {
    gint32   *rcIpRoutingRedistributeDirectToOspfEnable;
    gint32   *rcIpRoutingRedistributeDirectToOspfMethod;
    gint32   *rcIpRoutingRedistributeDirectToOspfExplicitMetric;
    gint32   *rcIpRoutingRedistributeDirectToOspfExternalMetricType;
} rapid_city_rcIpRoutingRedistributeDirectToOspf_t;

extern rapid_city_rcIpRoutingRedistributeDirectToOspf_t *
rapid_city_new_rcIpRoutingRedistributeDirectToOspf(void);

extern void
rapid_city_get_rcIpRoutingRedistributeDirectToOspf(GSnmpSession *s, rapid_city_rcIpRoutingRedistributeDirectToOspf_t **rcIpRoutingRedistributeDirectToOspf, gint mask);

extern void
rapid_city_set_rcIpRoutingRedistributeDirectToOspf(GSnmpSession *s, rapid_city_rcIpRoutingRedistributeDirectToOspf_t *rcIpRoutingRedistributeDirectToOspf, gint mask);

extern void
rapid_city_free_rcIpRoutingRedistributeDirectToOspf(rapid_city_rcIpRoutingRedistributeDirectToOspf_t *rcIpRoutingRedistributeDirectToOspf);

/*
 * C type definitions for RAPID-CITY::rcIpRoutingRedistributeStaticToOspf.
 */

#define RAPID_CITY_RCIPROUTINGREDISTRIBUTESTATICTOOSPFENABLE	0x1 
#define RAPID_CITY_RCIPROUTINGREDISTRIBUTESTATICTOOSPFEXPLICITMETRIC	0x2 
#define RAPID_CITY_RCIPROUTINGREDISTRIBUTESTATICTOOSPFUSEEXPLICITMETRIC	0x4 
#define RAPID_CITY_RCIPROUTINGREDISTRIBUTESTATICTOOSPFEXTERNALMETRICTYPE	0x8 
#define RAPID_CITY_RCIPROUTINGREDISTRIBUTESTATICTOOSPFADVERTDEFRTE	0x10 

typedef struct {
    gint32   *rcIpRoutingRedistributeStaticToOspfEnable;
    gint32   *rcIpRoutingRedistributeStaticToOspfExplicitMetric;
    gint32   *rcIpRoutingRedistributeStaticToOspfUseExplicitMetric;
    gint32   *rcIpRoutingRedistributeStaticToOspfExternalMetricType;
    gint32   *rcIpRoutingRedistributeStaticToOspfAdvertDefRte;
} rapid_city_rcIpRoutingRedistributeStaticToOspf_t;

extern rapid_city_rcIpRoutingRedistributeStaticToOspf_t *
rapid_city_new_rcIpRoutingRedistributeStaticToOspf(void);

extern void
rapid_city_get_rcIpRoutingRedistributeStaticToOspf(GSnmpSession *s, rapid_city_rcIpRoutingRedistributeStaticToOspf_t **rcIpRoutingRedistributeStaticToOspf, gint mask);

extern void
rapid_city_set_rcIpRoutingRedistributeStaticToOspf(GSnmpSession *s, rapid_city_rcIpRoutingRedistributeStaticToOspf_t *rcIpRoutingRedistributeStaticToOspf, gint mask);

extern void
rapid_city_free_rcIpRoutingRedistributeStaticToOspf(rapid_city_rcIpRoutingRedistributeStaticToOspf_t *rcIpRoutingRedistributeStaticToOspf);

/*
 * C type definitions for RAPID-CITY::rcIpRoutingRedistributeDirectToRip.
 */

#define RAPID_CITY_RCIPROUTINGREDISTRIBUTEDIRECTTORIPENABLE	0x1 

typedef struct {
    gint32   *rcIpRoutingRedistributeDirectToRipEnable;
} rapid_city_rcIpRoutingRedistributeDirectToRip_t;

extern rapid_city_rcIpRoutingRedistributeDirectToRip_t *
rapid_city_new_rcIpRoutingRedistributeDirectToRip(void);

extern void
rapid_city_get_rcIpRoutingRedistributeDirectToRip(GSnmpSession *s, rapid_city_rcIpRoutingRedistributeDirectToRip_t **rcIpRoutingRedistributeDirectToRip, gint mask);

extern void
rapid_city_set_rcIpRoutingRedistributeDirectToRip(GSnmpSession *s, rapid_city_rcIpRoutingRedistributeDirectToRip_t *rcIpRoutingRedistributeDirectToRip, gint mask);

extern void
rapid_city_free_rcIpRoutingRedistributeDirectToRip(rapid_city_rcIpRoutingRedistributeDirectToRip_t *rcIpRoutingRedistributeDirectToRip);

/*
 * C type definitions for RAPID-CITY::rcIpRoutingRedistributeStaticToRip.
 */

#define RAPID_CITY_RCIPROUTINGREDISTRIBUTESTATICTORIPENABLE	0x1 

typedef struct {
    gint32   *rcIpRoutingRedistributeStaticToRipEnable;
} rapid_city_rcIpRoutingRedistributeStaticToRip_t;

extern rapid_city_rcIpRoutingRedistributeStaticToRip_t *
rapid_city_new_rcIpRoutingRedistributeStaticToRip(void);

extern void
rapid_city_get_rcIpRoutingRedistributeStaticToRip(GSnmpSession *s, rapid_city_rcIpRoutingRedistributeStaticToRip_t **rcIpRoutingRedistributeStaticToRip, gint mask);

extern void
rapid_city_set_rcIpRoutingRedistributeStaticToRip(GSnmpSession *s, rapid_city_rcIpRoutingRedistributeStaticToRip_t *rcIpRoutingRedistributeStaticToRip, gint mask);

extern void
rapid_city_free_rcIpRoutingRedistributeStaticToRip(rapid_city_rcIpRoutingRedistributeStaticToRip_t *rcIpRoutingRedistributeStaticToRip);

/*
 * C type definitions for RAPID-CITY::rcIpConfIgmpEntry.
 */

#define RAPID_CITY_RCIPCONFIGMPIFINDEX	0x1 
#define RAPID_CITY_RCIPCONFIGMPQUERYINTERVAL	0x2 
#define RAPID_CITY_RCIPCONFIGMPVERSION	0x4 
#define RAPID_CITY_RCIPCONFIGMPQUERYMAXRESPONSETIME	0x8 
#define RAPID_CITY_RCIPCONFIGMPQUERIERPRESENTTIMEOUT	0x10 
#define RAPID_CITY_RCIPCONFIGMPLEAVEENABLED	0x20 
#define RAPID_CITY_RCIPCONFIGMPROWSTATUS	0x40 
#define RAPID_CITY_RCIPCONFIGMPROBUSTNESS	0x80 
#define RAPID_CITY_RCIPCONFIGMPLASTMEMBERQUERYINTERVAL	0x100 

typedef struct {
    gint32   rcIpConfIgmpIfIndex;
    gint32   *rcIpConfIgmpQueryInterval;
    gint32   *rcIpConfIgmpVersion;
    gint32   *rcIpConfIgmpQueryMaxResponseTime;
    gint32   *rcIpConfIgmpQuerierPresentTimeout;
    gint32   *rcIpConfIgmpLeaveEnabled;
    gint32   *rcIpConfIgmpRowStatus;
    gint32   *rcIpConfIgmpRobustness;
    gint32   *rcIpConfIgmpLastMemberQueryInterval;
} rapid_city_rcIpConfIgmpEntry_t;

extern void
rapid_city_get_rcIpConfIgmpTable(GSnmpSession *s, rapid_city_rcIpConfIgmpEntry_t ***rcIpConfIgmpEntry, gint mask);

extern void
rapid_city_free_rcIpConfIgmpTable(rapid_city_rcIpConfIgmpEntry_t **rcIpConfIgmpEntry);

extern rapid_city_rcIpConfIgmpEntry_t *
rapid_city_new_rcIpConfIgmpEntry(void);

extern void
rapid_city_get_rcIpConfIgmpEntry(GSnmpSession *s, rapid_city_rcIpConfIgmpEntry_t **rcIpConfIgmpEntry, gint32 rcIpConfIgmpIfIndex, gint mask);

extern void
rapid_city_set_rcIpConfIgmpEntry(GSnmpSession *s, rapid_city_rcIpConfIgmpEntry_t *rcIpConfIgmpEntry, gint mask);

extern void
rapid_city_free_rcIpConfIgmpEntry(rapid_city_rcIpConfIgmpEntry_t *rcIpConfIgmpEntry);

/*
 * C type definitions for RAPID-CITY::rcIgmpGroupEntry.
 */

#define RAPID_CITY_RCIGMPGROUPIPADDRESS	0x1 
#define RAPID_CITY_RCIGMPGROUPMEMBERS	0x2 
#define RAPID_CITY_RCIGMPGROUPINPORT	0x4 
#define RAPID_CITY_RCIGMPGROUPEXPIRATION	0x8 

typedef struct {
    guchar   rcIgmpGroupIpAddress[4];
    guchar   rcIgmpGroupMembers[4];
    gint32   *rcIgmpGroupInPort;
    gint32   *rcIgmpGroupExpiration;
} rapid_city_rcIgmpGroupEntry_t;

extern void
rapid_city_get_rcIgmpGroupTable(GSnmpSession *s, rapid_city_rcIgmpGroupEntry_t ***rcIgmpGroupEntry, gint mask);

extern void
rapid_city_free_rcIgmpGroupTable(rapid_city_rcIgmpGroupEntry_t **rcIgmpGroupEntry);

extern rapid_city_rcIgmpGroupEntry_t *
rapid_city_new_rcIgmpGroupEntry(void);

extern void
rapid_city_get_rcIgmpGroupEntry(GSnmpSession *s, rapid_city_rcIgmpGroupEntry_t **rcIgmpGroupEntry, guchar *rcIgmpGroupIpAddress, guchar *rcIgmpGroupMembers, gint mask);

extern void
rapid_city_free_rcIgmpGroupEntry(rapid_city_rcIgmpGroupEntry_t *rcIgmpGroupEntry);

/*
 * C type definitions for RAPID-CITY::rcIpRouteEntry.
 */

#define RAPID_CITY_RCIPROUTEDEST	0x1 
#define RAPID_CITY_RCIPROUTEMASK	0x2 
#define RAPID_CITY_RCIPROUTENEXTHOP	0x4 
#define RAPID_CITY_RCIPROUTEMETRIC	0x8 
#define RAPID_CITY_RCIPROUTEIFINDEX	0x10 
#define RAPID_CITY_RCIPROUTETYPE	0x20 
#define RAPID_CITY_RCIPROUTEPROTO	0x40 
#define RAPID_CITY_RCIPROUTEAGE	0x80 
#define RAPID_CITY_RCIPROUTEROWSTATUS	0x100 

typedef struct {
    guchar   rcIpRouteDest[4];
    guchar   rcIpRouteMask[4];
    guchar   *rcIpRouteNextHop;
    gint32   *rcIpRouteMetric;
    gint32   *rcIpRouteIfIndex;
    gint32   *rcIpRouteType;
    gint32   *rcIpRouteProto;
    gint32   *rcIpRouteAge;
    gint32   *rcIpRouteRowStatus;
} rapid_city_rcIpRouteEntry_t;

extern void
rapid_city_get_rcIpRouteTable(GSnmpSession *s, rapid_city_rcIpRouteEntry_t ***rcIpRouteEntry, gint mask);

extern void
rapid_city_free_rcIpRouteTable(rapid_city_rcIpRouteEntry_t **rcIpRouteEntry);

extern rapid_city_rcIpRouteEntry_t *
rapid_city_new_rcIpRouteEntry(void);

extern void
rapid_city_get_rcIpRouteEntry(GSnmpSession *s, rapid_city_rcIpRouteEntry_t **rcIpRouteEntry, guchar *rcIpRouteDest, guchar *rcIpRouteMask, gint mask);

extern void
rapid_city_set_rcIpRouteEntry(GSnmpSession *s, rapid_city_rcIpRouteEntry_t *rcIpRouteEntry, gint mask);

extern void
rapid_city_free_rcIpRouteEntry(rapid_city_rcIpRouteEntry_t *rcIpRouteEntry);

/*
 * C type definitions for RAPID-CITY::rcIpConfDhcpEntry.
 */

#define RAPID_CITY_RCIPCONFDHCPIFINDEX	0x1 
#define RAPID_CITY_RCIPCONFDHCPMAXHOP	0x2 
#define RAPID_CITY_RCIPCONFDHCPMINSEC	0x4 
#define RAPID_CITY_RCIPCONFDHCPMODE	0x8 
#define RAPID_CITY_RCIPCONFDHCPROWSTATUS	0x10 
#define RAPID_CITY_RCIPCONFDHCPNUMREQUESTS	0x20 
#define RAPID_CITY_RCIPCONFDHCPNUMREPLIES	0x40 
#define RAPID_CITY_RCIPCONFDHCPALWAYSBROADCAST	0x80 

typedef struct {
    gint32   rcIpConfDhcpIfIndex;
    gint32   *rcIpConfDhcpMaxHop;
    gint32   *rcIpConfDhcpMinSec;
    gint32   *rcIpConfDhcpMode;
    gint32   *rcIpConfDhcpRowStatus;
    guint32  *rcIpConfDhcpNumRequests;
    guint32  *rcIpConfDhcpNumReplies;
    gint32   *rcIpConfDhcpAlwaysBroadcast;
} rapid_city_rcIpConfDhcpEntry_t;

extern void
rapid_city_get_rcIpConfDhcpTable(GSnmpSession *s, rapid_city_rcIpConfDhcpEntry_t ***rcIpConfDhcpEntry, gint mask);

extern void
rapid_city_free_rcIpConfDhcpTable(rapid_city_rcIpConfDhcpEntry_t **rcIpConfDhcpEntry);

extern rapid_city_rcIpConfDhcpEntry_t *
rapid_city_new_rcIpConfDhcpEntry(void);

extern void
rapid_city_get_rcIpConfDhcpEntry(GSnmpSession *s, rapid_city_rcIpConfDhcpEntry_t **rcIpConfDhcpEntry, gint32 rcIpConfDhcpIfIndex, gint mask);

extern void
rapid_city_set_rcIpConfDhcpEntry(GSnmpSession *s, rapid_city_rcIpConfDhcpEntry_t *rcIpConfDhcpEntry, gint mask);

extern void
rapid_city_free_rcIpConfDhcpEntry(rapid_city_rcIpConfDhcpEntry_t *rcIpConfDhcpEntry);

/*
 * C type definitions for RAPID-CITY::rcIpDhcpForwardEntry.
 */

#define RAPID_CITY_RCIPDHCPFORWARDAGENTADDR	0x1 
#define RAPID_CITY_RCIPDHCPFORWARDSERVERADDR	0x2 
#define RAPID_CITY_RCIPDHCPFORWARDENABLE	0x4 
#define RAPID_CITY_RCIPDHCPFORWARDMODE	0x8 
#define RAPID_CITY_RCIPDHCPFORWARDROWSTATUS	0x10 

typedef struct {
    guchar   rcIpDhcpForwardAgentAddr[4];
    guchar   rcIpDhcpForwardServerAddr[4];
    gint32   *rcIpDhcpForwardEnable;
    gint32   *rcIpDhcpForwardMode;
    gint32   *rcIpDhcpForwardRowStatus;
} rapid_city_rcIpDhcpForwardEntry_t;

extern void
rapid_city_get_rcIpDhcpForwardTable(GSnmpSession *s, rapid_city_rcIpDhcpForwardEntry_t ***rcIpDhcpForwardEntry, gint mask);

extern void
rapid_city_free_rcIpDhcpForwardTable(rapid_city_rcIpDhcpForwardEntry_t **rcIpDhcpForwardEntry);

extern rapid_city_rcIpDhcpForwardEntry_t *
rapid_city_new_rcIpDhcpForwardEntry(void);

extern void
rapid_city_get_rcIpDhcpForwardEntry(GSnmpSession *s, rapid_city_rcIpDhcpForwardEntry_t **rcIpDhcpForwardEntry, guchar *rcIpDhcpForwardAgentAddr, guchar *rcIpDhcpForwardServerAddr, gint mask);

extern void
rapid_city_set_rcIpDhcpForwardEntry(GSnmpSession *s, rapid_city_rcIpDhcpForwardEntry_t *rcIpDhcpForwardEntry, gint mask);

extern void
rapid_city_free_rcIpDhcpForwardEntry(rapid_city_rcIpDhcpForwardEntry_t *rcIpDhcpForwardEntry);

/*
 * C type definitions for RAPID-CITY::rcIpFilter.
 */

#define RAPID_CITY_RCIPFILTERFILTERTABLESIZE	0x1 
#define RAPID_CITY_RCIPFILTERGLOBALLISTTABLESIZE	0x2 
#define RAPID_CITY_RCIPFILTERBASELISTTABLESIZE	0x4 
#define RAPID_CITY_RCIPFILTERPORTTABLESIZE	0x8 
#define RAPID_CITY_RCIPFILTERNEXTAVAILFILTERID	0x10 

typedef struct {
    gint32   *rcIpFilterFilterTableSize;
    gint32   *rcIpFilterGlobalListTableSize;
    gint32   *rcIpFilterBaseListTableSize;
    gint32   *rcIpFilterPortTableSize;
    gint32   *rcIpFilterNextAvailFilterId;
} rapid_city_rcIpFilter_t;

extern rapid_city_rcIpFilter_t *
rapid_city_new_rcIpFilter(void);

extern void
rapid_city_get_rcIpFilter(GSnmpSession *s, rapid_city_rcIpFilter_t **rcIpFilter, gint mask);

extern void
rapid_city_free_rcIpFilter(rapid_city_rcIpFilter_t *rcIpFilter);

/*
 * C type definitions for RAPID-CITY::rcIpFilterEntry.
 */

#define RAPID_CITY_RCIPFILTERTYPE	0x1 
#define RAPID_CITY_RCIPFILTERDSTADDR	0x2 
#define RAPID_CITY_RCIPFILTERDSTMASK	0x4 
#define RAPID_CITY_RCIPFILTERSRCADDR	0x8 
#define RAPID_CITY_RCIPFILTERSRCMASK	0x10 
#define RAPID_CITY_RCIPFILTERID	0x20 
#define RAPID_CITY_RCIPFILTERNAME	0x40 
#define RAPID_CITY_RCIPFILTERPROTOCOLTYPE	0x80 
#define RAPID_CITY_RCIPFILTERSRCPORT	0x100 
#define RAPID_CITY_RCIPFILTERSRCOPTION	0x200 
#define RAPID_CITY_RCIPFILTERDSTPORT	0x400 
#define RAPID_CITY_RCIPFILTERDSTOPTION	0x800 
#define RAPID_CITY_RCIPFILTERCOPYTOCPU	0x1000 
#define RAPID_CITY_RCIPFILTERMIRROR	0x2000 
#define RAPID_CITY_RCIPFILTERHIGHPRIORITY	0x4000 
#define RAPID_CITY_RCIPFILTERTCPCONNECT	0x8000 
#define RAPID_CITY_RCIPFILTERIEEEVLANPRIORITY	0x10000 
#define RAPID_CITY_RCIPFILTERUSEPKTLIMIT	0x20000 
#define RAPID_CITY_RCIPFILTERPKTLIMIT	0x40000 
#define RAPID_CITY_RCIPFILTERROWSTATUS	0x80000 
#define RAPID_CITY_RCIPFILTERMODE	0x100000 

typedef struct {
    gint32   rcIpFilterType;
    guchar   rcIpFilterDstAddr[4];
    guchar   rcIpFilterDstMask[4];
    guchar   rcIpFilterSrcAddr[4];
    guchar   rcIpFilterSrcMask[4];
    gint32   rcIpFilterId;
    guchar   *rcIpFilterName;
    gsize    _rcIpFilterNameLength;
    gint32   *rcIpFilterProtocolType;
    gint32   *rcIpFilterSrcPort;
    gint32   *rcIpFilterSrcOption;
    gint32   *rcIpFilterDstPort;
    gint32   *rcIpFilterDstOption;
    gint32   *rcIpFilterCopyToCpu;
    gint32   *rcIpFilterMirror;
    gint32   *rcIpFilterHighPriority;
    gint32   *rcIpFilterTcpConnect;
    gint32   *rcIpFilterIeeeVlanPriority;
    gint32   *rcIpFilterUsePktLimit;
    gint32   *rcIpFilterPktLimit;
    gint32   *rcIpFilterRowStatus;
    gint32   *rcIpFilterMode;
} rapid_city_rcIpFilterEntry_t;

extern void
rapid_city_get_rcIpFilterTable(GSnmpSession *s, rapid_city_rcIpFilterEntry_t ***rcIpFilterEntry, gint mask);

extern void
rapid_city_free_rcIpFilterTable(rapid_city_rcIpFilterEntry_t **rcIpFilterEntry);

extern rapid_city_rcIpFilterEntry_t *
rapid_city_new_rcIpFilterEntry(void);

extern void
rapid_city_get_rcIpFilterEntry(GSnmpSession *s, rapid_city_rcIpFilterEntry_t **rcIpFilterEntry, gint32 rcIpFilterType, guchar *rcIpFilterDstAddr, guchar *rcIpFilterDstMask, guchar *rcIpFilterSrcAddr, guchar *rcIpFilterSrcMask, gint32 rcIpFilterId, gint mask);

extern void
rapid_city_set_rcIpFilterEntry(GSnmpSession *s, rapid_city_rcIpFilterEntry_t *rcIpFilterEntry, gint mask);

extern void
rapid_city_free_rcIpFilterEntry(rapid_city_rcIpFilterEntry_t *rcIpFilterEntry);

/*
 * C type definitions for RAPID-CITY::rcIpFilterGlobalListEntry.
 */

#define RAPID_CITY_RCIPFILTERGLOBALLISTID	0x1 
#define RAPID_CITY_RCIPFILTERGLOBALLISTNAME	0x2 
#define RAPID_CITY_RCIPFILTERGLOBALLISTFILTERIDLISTSIZE	0x4 
#define RAPID_CITY_RCIPFILTERGLOBALLISTFILTERIDLIST	0x8 
#define RAPID_CITY_RCIPFILTERGLOBALLISTROWSTATUS	0x10 
#define RAPID_CITY_RCIPFILTERGLOBALLISTMEMBERPORTS	0x20 

typedef struct {
    gint32   rcIpFilterGlobalListId;
    guchar   *rcIpFilterGlobalListName;
    gsize    _rcIpFilterGlobalListNameLength;
    gint32   *rcIpFilterGlobalListFilterIdListSize;
    guchar   *rcIpFilterGlobalListFilterIdList;
    gint32   *rcIpFilterGlobalListRowStatus;
    guchar   *rcIpFilterGlobalListMemberPorts;
} rapid_city_rcIpFilterGlobalListEntry_t;

extern void
rapid_city_get_rcIpFilterGlobalListTable(GSnmpSession *s, rapid_city_rcIpFilterGlobalListEntry_t ***rcIpFilterGlobalListEntry, gint mask);

extern void
rapid_city_free_rcIpFilterGlobalListTable(rapid_city_rcIpFilterGlobalListEntry_t **rcIpFilterGlobalListEntry);

extern rapid_city_rcIpFilterGlobalListEntry_t *
rapid_city_new_rcIpFilterGlobalListEntry(void);

extern void
rapid_city_get_rcIpFilterGlobalListEntry(GSnmpSession *s, rapid_city_rcIpFilterGlobalListEntry_t **rcIpFilterGlobalListEntry, gint32 rcIpFilterGlobalListId, gint mask);

extern void
rapid_city_set_rcIpFilterGlobalListEntry(GSnmpSession *s, rapid_city_rcIpFilterGlobalListEntry_t *rcIpFilterGlobalListEntry, gint mask);

extern void
rapid_city_free_rcIpFilterGlobalListEntry(rapid_city_rcIpFilterGlobalListEntry_t *rcIpFilterGlobalListEntry);

/*
 * C type definitions for RAPID-CITY::rcIpFilterBaseListEntry.
 */

#define RAPID_CITY_RCIPFILTERBASELISTID	0x1 
#define RAPID_CITY_RCIPFILTERBASELISTNAME	0x2 
#define RAPID_CITY_RCIPFILTERBASELISTFILTERIDLISTSIZE	0x4 
#define RAPID_CITY_RCIPFILTERBASELISTFILTERIDLIST	0x8 
#define RAPID_CITY_RCIPFILTERBASELISTROWSTATUS	0x10 
#define RAPID_CITY_RCIPFILTERBASELISTMEMBERPORTS	0x20 

typedef struct {
    gint32   rcIpFilterBaseListId;
    guchar   *rcIpFilterBaseListName;
    gsize    _rcIpFilterBaseListNameLength;
    gint32   *rcIpFilterBaseListFilterIdListSize;
    guchar   *rcIpFilterBaseListFilterIdList;
    gint32   *rcIpFilterBaseListRowStatus;
    guchar   *rcIpFilterBaseListMemberPorts;
} rapid_city_rcIpFilterBaseListEntry_t;

extern void
rapid_city_get_rcIpFilterBaseListTable(GSnmpSession *s, rapid_city_rcIpFilterBaseListEntry_t ***rcIpFilterBaseListEntry, gint mask);

extern void
rapid_city_free_rcIpFilterBaseListTable(rapid_city_rcIpFilterBaseListEntry_t **rcIpFilterBaseListEntry);

extern rapid_city_rcIpFilterBaseListEntry_t *
rapid_city_new_rcIpFilterBaseListEntry(void);

extern void
rapid_city_get_rcIpFilterBaseListEntry(GSnmpSession *s, rapid_city_rcIpFilterBaseListEntry_t **rcIpFilterBaseListEntry, gint32 rcIpFilterBaseListId, gint mask);

extern void
rapid_city_set_rcIpFilterBaseListEntry(GSnmpSession *s, rapid_city_rcIpFilterBaseListEntry_t *rcIpFilterBaseListEntry, gint mask);

extern void
rapid_city_free_rcIpFilterBaseListEntry(rapid_city_rcIpFilterBaseListEntry_t *rcIpFilterBaseListEntry);

/*
 * C type definitions for RAPID-CITY::rcIpFilterPortEntry.
 */

#define RAPID_CITY_RCIPFILTERPORTIFINDEX	0x1 
#define RAPID_CITY_RCIPFILTERPORTFILTERLISTSIZE	0x2 
#define RAPID_CITY_RCIPFILTERPORTFILTERLIST	0x4 
#define RAPID_CITY_RCIPFILTERPORTMODE	0x8 
#define RAPID_CITY_RCIPFILTERPORTENABLE	0x10 
#define RAPID_CITY_RCIPFILTERPORTROWSTATUS	0x20 
#define RAPID_CITY_RCIPFILTERPORTDEFAULTACTION	0x40 
#define RAPID_CITY_RCIPFILTERPORTNUMGLOBALFILTERS	0x80 
#define RAPID_CITY_RCIPFILTERPORTNUMBASEFILTERS	0x100 

typedef struct {
    gint32   rcIpFilterPortIfIndex;
    gint32   *rcIpFilterPortFilterListSize;
    guchar   *rcIpFilterPortFilterList;
    gint32   *rcIpFilterPortMode;
    gint32   *rcIpFilterPortEnable;
    gint32   *rcIpFilterPortRowStatus;
    gint32   *rcIpFilterPortDefaultAction;
    gint32   *rcIpFilterPortNumGlobalFilters;
    gint32   *rcIpFilterPortNumBaseFilters;
} rapid_city_rcIpFilterPortEntry_t;

extern void
rapid_city_get_rcIpFilterPortTable(GSnmpSession *s, rapid_city_rcIpFilterPortEntry_t ***rcIpFilterPortEntry, gint mask);

extern void
rapid_city_free_rcIpFilterPortTable(rapid_city_rcIpFilterPortEntry_t **rcIpFilterPortEntry);

extern rapid_city_rcIpFilterPortEntry_t *
rapid_city_new_rcIpFilterPortEntry(void);

extern void
rapid_city_get_rcIpFilterPortEntry(GSnmpSession *s, rapid_city_rcIpFilterPortEntry_t **rcIpFilterPortEntry, gint32 rcIpFilterPortIfIndex, gint mask);

extern void
rapid_city_set_rcIpFilterPortEntry(GSnmpSession *s, rapid_city_rcIpFilterPortEntry_t *rcIpFilterPortEntry, gint mask);

extern void
rapid_city_free_rcIpFilterPortEntry(rapid_city_rcIpFilterPortEntry_t *rcIpFilterPortEntry);

/*
 * C type definitions for RAPID-CITY::rcIpPolicy.
 */

#define RAPID_CITY_RCIPPOLICYADDRTABLESIZE	0x1 
#define RAPID_CITY_RCIPPOLICYNETTABLESIZE	0x2 
#define RAPID_CITY_RCIPPOLICYADDRLISTTABLESIZE	0x4 
#define RAPID_CITY_RCIPPOLICYRIPANNOUNCETABLESIZE	0x8 
#define RAPID_CITY_RCIPPOLICYOSPFANNOUNCETABLESIZE	0x10 
#define RAPID_CITY_RCIPPOLICYRIPACCEPTTABLESIZE	0x20 
#define RAPID_CITY_RCIPPOLICYOSPFACCEPTTABLESIZE	0x40 
#define RAPID_CITY_RCIPPOLICYNETLISTTABLESIZE	0x80 

typedef struct {
    gint32   *rcIpPolicyAddrTableSize;
    gint32   *rcIpPolicyNetTableSize;
    gint32   *rcIpPolicyAddrListTableSize;
    gint32   *rcIpPolicyRipAnnounceTableSize;
    gint32   *rcIpPolicyOspfAnnounceTableSize;
    gint32   *rcIpPolicyRipAcceptTableSize;
    gint32   *rcIpPolicyOspfAcceptTableSize;
    gint32   *rcIpPolicyNetListTableSize;
} rapid_city_rcIpPolicy_t;

extern rapid_city_rcIpPolicy_t *
rapid_city_new_rcIpPolicy(void);

extern void
rapid_city_get_rcIpPolicy(GSnmpSession *s, rapid_city_rcIpPolicy_t **rcIpPolicy, gint mask);

extern void
rapid_city_free_rcIpPolicy(rapid_city_rcIpPolicy_t *rcIpPolicy);

/*
 * C type definitions for RAPID-CITY::rcIpPolicyAddrEntry.
 */

#define RAPID_CITY_RCIPPOLICYADDRIPADDR	0x1 
#define RAPID_CITY_RCIPPOLICYADDRID	0x2 
#define RAPID_CITY_RCIPPOLICYADDRADDRLISTIDLISTSIZE	0x4 
#define RAPID_CITY_RCIPPOLICYADDRADDRLISTIDLIST	0x8 
#define RAPID_CITY_RCIPPOLICYADDRROWSTATUS	0x10 

typedef struct {
    guchar   rcIpPolicyAddrIpAddr[4];
    gint32   *rcIpPolicyAddrId;
    gint32   *rcIpPolicyAddrAddrListIdListSize;
    guchar   *rcIpPolicyAddrAddrListIdList;
    gint32   *rcIpPolicyAddrRowStatus;
} rapid_city_rcIpPolicyAddrEntry_t;

extern void
rapid_city_get_rcIpPolicyAddrTable(GSnmpSession *s, rapid_city_rcIpPolicyAddrEntry_t ***rcIpPolicyAddrEntry, gint mask);

extern void
rapid_city_free_rcIpPolicyAddrTable(rapid_city_rcIpPolicyAddrEntry_t **rcIpPolicyAddrEntry);

extern rapid_city_rcIpPolicyAddrEntry_t *
rapid_city_new_rcIpPolicyAddrEntry(void);

extern void
rapid_city_get_rcIpPolicyAddrEntry(GSnmpSession *s, rapid_city_rcIpPolicyAddrEntry_t **rcIpPolicyAddrEntry, guchar *rcIpPolicyAddrIpAddr, gint mask);

extern void
rapid_city_set_rcIpPolicyAddrEntry(GSnmpSession *s, rapid_city_rcIpPolicyAddrEntry_t *rcIpPolicyAddrEntry, gint mask);

extern void
rapid_city_free_rcIpPolicyAddrEntry(rapid_city_rcIpPolicyAddrEntry_t *rcIpPolicyAddrEntry);

/*
 * C type definitions for RAPID-CITY::rcIpPolicyNetEntry.
 */

#define RAPID_CITY_RCIPPOLICYNETADDR	0x1 
#define RAPID_CITY_RCIPPOLICYNETMASK	0x2 
#define RAPID_CITY_RCIPPOLICYNETID	0x4 
#define RAPID_CITY_RCIPPOLICYNETNETLISTIDLISTSIZE	0x8 
#define RAPID_CITY_RCIPPOLICYNETNETLISTIDLIST	0x10 
#define RAPID_CITY_RCIPPOLICYNETROWSTATUS	0x20 

typedef struct {
    guchar   rcIpPolicyNetAddr[4];
    guchar   rcIpPolicyNetMask[4];
    gint32   *rcIpPolicyNetId;
    gint32   *rcIpPolicyNetNetListIdListSize;
    guchar   *rcIpPolicyNetNetListIdList;
    gint32   *rcIpPolicyNetRowStatus;
} rapid_city_rcIpPolicyNetEntry_t;

extern void
rapid_city_get_rcIpPolicyNetTable(GSnmpSession *s, rapid_city_rcIpPolicyNetEntry_t ***rcIpPolicyNetEntry, gint mask);

extern void
rapid_city_free_rcIpPolicyNetTable(rapid_city_rcIpPolicyNetEntry_t **rcIpPolicyNetEntry);

extern rapid_city_rcIpPolicyNetEntry_t *
rapid_city_new_rcIpPolicyNetEntry(void);

extern void
rapid_city_get_rcIpPolicyNetEntry(GSnmpSession *s, rapid_city_rcIpPolicyNetEntry_t **rcIpPolicyNetEntry, guchar *rcIpPolicyNetAddr, guchar *rcIpPolicyNetMask, gint mask);

extern void
rapid_city_set_rcIpPolicyNetEntry(GSnmpSession *s, rapid_city_rcIpPolicyNetEntry_t *rcIpPolicyNetEntry, gint mask);

extern void
rapid_city_free_rcIpPolicyNetEntry(rapid_city_rcIpPolicyNetEntry_t *rcIpPolicyNetEntry);

/*
 * C type definitions for RAPID-CITY::rcIpPolicyAddrListEntry.
 */

#define RAPID_CITY_RCIPPOLICYADDRLISTID	0x1 
#define RAPID_CITY_RCIPPOLICYADDRLISTNAME	0x2 
#define RAPID_CITY_RCIPPOLICYADDRLISTIDLISTSIZE	0x4 
#define RAPID_CITY_RCIPPOLICYADDRLISTIDLIST	0x8 
#define RAPID_CITY_RCIPPOLICYADDRLISTPOLICYIDLISTSIZE	0x10 
#define RAPID_CITY_RCIPPOLICYADDRLISTPOLICYIDLIST	0x20 
#define RAPID_CITY_RCIPPOLICYADDRLISTROWSTATUS	0x40 

typedef struct {
    gint32   rcIpPolicyAddrListId;
    guchar   *rcIpPolicyAddrListName;
    gsize    _rcIpPolicyAddrListNameLength;
    gint32   *rcIpPolicyAddrListIdListSize;
    guchar   *rcIpPolicyAddrListIdList;
    gint32   *rcIpPolicyAddrListPolicyIdListSize;
    guchar   *rcIpPolicyAddrListPolicyIdList;
    gint32   *rcIpPolicyAddrListRowStatus;
} rapid_city_rcIpPolicyAddrListEntry_t;

extern void
rapid_city_get_rcIpPolicyAddrListTable(GSnmpSession *s, rapid_city_rcIpPolicyAddrListEntry_t ***rcIpPolicyAddrListEntry, gint mask);

extern void
rapid_city_free_rcIpPolicyAddrListTable(rapid_city_rcIpPolicyAddrListEntry_t **rcIpPolicyAddrListEntry);

extern rapid_city_rcIpPolicyAddrListEntry_t *
rapid_city_new_rcIpPolicyAddrListEntry(void);

extern void
rapid_city_get_rcIpPolicyAddrListEntry(GSnmpSession *s, rapid_city_rcIpPolicyAddrListEntry_t **rcIpPolicyAddrListEntry, gint32 rcIpPolicyAddrListId, gint mask);

extern void
rapid_city_set_rcIpPolicyAddrListEntry(GSnmpSession *s, rapid_city_rcIpPolicyAddrListEntry_t *rcIpPolicyAddrListEntry, gint mask);

extern void
rapid_city_free_rcIpPolicyAddrListEntry(rapid_city_rcIpPolicyAddrListEntry_t *rcIpPolicyAddrListEntry);

/*
 * C type definitions for RAPID-CITY::rcIpPolicyRipAnnounceEntry.
 */

#define RAPID_CITY_RCIPPOLICYRIPANNOUNCEID	0x1 
#define RAPID_CITY_RCIPPOLICYRIPANNOUNCENAME	0x2 
#define RAPID_CITY_RCIPPOLICYRIPANNOUNCEENABLE	0x4 
#define RAPID_CITY_RCIPPOLICYRIPANNOUNCEEXACTNETLISTID	0x8 
#define RAPID_CITY_RCIPPOLICYRIPANNOUNCERANGENETLISTID	0x10 
#define RAPID_CITY_RCIPPOLICYRIPANNOUNCERIPGATEWAYLISTID	0x20 
#define RAPID_CITY_RCIPPOLICYRIPANNOUNCERIPINTERFACELISTID	0x40 
#define RAPID_CITY_RCIPPOLICYRIPANNOUNCEOSPFROUTERLISTID	0x80 
#define RAPID_CITY_RCIPPOLICYRIPANNOUNCEANNOUNCEINTERFACELISTID	0x100 
#define RAPID_CITY_RCIPPOLICYRIPANNOUNCEPRECEDENCE	0x200 
#define RAPID_CITY_RCIPPOLICYRIPANNOUNCEROUTESOURCE	0x400 
#define RAPID_CITY_RCIPPOLICYRIPANNOUNCEADVERTISENETLISTID	0x800 
#define RAPID_CITY_RCIPPOLICYRIPANNOUNCEACTION	0x1000 
#define RAPID_CITY_RCIPPOLICYRIPANNOUNCEOSPFROUTETYPE	0x2000 
#define RAPID_CITY_RCIPPOLICYRIPANNOUNCERIPMETRIC	0x4000 
#define RAPID_CITY_RCIPPOLICYRIPANNOUNCEROWSTATUS	0x8000 

typedef struct {
    gint32   rcIpPolicyRipAnnounceId;
    guchar   *rcIpPolicyRipAnnounceName;
    gsize    _rcIpPolicyRipAnnounceNameLength;
    gint32   *rcIpPolicyRipAnnounceEnable;
    gint32   *rcIpPolicyRipAnnounceExactNetListId;
    gint32   *rcIpPolicyRipAnnounceRangeNetListId;
    gint32   *rcIpPolicyRipAnnounceRipGatewayListId;
    gint32   *rcIpPolicyRipAnnounceRipInterfaceListId;
    gint32   *rcIpPolicyRipAnnounceOspfRouterListId;
    gint32   *rcIpPolicyRipAnnounceAnnounceInterfaceListId;
    gint32   *rcIpPolicyRipAnnouncePrecedence;
    gint32   *rcIpPolicyRipAnnounceRouteSource;
    gint32   *rcIpPolicyRipAnnounceAdvertiseNetListId;
    gint32   *rcIpPolicyRipAnnounceAction;
    gint32   *rcIpPolicyRipAnnounceOspfRouteType;
    gint32   *rcIpPolicyRipAnnounceRipMetric;
    gint32   *rcIpPolicyRipAnnounceRowStatus;
} rapid_city_rcIpPolicyRipAnnounceEntry_t;

extern void
rapid_city_get_rcIpPolicyRipAnnounceTable(GSnmpSession *s, rapid_city_rcIpPolicyRipAnnounceEntry_t ***rcIpPolicyRipAnnounceEntry, gint mask);

extern void
rapid_city_free_rcIpPolicyRipAnnounceTable(rapid_city_rcIpPolicyRipAnnounceEntry_t **rcIpPolicyRipAnnounceEntry);

extern rapid_city_rcIpPolicyRipAnnounceEntry_t *
rapid_city_new_rcIpPolicyRipAnnounceEntry(void);

extern void
rapid_city_get_rcIpPolicyRipAnnounceEntry(GSnmpSession *s, rapid_city_rcIpPolicyRipAnnounceEntry_t **rcIpPolicyRipAnnounceEntry, gint32 rcIpPolicyRipAnnounceId, gint mask);

extern void
rapid_city_set_rcIpPolicyRipAnnounceEntry(GSnmpSession *s, rapid_city_rcIpPolicyRipAnnounceEntry_t *rcIpPolicyRipAnnounceEntry, gint mask);

extern void
rapid_city_free_rcIpPolicyRipAnnounceEntry(rapid_city_rcIpPolicyRipAnnounceEntry_t *rcIpPolicyRipAnnounceEntry);

/*
 * C type definitions for RAPID-CITY::rcIpPolicyOspfAnnounceEntry.
 */

#define RAPID_CITY_RCIPPOLICYOSPFANNOUNCEID	0x1 
#define RAPID_CITY_RCIPPOLICYOSPFANNOUNCENAME	0x2 
#define RAPID_CITY_RCIPPOLICYOSPFANNOUNCEENABLE	0x4 
#define RAPID_CITY_RCIPPOLICYOSPFANNOUNCEEXACTNETLISTID	0x8 
#define RAPID_CITY_RCIPPOLICYOSPFANNOUNCERANGENETLISTID	0x10 
#define RAPID_CITY_RCIPPOLICYOSPFANNOUNCERIPGATEWAYLISTID	0x20 
#define RAPID_CITY_RCIPPOLICYOSPFANNOUNCERIPINTERFACELISTID	0x40 
#define RAPID_CITY_RCIPPOLICYOSPFANNOUNCEPRECEDENCE	0x80 
#define RAPID_CITY_RCIPPOLICYOSPFANNOUNCEROUTESOURCE	0x100 
#define RAPID_CITY_RCIPPOLICYOSPFANNOUNCEADVERTISENETLISTID	0x200 
#define RAPID_CITY_RCIPPOLICYOSPFANNOUNCEACTION	0x400 
#define RAPID_CITY_RCIPPOLICYOSPFANNOUNCEEXTMETRICTYPE	0x800 
#define RAPID_CITY_RCIPPOLICYOSPFANNOUNCEEXTMETRIC	0x1000 
#define RAPID_CITY_RCIPPOLICYOSPFANNOUNCEROWSTATUS	0x2000 

typedef struct {
    gint32   rcIpPolicyOspfAnnounceId;
    guchar   *rcIpPolicyOspfAnnounceName;
    gsize    _rcIpPolicyOspfAnnounceNameLength;
    gint32   *rcIpPolicyOspfAnnounceEnable;
    gint32   *rcIpPolicyOspfAnnounceExactNetListId;
    gint32   *rcIpPolicyOspfAnnounceRangeNetListId;
    gint32   *rcIpPolicyOspfAnnounceRipGatewayListId;
    gint32   *rcIpPolicyOspfAnnounceRipInterfaceListId;
    gint32   *rcIpPolicyOspfAnnouncePrecedence;
    gint32   *rcIpPolicyOspfAnnounceRouteSource;
    gint32   *rcIpPolicyOspfAnnounceAdvertiseNetListId;
    gint32   *rcIpPolicyOspfAnnounceAction;
    gint32   *rcIpPolicyOspfAnnounceExtMetricType;
    gint32   *rcIpPolicyOspfAnnounceExtMetric;
    gint32   *rcIpPolicyOspfAnnounceRowStatus;
} rapid_city_rcIpPolicyOspfAnnounceEntry_t;

extern void
rapid_city_get_rcIpPolicyOspfAnnounceTable(GSnmpSession *s, rapid_city_rcIpPolicyOspfAnnounceEntry_t ***rcIpPolicyOspfAnnounceEntry, gint mask);

extern void
rapid_city_free_rcIpPolicyOspfAnnounceTable(rapid_city_rcIpPolicyOspfAnnounceEntry_t **rcIpPolicyOspfAnnounceEntry);

extern rapid_city_rcIpPolicyOspfAnnounceEntry_t *
rapid_city_new_rcIpPolicyOspfAnnounceEntry(void);

extern void
rapid_city_get_rcIpPolicyOspfAnnounceEntry(GSnmpSession *s, rapid_city_rcIpPolicyOspfAnnounceEntry_t **rcIpPolicyOspfAnnounceEntry, gint32 rcIpPolicyOspfAnnounceId, gint mask);

extern void
rapid_city_set_rcIpPolicyOspfAnnounceEntry(GSnmpSession *s, rapid_city_rcIpPolicyOspfAnnounceEntry_t *rcIpPolicyOspfAnnounceEntry, gint mask);

extern void
rapid_city_free_rcIpPolicyOspfAnnounceEntry(rapid_city_rcIpPolicyOspfAnnounceEntry_t *rcIpPolicyOspfAnnounceEntry);

/*
 * C type definitions for RAPID-CITY::rcIpPolicyRipAcceptEntry.
 */

#define RAPID_CITY_RCIPPOLICYRIPACCEPTID	0x1 
#define RAPID_CITY_RCIPPOLICYRIPACCEPTNAME	0x2 
#define RAPID_CITY_RCIPPOLICYRIPACCEPTENABLE	0x4 
#define RAPID_CITY_RCIPPOLICYRIPACCEPTEXACTNETLISTID	0x8 
#define RAPID_CITY_RCIPPOLICYRIPACCEPTRANGENETLISTID	0x10 
#define RAPID_CITY_RCIPPOLICYRIPACCEPTRIPGATEWAYLISTID	0x20 
#define RAPID_CITY_RCIPPOLICYRIPACCEPTRIPINTERFACELISTID	0x40 
#define RAPID_CITY_RCIPPOLICYRIPACCEPTPRECEDENCE	0x80 
#define RAPID_CITY_RCIPPOLICYRIPACCEPTACTION	0x100 
#define RAPID_CITY_RCIPPOLICYRIPACCEPTINJECTNETLISTID	0x200 
#define RAPID_CITY_RCIPPOLICYRIPACCEPTAPPLYMASK	0x400 
#define RAPID_CITY_RCIPPOLICYRIPACCEPTROWSTATUS	0x800 

typedef struct {
    gint32   rcIpPolicyRipAcceptId;
    guchar   *rcIpPolicyRipAcceptName;
    gsize    _rcIpPolicyRipAcceptNameLength;
    gint32   *rcIpPolicyRipAcceptEnable;
    gint32   *rcIpPolicyRipAcceptExactNetListId;
    gint32   *rcIpPolicyRipAcceptRangeNetListId;
    gint32   *rcIpPolicyRipAcceptRipGatewayListId;
    gint32   *rcIpPolicyRipAcceptRipInterfaceListId;
    gint32   *rcIpPolicyRipAcceptPrecedence;
    gint32   *rcIpPolicyRipAcceptAction;
    gint32   *rcIpPolicyRipAcceptInjectNetListId;
    guchar   *rcIpPolicyRipAcceptApplyMask;
    gint32   *rcIpPolicyRipAcceptRowStatus;
} rapid_city_rcIpPolicyRipAcceptEntry_t;

extern void
rapid_city_get_rcIpPolicyRipAcceptTable(GSnmpSession *s, rapid_city_rcIpPolicyRipAcceptEntry_t ***rcIpPolicyRipAcceptEntry, gint mask);

extern void
rapid_city_free_rcIpPolicyRipAcceptTable(rapid_city_rcIpPolicyRipAcceptEntry_t **rcIpPolicyRipAcceptEntry);

extern rapid_city_rcIpPolicyRipAcceptEntry_t *
rapid_city_new_rcIpPolicyRipAcceptEntry(void);

extern void
rapid_city_get_rcIpPolicyRipAcceptEntry(GSnmpSession *s, rapid_city_rcIpPolicyRipAcceptEntry_t **rcIpPolicyRipAcceptEntry, gint32 rcIpPolicyRipAcceptId, gint mask);

extern void
rapid_city_set_rcIpPolicyRipAcceptEntry(GSnmpSession *s, rapid_city_rcIpPolicyRipAcceptEntry_t *rcIpPolicyRipAcceptEntry, gint mask);

extern void
rapid_city_free_rcIpPolicyRipAcceptEntry(rapid_city_rcIpPolicyRipAcceptEntry_t *rcIpPolicyRipAcceptEntry);

/*
 * C type definitions for RAPID-CITY::rcIpPolicyOspfAcceptEntry.
 */

#define RAPID_CITY_RCIPPOLICYOSPFACCEPTID	0x1 
#define RAPID_CITY_RCIPPOLICYOSPFACCEPTNAME	0x2 
#define RAPID_CITY_RCIPPOLICYOSPFACCEPTENABLE	0x4 
#define RAPID_CITY_RCIPPOLICYOSPFACCEPTEXACTNETLISTID	0x8 
#define RAPID_CITY_RCIPPOLICYOSPFACCEPTRANGENETLISTID	0x10 
#define RAPID_CITY_RCIPPOLICYOSPFACCEPTPRECEDENCE	0x20 
#define RAPID_CITY_RCIPPOLICYOSPFACCEPTACTION	0x40 
#define RAPID_CITY_RCIPPOLICYOSPFACCEPTINJECTNETLISTID	0x80 
#define RAPID_CITY_RCIPPOLICYOSPFACCEPTEXTTYPE	0x100 
#define RAPID_CITY_RCIPPOLICYOSPFACCEPTROWSTATUS	0x200 

typedef struct {
    gint32   rcIpPolicyOspfAcceptId;
    guchar   *rcIpPolicyOspfAcceptName;
    gsize    _rcIpPolicyOspfAcceptNameLength;
    gint32   *rcIpPolicyOspfAcceptEnable;
    gint32   *rcIpPolicyOspfAcceptExactNetListId;
    gint32   *rcIpPolicyOspfAcceptRangeNetListId;
    gint32   *rcIpPolicyOspfAcceptPrecedence;
    gint32   *rcIpPolicyOspfAcceptAction;
    gint32   *rcIpPolicyOspfAcceptInjectNetListId;
    gint32   *rcIpPolicyOspfAcceptExtType;
    gint32   *rcIpPolicyOspfAcceptRowStatus;
} rapid_city_rcIpPolicyOspfAcceptEntry_t;

extern void
rapid_city_get_rcIpPolicyOspfAcceptTable(GSnmpSession *s, rapid_city_rcIpPolicyOspfAcceptEntry_t ***rcIpPolicyOspfAcceptEntry, gint mask);

extern void
rapid_city_free_rcIpPolicyOspfAcceptTable(rapid_city_rcIpPolicyOspfAcceptEntry_t **rcIpPolicyOspfAcceptEntry);

extern rapid_city_rcIpPolicyOspfAcceptEntry_t *
rapid_city_new_rcIpPolicyOspfAcceptEntry(void);

extern void
rapid_city_get_rcIpPolicyOspfAcceptEntry(GSnmpSession *s, rapid_city_rcIpPolicyOspfAcceptEntry_t **rcIpPolicyOspfAcceptEntry, gint32 rcIpPolicyOspfAcceptId, gint mask);

extern void
rapid_city_set_rcIpPolicyOspfAcceptEntry(GSnmpSession *s, rapid_city_rcIpPolicyOspfAcceptEntry_t *rcIpPolicyOspfAcceptEntry, gint mask);

extern void
rapid_city_free_rcIpPolicyOspfAcceptEntry(rapid_city_rcIpPolicyOspfAcceptEntry_t *rcIpPolicyOspfAcceptEntry);

/*
 * C type definitions for RAPID-CITY::rcIpPolicyNetListEntry.
 */

#define RAPID_CITY_RCIPPOLICYNETLISTID	0x1 
#define RAPID_CITY_RCIPPOLICYNETLISTNAME	0x2 
#define RAPID_CITY_RCIPPOLICYNETLISTIDLISTSIZE	0x4 
#define RAPID_CITY_RCIPPOLICYNETLISTIDLIST	0x8 
#define RAPID_CITY_RCIPPOLICYNETLISTPOLICYIDLISTSIZE	0x10 
#define RAPID_CITY_RCIPPOLICYNETLISTPOLICYIDLIST	0x20 
#define RAPID_CITY_RCIPPOLICYNETLISTROWSTATUS	0x40 

typedef struct {
    gint32   rcIpPolicyNetListId;
    guchar   *rcIpPolicyNetListName;
    gsize    _rcIpPolicyNetListNameLength;
    gint32   *rcIpPolicyNetListIdListSize;
    guchar   *rcIpPolicyNetListIdList;
    gint32   *rcIpPolicyNetListPolicyIdListSize;
    guchar   *rcIpPolicyNetListPolicyIdList;
    gint32   *rcIpPolicyNetListRowStatus;
} rapid_city_rcIpPolicyNetListEntry_t;

extern void
rapid_city_get_rcIpPolicyNetListTable(GSnmpSession *s, rapid_city_rcIpPolicyNetListEntry_t ***rcIpPolicyNetListEntry, gint mask);

extern void
rapid_city_free_rcIpPolicyNetListTable(rapid_city_rcIpPolicyNetListEntry_t **rcIpPolicyNetListEntry);

extern rapid_city_rcIpPolicyNetListEntry_t *
rapid_city_new_rcIpPolicyNetListEntry(void);

extern void
rapid_city_get_rcIpPolicyNetListEntry(GSnmpSession *s, rapid_city_rcIpPolicyNetListEntry_t **rcIpPolicyNetListEntry, gint32 rcIpPolicyNetListId, gint mask);

extern void
rapid_city_set_rcIpPolicyNetListEntry(GSnmpSession *s, rapid_city_rcIpPolicyNetListEntry_t *rcIpPolicyNetListEntry, gint mask);

extern void
rapid_city_free_rcIpPolicyNetListEntry(rapid_city_rcIpPolicyNetListEntry_t *rcIpPolicyNetListEntry);

/*
 * C type definitions for RAPID-CITY::rcIpDvmrp.
 */

#define RAPID_CITY_RCIPDVMRPENABLE	0x1 

typedef struct {
    gint32   *rcIpDvmrpEnable;
} rapid_city_rcIpDvmrp_t;

extern rapid_city_rcIpDvmrp_t *
rapid_city_new_rcIpDvmrp(void);

extern void
rapid_city_get_rcIpDvmrp(GSnmpSession *s, rapid_city_rcIpDvmrp_t **rcIpDvmrp, gint mask);

extern void
rapid_city_set_rcIpDvmrp(GSnmpSession *s, rapid_city_rcIpDvmrp_t *rcIpDvmrp, gint mask);

extern void
rapid_city_free_rcIpDvmrp(rapid_city_rcIpDvmrp_t *rcIpDvmrp);

/*
 * C type definitions for RAPID-CITY::rcIpConfDvmrpTableEntry.
 */

#define RAPID_CITY_RCIPCONFDVMRPTABLEIFINDEX	0x1 
#define RAPID_CITY_RCIPCONFDVMRPTABLEENABLE	0x2 
#define RAPID_CITY_RCIPCONFDVMRPTABLEMETRIC	0x4 

typedef struct {
    gint32   rcIpConfDvmrpTableIfIndex;
    gint32   *rcIpConfDvmrpTableEnable;
    gint32   *rcIpConfDvmrpTableMetric;
} rapid_city_rcIpConfDvmrpTableEntry_t;

extern void
rapid_city_get_rcIpConfDvmrpTable(GSnmpSession *s, rapid_city_rcIpConfDvmrpTableEntry_t ***rcIpConfDvmrpTableEntry, gint mask);

extern void
rapid_city_free_rcIpConfDvmrpTable(rapid_city_rcIpConfDvmrpTableEntry_t **rcIpConfDvmrpTableEntry);

extern rapid_city_rcIpConfDvmrpTableEntry_t *
rapid_city_new_rcIpConfDvmrpTableEntry(void);

extern void
rapid_city_get_rcIpConfDvmrpTableEntry(GSnmpSession *s, rapid_city_rcIpConfDvmrpTableEntry_t **rcIpConfDvmrpTableEntry, gint32 rcIpConfDvmrpTableIfIndex, gint mask);

extern void
rapid_city_set_rcIpConfDvmrpTableEntry(GSnmpSession *s, rapid_city_rcIpConfDvmrpTableEntry_t *rcIpConfDvmrpTableEntry, gint mask);

extern void
rapid_city_free_rcIpConfDvmrpTableEntry(rapid_city_rcIpConfDvmrpTableEntry_t *rcIpConfDvmrpTableEntry);

/*
 * C type definitions for RAPID-CITY::rcIpUdp.
 */

#define RAPID_CITY_RCIPUDPPROTOCOLTABLESIZE	0x1 
#define RAPID_CITY_RCIPUDPPORTFWDTABLESIZE	0x2 
#define RAPID_CITY_RCIPUDPPORTFWDLISTTABLESIZE	0x4 
#define RAPID_CITY_RCIPUDPCONFBROADCASTINTFTABLESIZE	0x8 

typedef struct {
    gint32   *rcIpUdpProtocolTableSize;
    gint32   *rcIpUdpPortFwdTableSize;
    gint32   *rcIpUdpPortFwdListTableSize;
    gint32   *rcIpUdpConfBroadcastIntfTableSize;
} rapid_city_rcIpUdp_t;

extern rapid_city_rcIpUdp_t *
rapid_city_new_rcIpUdp(void);

extern void
rapid_city_get_rcIpUdp(GSnmpSession *s, rapid_city_rcIpUdp_t **rcIpUdp, gint mask);

extern void
rapid_city_free_rcIpUdp(rapid_city_rcIpUdp_t *rcIpUdp);

/*
 * C type definitions for RAPID-CITY::rcIpUdpProtocolEntry.
 */

#define RAPID_CITY_RCIPUDPPROTOCOLPORTNUMBER	0x1 
#define RAPID_CITY_RCIPUDPPROTOCOLNAME	0x2 
#define RAPID_CITY_RCIPUDPPROTOCOLROWSTATUS	0x4 

typedef struct {
    gint32   rcIpUdpProtocolPortNumber;
    guchar   *rcIpUdpProtocolName;
    gsize    _rcIpUdpProtocolNameLength;
    gint32   *rcIpUdpProtocolRowStatus;
} rapid_city_rcIpUdpProtocolEntry_t;

extern void
rapid_city_get_rcIpUdpProtocolTable(GSnmpSession *s, rapid_city_rcIpUdpProtocolEntry_t ***rcIpUdpProtocolEntry, gint mask);

extern void
rapid_city_free_rcIpUdpProtocolTable(rapid_city_rcIpUdpProtocolEntry_t **rcIpUdpProtocolEntry);

extern rapid_city_rcIpUdpProtocolEntry_t *
rapid_city_new_rcIpUdpProtocolEntry(void);

extern void
rapid_city_get_rcIpUdpProtocolEntry(GSnmpSession *s, rapid_city_rcIpUdpProtocolEntry_t **rcIpUdpProtocolEntry, gint32 rcIpUdpProtocolPortNumber, gint mask);

extern void
rapid_city_set_rcIpUdpProtocolEntry(GSnmpSession *s, rapid_city_rcIpUdpProtocolEntry_t *rcIpUdpProtocolEntry, gint mask);

extern void
rapid_city_free_rcIpUdpProtocolEntry(rapid_city_rcIpUdpProtocolEntry_t *rcIpUdpProtocolEntry);

/*
 * C type definitions for RAPID-CITY::rcIpUdpPortFwdEntry.
 */

#define RAPID_CITY_RCIPUDPPORTFWDDESTPORT	0x1 
#define RAPID_CITY_RCIPUDPPORTFWDDESTADDR	0x2 
#define RAPID_CITY_RCIPUDPPORTFWDID	0x4 
#define RAPID_CITY_RCIPUDPPORTFWDFWDLISTIDLISTSIZE	0x8 
#define RAPID_CITY_RCIPUDPPORTFWDFWDLISTIDLIST	0x10 
#define RAPID_CITY_RCIPUDPPORTFWDNUMFWDPACKETS	0x20 
#define RAPID_CITY_RCIPUDPPORTFWDNUMDROPPACKETSTTLEXPIRED	0x40 
#define RAPID_CITY_RCIPUDPPORTFWDNUMDROPPACKETSDESTUNREACH	0x80 
#define RAPID_CITY_RCIPUDPPORTFWDROWSTATUS	0x100 

typedef struct {
    gint32   rcIpUdpPortFwdDestPort;
    guchar   rcIpUdpPortFwdDestAddr[4];
    gint32   *rcIpUdpPortFwdId;
    gint32   *rcIpUdpPortFwdFwdListIdListSize;
    guchar   *rcIpUdpPortFwdFwdListIdList;
    guint32  *rcIpUdpPortFwdNumFwdPackets;
    guint32  *rcIpUdpPortFwdNumDropPacketsTtlExpired;
    guint32  *rcIpUdpPortFwdNumDropPacketsDestUnreach;
    gint32   *rcIpUdpPortFwdRowStatus;
} rapid_city_rcIpUdpPortFwdEntry_t;

extern void
rapid_city_get_rcIpUdpPortFwdTable(GSnmpSession *s, rapid_city_rcIpUdpPortFwdEntry_t ***rcIpUdpPortFwdEntry, gint mask);

extern void
rapid_city_free_rcIpUdpPortFwdTable(rapid_city_rcIpUdpPortFwdEntry_t **rcIpUdpPortFwdEntry);

extern rapid_city_rcIpUdpPortFwdEntry_t *
rapid_city_new_rcIpUdpPortFwdEntry(void);

extern void
rapid_city_get_rcIpUdpPortFwdEntry(GSnmpSession *s, rapid_city_rcIpUdpPortFwdEntry_t **rcIpUdpPortFwdEntry, gint32 rcIpUdpPortFwdDestPort, guchar *rcIpUdpPortFwdDestAddr, gint mask);

extern void
rapid_city_set_rcIpUdpPortFwdEntry(GSnmpSession *s, rapid_city_rcIpUdpPortFwdEntry_t *rcIpUdpPortFwdEntry, gint mask);

extern void
rapid_city_free_rcIpUdpPortFwdEntry(rapid_city_rcIpUdpPortFwdEntry_t *rcIpUdpPortFwdEntry);

/*
 * C type definitions for RAPID-CITY::rcIpUdpPortFwdListEntry.
 */

#define RAPID_CITY_RCIPUDPPORTFWDLISTID	0x1 
#define RAPID_CITY_RCIPUDPPORTFWDLISTNAME	0x2 
#define RAPID_CITY_RCIPUDPPORTFWDLISTFWDIDLISTSIZE	0x4 
#define RAPID_CITY_RCIPUDPPORTFWDLISTFWDIDLIST	0x8 
#define RAPID_CITY_RCIPUDPPORTFWDLISTROWSTATUS	0x10 

typedef struct {
    gint32   rcIpUdpPortFwdListId;
    guchar   *rcIpUdpPortFwdListName;
    gsize    _rcIpUdpPortFwdListNameLength;
    gint32   *rcIpUdpPortFwdListFwdIdListSize;
    guchar   *rcIpUdpPortFwdListFwdIdList;
    gint32   *rcIpUdpPortFwdListRowStatus;
} rapid_city_rcIpUdpPortFwdListEntry_t;

extern void
rapid_city_get_rcIpUdpPortFwdListTable(GSnmpSession *s, rapid_city_rcIpUdpPortFwdListEntry_t ***rcIpUdpPortFwdListEntry, gint mask);

extern void
rapid_city_free_rcIpUdpPortFwdListTable(rapid_city_rcIpUdpPortFwdListEntry_t **rcIpUdpPortFwdListEntry);

extern rapid_city_rcIpUdpPortFwdListEntry_t *
rapid_city_new_rcIpUdpPortFwdListEntry(void);

extern void
rapid_city_get_rcIpUdpPortFwdListEntry(GSnmpSession *s, rapid_city_rcIpUdpPortFwdListEntry_t **rcIpUdpPortFwdListEntry, gint32 rcIpUdpPortFwdListId, gint mask);

extern void
rapid_city_set_rcIpUdpPortFwdListEntry(GSnmpSession *s, rapid_city_rcIpUdpPortFwdListEntry_t *rcIpUdpPortFwdListEntry, gint mask);

extern void
rapid_city_free_rcIpUdpPortFwdListEntry(rapid_city_rcIpUdpPortFwdListEntry_t *rcIpUdpPortFwdListEntry);

/*
 * C type definitions for RAPID-CITY::rcIpUdpConfBroadcastIntfEntry.
 */

#define RAPID_CITY_RCIPUDPCONFBROADCASTINTFLOCALIFADDR	0x1 
#define RAPID_CITY_RCIPUDPCONFBROADCASTINTFUDPPORTFWDLISTID	0x2 
#define RAPID_CITY_RCIPUDPCONFBROADCASTINTFMAXTTL	0x4 
#define RAPID_CITY_RCIPUDPCONFBROADCASTINTFNUMRXPKTS	0x8 
#define RAPID_CITY_RCIPUDPCONFBROADCASTINTFNUMFWDPKTS	0x10 
#define RAPID_CITY_RCIPUDPCONFBROADCASTINTFNUMDROPPKTSMAXTTLEXPIRED	0x20 
#define RAPID_CITY_RCIPUDPCONFBROADCASTINTFNUMDROPPKTSDESTUNREACH	0x40 
#define RAPID_CITY_RCIPUDPCONFBROADCASTINTFNUMDROPPKTSUNKNOWNPORT	0x80 
#define RAPID_CITY_RCIPUDPCONFBROADCASTINTFROWSTATUS	0x100 

typedef struct {
    guchar   rcIpUdpConfBroadcastIntfLocalIfAddr[4];
    gint32   *rcIpUdpConfBroadcastIntfUdpPortFwdListId;
    gint32   *rcIpUdpConfBroadcastIntfMaxTtl;
    guint32  *rcIpUdpConfBroadcastIntfNumRxPkts;
    guint32  *rcIpUdpConfBroadcastIntfNumFwdPkts;
    guint32  *rcIpUdpConfBroadcastIntfNumDropPktsMaxTtlExpired;
    guint32  *rcIpUdpConfBroadcastIntfNumDropPktsDestUnreach;
    guint32  *rcIpUdpConfBroadcastIntfNumDropPktsUnknownPort;
    gint32   *rcIpUdpConfBroadcastIntfRowStatus;
} rapid_city_rcIpUdpConfBroadcastIntfEntry_t;

extern void
rapid_city_get_rcIpUdpConfBroadcastIntfTable(GSnmpSession *s, rapid_city_rcIpUdpConfBroadcastIntfEntry_t ***rcIpUdpConfBroadcastIntfEntry, gint mask);

extern void
rapid_city_free_rcIpUdpConfBroadcastIntfTable(rapid_city_rcIpUdpConfBroadcastIntfEntry_t **rcIpUdpConfBroadcastIntfEntry);

extern rapid_city_rcIpUdpConfBroadcastIntfEntry_t *
rapid_city_new_rcIpUdpConfBroadcastIntfEntry(void);

extern void
rapid_city_get_rcIpUdpConfBroadcastIntfEntry(GSnmpSession *s, rapid_city_rcIpUdpConfBroadcastIntfEntry_t **rcIpUdpConfBroadcastIntfEntry, guchar *rcIpUdpConfBroadcastIntfLocalIfAddr, gint mask);

extern void
rapid_city_set_rcIpUdpConfBroadcastIntfEntry(GSnmpSession *s, rapid_city_rcIpUdpConfBroadcastIntfEntry_t *rcIpUdpConfBroadcastIntfEntry, gint mask);

extern void
rapid_city_free_rcIpUdpConfBroadcastIntfEntry(rapid_city_rcIpUdpConfBroadcastIntfEntry_t *rcIpUdpConfBroadcastIntfEntry);

/*
 * C type definitions for RAPID-CITY::rcArp.
 */

#define RAPID_CITY_RCARPEXTLIFETIME	0x1 

typedef struct {
    gint32   *rcArpExtLifeTime;
} rapid_city_rcArp_t;

extern rapid_city_rcArp_t *
rapid_city_new_rcArp(void);

extern void
rapid_city_get_rcArp(GSnmpSession *s, rapid_city_rcArp_t **rcArp, gint mask);

extern void
rapid_city_set_rcArp(GSnmpSession *s, rapid_city_rcArp_t *rcArp, gint mask);

extern void
rapid_city_free_rcArp(rapid_city_rcArp_t *rcArp);

/*
 * C type definitions for RAPID-CITY::rcArpExtEntry.
 */

#define RAPID_CITY_RCARPEXTENTIFINDEX	0x1 
#define RAPID_CITY_RCARPEXTENTDOPROXY	0x2 
#define RAPID_CITY_RCARPEXTENTDORESP	0x4 

typedef struct {
    gint32   rcArpExtEntIfIndex;
    gint32   *rcArpExtEntDoProxy;
    gint32   *rcArpExtEntDoResp;
} rapid_city_rcArpExtEntry_t;

extern void
rapid_city_get_rcArpExtTable(GSnmpSession *s, rapid_city_rcArpExtEntry_t ***rcArpExtEntry, gint mask);

extern void
rapid_city_free_rcArpExtTable(rapid_city_rcArpExtEntry_t **rcArpExtEntry);

extern rapid_city_rcArpExtEntry_t *
rapid_city_new_rcArpExtEntry(void);

extern void
rapid_city_get_rcArpExtEntry(GSnmpSession *s, rapid_city_rcArpExtEntry_t **rcArpExtEntry, gint32 rcArpExtEntIfIndex, gint mask);

extern void
rapid_city_set_rcArpExtEntry(GSnmpSession *s, rapid_city_rcArpExtEntry_t *rcArpExtEntry, gint mask);

extern void
rapid_city_free_rcArpExtEntry(rapid_city_rcArpExtEntry_t *rcArpExtEntry);

/*
 * C type definitions for RAPID-CITY::rcRip.
 */

#define RAPID_CITY_RCRIPEXTOPERATION	0x1 
#define RAPID_CITY_RCRIPEXTUPDATETIME	0x2 

typedef struct {
    gint32   *rcRipExtOperation;
    gint32   *rcRipExtUpdateTime;
} rapid_city_rcRip_t;

extern rapid_city_rcRip_t *
rapid_city_new_rcRip(void);

extern void
rapid_city_get_rcRip(GSnmpSession *s, rapid_city_rcRip_t **rcRip, gint mask);

extern void
rapid_city_set_rcRip(GSnmpSession *s, rapid_city_rcRip_t *rcRip, gint mask);

extern void
rapid_city_free_rcRip(rapid_city_rcRip_t *rcRip);

/*
 * C type definitions for RAPID-CITY::rcRipExtEntry.
 */

#define RAPID_CITY_RCRIPEXTENTIFINDEX	0x1 
#define RAPID_CITY_RCRIPEXTENTTALK	0x2 
#define RAPID_CITY_RCRIPEXTENTLISTEN	0x4 
#define RAPID_CITY_RCRIPEXTENTPOISON	0x8 

typedef struct {
    gint32   rcRipExtEntIfIndex;
    gint32   *rcRipExtEntTalk;
    gint32   *rcRipExtEntListen;
    gint32   *rcRipExtEntPoison;
} rapid_city_rcRipExtEntry_t;

extern void
rapid_city_get_rcRipExtTable(GSnmpSession *s, rapid_city_rcRipExtEntry_t ***rcRipExtEntry, gint mask);

extern void
rapid_city_free_rcRipExtTable(rapid_city_rcRipExtEntry_t **rcRipExtEntry);

extern rapid_city_rcRipExtEntry_t *
rapid_city_new_rcRipExtEntry(void);

extern void
rapid_city_get_rcRipExtEntry(GSnmpSession *s, rapid_city_rcRipExtEntry_t **rcRipExtEntry, gint32 rcRipExtEntIfIndex, gint mask);

extern void
rapid_city_set_rcRipExtEntry(GSnmpSession *s, rapid_city_rcRipExtEntry_t *rcRipExtEntry, gint mask);

extern void
rapid_city_free_rcRipExtEntry(rapid_city_rcRipExtEntry_t *rcRipExtEntry);

/*
 * C type definitions for RAPID-CITY::rcTestEntry.
 */

#define RAPID_CITY_RCTESTEXTIFINDEX	0x1 
#define RAPID_CITY_RCTESTEXTPASSCOUNT	0x2 
#define RAPID_CITY_RCTESTEXTFAILCOUNT	0x4 

typedef struct {
    gint32   rcTestExtIfIndex;
    gint32   *rcTestExtPassCount;
    gint32   *rcTestExtFailCount;
} rapid_city_rcTestEntry_t;

extern void
rapid_city_get_rcTestExtTable(GSnmpSession *s, rapid_city_rcTestEntry_t ***rcTestEntry, gint mask);

extern void
rapid_city_free_rcTestExtTable(rapid_city_rcTestEntry_t **rcTestEntry);

extern rapid_city_rcTestEntry_t *
rapid_city_new_rcTestEntry(void);

extern void
rapid_city_get_rcTestEntry(GSnmpSession *s, rapid_city_rcTestEntry_t **rcTestEntry, gint32 rcTestExtIfIndex, gint mask);

extern void
rapid_city_free_rcTestEntry(rapid_city_rcTestEntry_t *rcTestEntry);

/*
 * C type definitions for RAPID-CITY::rcStatEntry.
 */

#define RAPID_CITY_RCSTATPORTINDEX	0x1 
#define RAPID_CITY_RCSTATFRAMETOOSHORTS	0x2 
#define RAPID_CITY_RCSTATBRIDGEINUNICASTFRAMES	0x4 
#define RAPID_CITY_RCSTATBRIDGEINMULTICASTFRAMES	0x8 
#define RAPID_CITY_RCSTATBRIDGEINBROADCASTFRAMES	0x10 
#define RAPID_CITY_RCSTATBRIDGEINDISCARDS	0x20 
#define RAPID_CITY_RCSTATBRIDGEOUTUNICASTFRAMES	0x40 
#define RAPID_CITY_RCSTATBRIDGEOUTMULTICASTFRAMES	0x80 
#define RAPID_CITY_RCSTATBRIDGEOUTBROADCASTFRAMES	0x100 
#define RAPID_CITY_RCSTATROUTEINUNICASTFRAMES	0x200 
#define RAPID_CITY_RCSTATROUTEINMULTICASTFRAMES	0x400 
#define RAPID_CITY_RCSTATROUTEINDISCARDS	0x800 
#define RAPID_CITY_RCSTATROUTEOUTUNICASTFRAMES	0x1000 
#define RAPID_CITY_RCSTATROUTEOUTMULTICASTFRAMES	0x2000 
#define RAPID_CITY_RCSTATSTGFORWARDTRANSITIONS	0x4000 
#define RAPID_CITY_RCSTATSTGINCONFIGBPDUS	0x8000 
#define RAPID_CITY_RCSTATSTGINTCNBPDUS	0x10000 
#define RAPID_CITY_RCSTATSTGINBADBPDUS	0x20000 
#define RAPID_CITY_RCSTATSTGOUTCONFIGBPDUS	0x40000 
#define RAPID_CITY_RCSTATSTGOUTTCNBPDUS	0x80000 

typedef struct {
    gint32   rcStatPortIndex;
    guint32  *rcStatFrameTooShorts;
    guint32  *rcStatBridgeInUnicastFrames;
    guint32  *rcStatBridgeInMulticastFrames;
    guint32  *rcStatBridgeInBroadcastFrames;
    guint32  *rcStatBridgeInDiscards;
    guint32  *rcStatBridgeOutUnicastFrames;
    guint32  *rcStatBridgeOutMulticastFrames;
    guint32  *rcStatBridgeOutBroadcastFrames;
    guint32  *rcStatRouteInUnicastFrames;
    guint32  *rcStatRouteInMulticastFrames;
    guint32  *rcStatRouteInDiscards;
    guint32  *rcStatRouteOutUnicastFrames;
    guint32  *rcStatRouteOutMulticastFrames;
    guint32  *rcStatStgForwardTransitions;
    guint32  *rcStatStgInConfigBpdus;
    guint32  *rcStatStgInTcnBpdus;
    guint32  *rcStatStgInBadBpdus;
    guint32  *rcStatStgOutConfigBpdus;
    guint32  *rcStatStgOutTcnBpdus;
} rapid_city_rcStatEntry_t;

extern void
rapid_city_get_rcStatTable(GSnmpSession *s, rapid_city_rcStatEntry_t ***rcStatEntry, gint mask);

extern void
rapid_city_free_rcStatTable(rapid_city_rcStatEntry_t **rcStatEntry);

extern rapid_city_rcStatEntry_t *
rapid_city_new_rcStatEntry(void);

extern void
rapid_city_get_rcStatEntry(GSnmpSession *s, rapid_city_rcStatEntry_t **rcStatEntry, gint32 rcStatPortIndex, gint mask);

extern void
rapid_city_free_rcStatEntry(rapid_city_rcStatEntry_t *rcStatEntry);

/*
 * C type definitions for RAPID-CITY::rcStatGigEntry.
 */

#define RAPID_CITY_RCSTATGIGPORTINDEX	0x1 
#define RAPID_CITY_RCSTATGIGLINKFAILURES	0x2 
#define RAPID_CITY_RCSTATGIGPACKETERRORS	0x4 
#define RAPID_CITY_RCSTATGIGCARRIERERRORS	0x8 
#define RAPID_CITY_RCSTATGIGLINKINACTIVEERRORS	0x10 
#define RAPID_CITY_RCSTATGIGINFLOWCTRLPKTS	0x20 
#define RAPID_CITY_RCSTATGIGOUTFLOWCTRLPKTS	0x40 

typedef struct {
    gint32   rcStatGigPortIndex;
    guint32  *rcStatGigLinkFailures;
    guint32  *rcStatGigPacketErrors;
    guint32  *rcStatGigCarrierErrors;
    guint32  *rcStatGigLinkInactiveErrors;
    guint32  *rcStatGigInFlowCtrlPkts;
    guint32  *rcStatGigOutFlowCtrlPkts;
} rapid_city_rcStatGigEntry_t;

extern void
rapid_city_get_rcStatGigTable(GSnmpSession *s, rapid_city_rcStatGigEntry_t ***rcStatGigEntry, gint mask);

extern void
rapid_city_free_rcStatGigTable(rapid_city_rcStatGigEntry_t **rcStatGigEntry);

extern rapid_city_rcStatGigEntry_t *
rapid_city_new_rcStatGigEntry(void);

extern void
rapid_city_get_rcStatGigEntry(GSnmpSession *s, rapid_city_rcStatGigEntry_t **rcStatGigEntry, gint32 rcStatGigPortIndex, gint mask);

extern void
rapid_city_free_rcStatGigEntry(rapid_city_rcStatGigEntry_t *rcStatGigEntry);

/*
 * C type definitions for RAPID-CITY::rcStatOspf.
 */

#define RAPID_CITY_RCSTATOSPFBUFFERSALLOCATED	0x1 
#define RAPID_CITY_RCSTATOSPFBUFFERSFREED	0x2 
#define RAPID_CITY_RCSTATOSPFBUFFERALLOCFAILURES	0x4 
#define RAPID_CITY_RCSTATOSPFBUFFERFREEFAILURES	0x8 
#define RAPID_CITY_RCSTATOSPFTXPACKETS	0x10 
#define RAPID_CITY_RCSTATOSPFRXPACKETS	0x20 
#define RAPID_CITY_RCSTATOSPFTXDROPPACKETS	0x40 
#define RAPID_CITY_RCSTATOSPFRXDROPPACKETS	0x80 
#define RAPID_CITY_RCSTATOSPFRXBADPACKETS	0x100 
#define RAPID_CITY_RCSTATOSPFSPFRUNS	0x200 
#define RAPID_CITY_RCSTATOSPFLASTSPFRUN	0x400 
#define RAPID_CITY_RCSTATOSPFLSDBTBLSIZE	0x800 

typedef struct {
    guint32  *rcStatOspfBuffersAllocated;
    guint32  *rcStatOspfBuffersFreed;
    guint32  *rcStatOspfBufferAllocFailures;
    guint32  *rcStatOspfBufferFreeFailures;
    guint32  *rcStatOspfTxPackets;
    guint32  *rcStatOspfRxPackets;
    guint32  *rcStatOspfTxDropPackets;
    guint32  *rcStatOspfRxDropPackets;
    guint32  *rcStatOspfRxBadPackets;
    guint32  *rcStatOspfSpfRuns;
    guint32  *rcStatOspfLastSpfRun;
    guint32  *rcStatOspfLsdbTblSize;
} rapid_city_rcStatOspf_t;

extern rapid_city_rcStatOspf_t *
rapid_city_new_rcStatOspf(void);

extern void
rapid_city_get_rcStatOspf(GSnmpSession *s, rapid_city_rcStatOspf_t **rcStatOspf, gint mask);

extern void
rapid_city_free_rcStatOspf(rapid_city_rcStatOspf_t *rcStatOspf);

/*
 * C type definitions for RAPID-CITY::rcStatIgmp.
 */

#define RAPID_CITY_RCSTATIGMPINMSGS	0x1 
#define RAPID_CITY_RCSTATIGMPINERRORS	0x2 
#define RAPID_CITY_RCSTATIGMPINQUERIES	0x4 
#define RAPID_CITY_RCSTATIGMPINREPORTS	0x8 
#define RAPID_CITY_RCSTATIGMPINLEAVES	0x10 
#define RAPID_CITY_RCSTATIGMPINVALID	0x20 
#define RAPID_CITY_RCSTATIGMPOUTMSGS	0x40 

typedef struct {
    guint32  *rcStatIgmpInMsgs;
    guint32  *rcStatIgmpInErrors;
    guint32  *rcStatIgmpInQueries;
    guint32  *rcStatIgmpInReports;
    guint32  *rcStatIgmpInLeaves;
    guint32  *rcStatIgmpInvalid;
    guint32  *rcStatIgmpOutMsgs;
} rapid_city_rcStatIgmp_t;

extern rapid_city_rcStatIgmp_t *
rapid_city_new_rcStatIgmp(void);

extern void
rapid_city_get_rcStatIgmp(GSnmpSession *s, rapid_city_rcStatIgmp_t **rcStatIgmp, gint mask);

extern void
rapid_city_free_rcStatIgmp(rapid_city_rcStatIgmp_t *rcStatIgmp);

/*
 * C type definitions for RAPID-CITY::rcStatOspfIfEntry.
 */

#define RAPID_CITY_RCSTATOSPFIFINDEX	0x1 
#define RAPID_CITY_RCSTATOSPFIFRXHELLOS	0x2 
#define RAPID_CITY_RCSTATOSPFIFRXDBDESCRS	0x4 
#define RAPID_CITY_RCSTATOSPFIFRXLSUPDATES	0x8 
#define RAPID_CITY_RCSTATOSPFIFRXLSREQS	0x10 
#define RAPID_CITY_RCSTATOSPFIFRXLSACKS	0x20 
#define RAPID_CITY_RCSTATOSPFIFTXHELLOS	0x40 
#define RAPID_CITY_RCSTATOSPFIFTXDBDESCRS	0x80 
#define RAPID_CITY_RCSTATOSPFIFTXLSUPDATES	0x100 
#define RAPID_CITY_RCSTATOSPFIFTXLSREQS	0x200 
#define RAPID_CITY_RCSTATOSPFIFTXLSACKS	0x400 
#define RAPID_CITY_RCSTATOSPFIFVERSIONMISMATCHES	0x800 
#define RAPID_CITY_RCSTATOSPFIFAREAMISMATCHES	0x1000 
#define RAPID_CITY_RCSTATOSPFIFAUTHTYPEMISMATCHES	0x2000 
#define RAPID_CITY_RCSTATOSPFIFAUTHFAILURES	0x4000 
#define RAPID_CITY_RCSTATOSPFIFNETMASKMISMATCHES	0x8000 
#define RAPID_CITY_RCSTATOSPFIFHELLOINTERVALMISMATCHES	0x10000 
#define RAPID_CITY_RCSTATOSPFIFDEADINTERVALMISMATCHES	0x20000 
#define RAPID_CITY_RCSTATOSPFIFOPTIONMISMATCHES	0x40000 

typedef struct {
    gint32   rcStatOspfIfIndex;
    guint32  *rcStatOspfIfRxHellos;
    guint32  *rcStatOspfIfRxDBDescrs;
    guint32  *rcStatOspfIfRxLSUpdates;
    guint32  *rcStatOspfIfRxLSReqs;
    guint32  *rcStatOspfIfRxLSAcks;
    guint32  *rcStatOspfIfTxHellos;
    guint32  *rcStatOspfIfTxDBDescrs;
    guint32  *rcStatOspfIfTxLSUpdates;
    guint32  *rcStatOspfIfTxLSReqs;
    guint32  *rcStatOspfIfTxLSAcks;
    guint32  *rcStatOspfIfVersionMismatches;
    guint32  *rcStatOspfIfAreaMismatches;
    guint32  *rcStatOspfIfAuthTypeMismatches;
    guint32  *rcStatOspfIfAuthFailures;
    guint32  *rcStatOspfIfNetMaskMismatches;
    guint32  *rcStatOspfIfHelloIntervalMismatches;
    guint32  *rcStatOspfIfDeadIntervalMismatches;
    guint32  *rcStatOspfIfOptionMismatches;
} rapid_city_rcStatOspfIfEntry_t;

extern void
rapid_city_get_rcStatOspfIfTable(GSnmpSession *s, rapid_city_rcStatOspfIfEntry_t ***rcStatOspfIfEntry, gint mask);

extern void
rapid_city_free_rcStatOspfIfTable(rapid_city_rcStatOspfIfEntry_t **rcStatOspfIfEntry);

extern rapid_city_rcStatOspfIfEntry_t *
rapid_city_new_rcStatOspfIfEntry(void);

extern void
rapid_city_get_rcStatOspfIfEntry(GSnmpSession *s, rapid_city_rcStatOspfIfEntry_t **rcStatOspfIfEntry, gint32 rcStatOspfIfIndex, gint mask);

extern void
rapid_city_free_rcStatOspfIfEntry(rapid_city_rcStatOspfIfEntry_t *rcStatOspfIfEntry);

/*
 * C type definitions for RAPID-CITY::rcStatMltIfExtnEntry.
 */

#define RAPID_CITY_RCSTATMLTIFEXTNMLTID	0x1 
#define RAPID_CITY_RCSTATMLTIFEXTNIFINMULTICASTPKTS	0x2 
#define RAPID_CITY_RCSTATMLTIFEXTNIFINBROADCASTPKTS	0x4 
#define RAPID_CITY_RCSTATMLTIFEXTNIFOUTMULTICASTPKTS	0x8 
#define RAPID_CITY_RCSTATMLTIFEXTNIFOUTBROADCASTPKTS	0x10 
#define RAPID_CITY_RCSTATMLTIFEXTNIFHCINOCTETS	0x20 
#define RAPID_CITY_RCSTATMLTIFEXTNIFHCINUCASTPKTS	0x40 
#define RAPID_CITY_RCSTATMLTIFEXTNIFHCINMULTICASTPKT	0x80 
#define RAPID_CITY_RCSTATMLTIFEXTNIFHCINBROADCASTPKT	0x100 
#define RAPID_CITY_RCSTATMLTIFEXTNIFHCOUTOCTETS	0x200 
#define RAPID_CITY_RCSTATMLTIFEXTNIFHCOUTUCASTPKTS	0x400 
#define RAPID_CITY_RCSTATMLTIFEXTNIFHCOUTMULTICAST	0x800 
#define RAPID_CITY_RCSTATMLTIFEXTNIFHCOUTBROADCAST	0x1000 

typedef struct {
    gint32   rcStatMltIfExtnMltId;
    guint32  *rcStatMltIfExtnIfInMulticastPkts;
    guint32  *rcStatMltIfExtnIfInBroadcastPkts;
    guint32  *rcStatMltIfExtnIfOutMulticastPkts;
    guint32  *rcStatMltIfExtnIfOutBroadcastPkts;
    guint64  *rcStatMltIfExtnIfHCInOctets; 
    guint64  *rcStatMltIfExtnIfHCInUcastPkts; 
    guint64  *rcStatMltIfExtnIfHCInMulticastPkt; 
    guint64  *rcStatMltIfExtnIfHCInBroadcastPkt; 
    guint64  *rcStatMltIfExtnIfHCOutOctets; 
    guint64  *rcStatMltIfExtnIfHCOutUcastPkts; 
    guint64  *rcStatMltIfExtnIfHCOutMulticast; 
    guint64  *rcStatMltIfExtnIfHCOutBroadcast; 
} rapid_city_rcStatMltIfExtnEntry_t;

extern void
rapid_city_get_rcStatMltIfExtnTable(GSnmpSession *s, rapid_city_rcStatMltIfExtnEntry_t ***rcStatMltIfExtnEntry, gint mask);

extern void
rapid_city_free_rcStatMltIfExtnTable(rapid_city_rcStatMltIfExtnEntry_t **rcStatMltIfExtnEntry);

extern rapid_city_rcStatMltIfExtnEntry_t *
rapid_city_new_rcStatMltIfExtnEntry(void);

extern void
rapid_city_get_rcStatMltIfExtnEntry(GSnmpSession *s, rapid_city_rcStatMltIfExtnEntry_t **rcStatMltIfExtnEntry, gint32 rcStatMltIfExtnMltId, gint mask);

extern void
rapid_city_free_rcStatMltIfExtnEntry(rapid_city_rcStatMltIfExtnEntry_t *rcStatMltIfExtnEntry);

/*
 * C type definitions for RAPID-CITY::rcStatMltEtherEntry.
 */

#define RAPID_CITY_RCSTATMLTETHERMLTID	0x1 
#define RAPID_CITY_RCSTATMLTETHERALIGNMENTERRORS	0x2 
#define RAPID_CITY_RCSTATMLTETHERFCSERRORS	0x4 
#define RAPID_CITY_RCSTATMLTETHERSINGLECOLLFRAMES	0x8 
#define RAPID_CITY_RCSTATMLTETHERMULTIPLECOLLFRAMES	0x10 
#define RAPID_CITY_RCSTATMLTETHERSQETESTERROR	0x20 
#define RAPID_CITY_RCSTATMLTETHERDEFERREDTRANSMISS	0x40 
#define RAPID_CITY_RCSTATMLTETHERLATECOLLISIONS	0x80 
#define RAPID_CITY_RCSTATMLTETHEREXCESSIVECOLLIS	0x100 
#define RAPID_CITY_RCSTATMLTETHERIMACTRANSMITERROR	0x200 
#define RAPID_CITY_RCSTATMLTETHERCARRIERSENSEERROR	0x400 
#define RAPID_CITY_RCSTATMLTETHERFRAMETOOLONG	0x800 
#define RAPID_CITY_RCSTATMLTETHERIMACRECEIVEERROR	0x1000 

typedef struct {
    gint32   rcStatMltEtherMltId;
    guint32  *rcStatMltEtherAlignmentErrors;
    guint32  *rcStatMltEtherFCSErrors;
    guint32  *rcStatMltEtherSingleCollFrames;
    guint32  *rcStatMltEtherMultipleCollFrames;
    guint32  *rcStatMltEtherSQETestError;
    guint32  *rcStatMltEtherDeferredTransmiss;
    guint32  *rcStatMltEtherLateCollisions;
    guint32  *rcStatMltEtherExcessiveCollis;
    guint32  *rcStatMltEtherIMacTransmitError;
    guint32  *rcStatMltEtherCarrierSenseError;
    guint32  *rcStatMltEtherFrameTooLong;
    guint32  *rcStatMltEtherIMacReceiveError;
} rapid_city_rcStatMltEtherEntry_t;

extern void
rapid_city_get_rcStatMltEtherTable(GSnmpSession *s, rapid_city_rcStatMltEtherEntry_t ***rcStatMltEtherEntry, gint mask);

extern void
rapid_city_free_rcStatMltEtherTable(rapid_city_rcStatMltEtherEntry_t **rcStatMltEtherEntry);

extern rapid_city_rcStatMltEtherEntry_t *
rapid_city_new_rcStatMltEtherEntry(void);

extern void
rapid_city_get_rcStatMltEtherEntry(GSnmpSession *s, rapid_city_rcStatMltEtherEntry_t **rcStatMltEtherEntry, gint32 rcStatMltEtherMltId, gint mask);

extern void
rapid_city_free_rcStatMltEtherEntry(rapid_city_rcStatMltEtherEntry_t *rcStatMltEtherEntry);

/*
 * C type definitions for RAPID-CITY::rcStatMltIpEntry.
 */

#define RAPID_CITY_RCSTATMLTIPMLTID	0x1 
#define RAPID_CITY_RCSTATMLTIPINRECEIVES	0x2 
#define RAPID_CITY_RCSTATMLTIPINHDRERRORS	0x4 
#define RAPID_CITY_RCSTATMLTIPINADDRERRORS	0x8 
#define RAPID_CITY_RCSTATMLTIPFORWDATAGRAMS	0x10 
#define RAPID_CITY_RCSTATMLTIPINUNKNOWNPROTOS	0x20 
#define RAPID_CITY_RCSTATMLTIPINDISCARDS	0x40 
#define RAPID_CITY_RCSTATMLTIPINDELIVERS	0x80 
#define RAPID_CITY_RCSTATMLTIPOUTREQUEST	0x100 
#define RAPID_CITY_RCSTATMLTIPOUTDISCARDS	0x200 
#define RAPID_CITY_RCSTATMLTIPOUTNOROUTES	0x400 
#define RAPID_CITY_RCSTATMLTIPREASMREQDS	0x800 
#define RAPID_CITY_RCSTATMLTIPREASMOKS	0x1000 
#define RAPID_CITY_RCSTATMLTIPREASMFAILS	0x2000 
#define RAPID_CITY_RCSTATMLTIPFRAGOKS	0x4000 
#define RAPID_CITY_RCSTATMLTIPFRAGFAILS	0x8000 
#define RAPID_CITY_RCSTATMLTIPFRAGCREATES	0x10000 
#define RAPID_CITY_RCSTATMLTIPROUTINGDISCARDS	0x20000 

typedef struct {
    gint32   rcStatMltIpMltId;
    guint32  *rcStatMltIpInReceives;
    guint32  *rcStatMltIpInHdrErrors;
    guint32  *rcStatMltIpInAddrErrors;
    guint32  *rcStatMltIpForwDatagrams;
    guint32  *rcStatMltIpInUnknownProtos;
    guint32  *rcStatMltIpInDiscards;
    guint32  *rcStatMltIpInDelivers;
    guint32  *rcStatMltIpOutRequest;
    guint32  *rcStatMltIpOutDiscards;
    guint32  *rcStatMltIpOutNoRoutes;
    guint32  *rcStatMltIpReasmReqds;
    guint32  *rcStatMltIpReasmOKs;
    guint32  *rcStatMltIpReasmFails;
    guint32  *rcStatMltIpFragOKs;
    guint32  *rcStatMltIpFragFails;
    guint32  *rcStatMltIpFragCreates;
    guint32  *rcStatMltIpRoutingDiscards;
} rapid_city_rcStatMltIpEntry_t;

extern void
rapid_city_get_rcStatMltIpTable(GSnmpSession *s, rapid_city_rcStatMltIpEntry_t ***rcStatMltIpEntry, gint mask);

extern void
rapid_city_free_rcStatMltIpTable(rapid_city_rcStatMltIpEntry_t **rcStatMltIpEntry);

extern rapid_city_rcStatMltIpEntry_t *
rapid_city_new_rcStatMltIpEntry(void);

extern void
rapid_city_get_rcStatMltIpEntry(GSnmpSession *s, rapid_city_rcStatMltIpEntry_t **rcStatMltIpEntry, gint32 rcStatMltIpMltId, gint mask);

extern void
rapid_city_free_rcStatMltIpEntry(rapid_city_rcStatMltIpEntry_t *rcStatMltIpEntry);

/*
 * C type definitions for RAPID-CITY::rcStg.
 */

#define RAPID_CITY_RCSTGMAXSTGS	0x1 
#define RAPID_CITY_RCSTGNUMSTGS	0x2 
#define RAPID_CITY_RCSTGUNASSIGNEDPORTS	0x4 
#define RAPID_CITY_RCSTGNOTALLOWEDPORTS	0x8 

typedef struct {
    gint32   *rcStgMaxStgs;
    gint32   *rcStgNumStgs;
    guchar   *rcStgUnassignedPorts;
    guchar   *rcStgNotAllowedPorts;
} rapid_city_rcStg_t;

extern rapid_city_rcStg_t *
rapid_city_new_rcStg(void);

extern void
rapid_city_get_rcStg(GSnmpSession *s, rapid_city_rcStg_t **rcStg, gint mask);

extern void
rapid_city_set_rcStg(GSnmpSession *s, rapid_city_rcStg_t *rcStg, gint mask);

extern void
rapid_city_free_rcStg(rapid_city_rcStg_t *rcStg);

/*
 * C type definitions for RAPID-CITY::rcStgEntry.
 */

#define RAPID_CITY_RCSTGID	0x1 
#define RAPID_CITY_RCSTGTAGGEDBPDUADDRESS	0x2 
#define RAPID_CITY_RCSTGTAGGEDBPDUVLANID	0x4 
#define RAPID_CITY_RCSTGBRIDGEADDRESS	0x8 
#define RAPID_CITY_RCSTGNUMPORTS	0x10 
#define RAPID_CITY_RCSTGPROTOCOLSPECIFICATION	0x20 
#define RAPID_CITY_RCSTGPRIORITY	0x40 
#define RAPID_CITY_RCSTGTIMESINCETOPOLOGYCHANGE	0x80 
#define RAPID_CITY_RCSTGTOPCHANGES	0x100 
#define RAPID_CITY_RCSTGDESIGNATEDROOT	0x200 
#define RAPID_CITY_RCSTGROOTCOST	0x400 
#define RAPID_CITY_RCSTGROOTPORT	0x800 
#define RAPID_CITY_RCSTGMAXAGE	0x1000 
#define RAPID_CITY_RCSTGHELLOTIME	0x2000 
#define RAPID_CITY_RCSTGHOLDTIME	0x4000 
#define RAPID_CITY_RCSTGFORWARDDELAY	0x8000 
#define RAPID_CITY_RCSTGBRIDGEMAXAGE	0x10000 
#define RAPID_CITY_RCSTGBRIDGEHELLOTIME	0x20000 
#define RAPID_CITY_RCSTGBRIDGEFORWARDDELAY	0x40000 
#define RAPID_CITY_RCSTGENABLESTP	0x80000 
#define RAPID_CITY_RCSTGSTPTRAPENABLE	0x100000 
#define RAPID_CITY_RCSTGPORTMEMBERS	0x200000 
#define RAPID_CITY_RCSTGROWSTATUS	0x400000 

typedef struct {
    gint32   rcStgId;
    guchar   *rcStgTaggedBpduAddress;
    gint32   *rcStgTaggedBpduVlanId;
    guchar   *rcStgBridgeAddress;
    gint32   *rcStgNumPorts;
    gint32   *rcStgProtocolSpecification;
    gint32   *rcStgPriority;
    guint32  *rcStgTimeSinceTopologyChange;
    guint32  *rcStgTopChanges;
    guchar   *rcStgDesignatedRoot;
    gint32   *rcStgRootCost;
    gint32   *rcStgRootPort;
    gint32   *rcStgMaxAge;
    gint32   *rcStgHelloTime;
    gint32   *rcStgHoldTime;
    gint32   *rcStgForwardDelay;
    gint32   *rcStgBridgeMaxAge;
    gint32   *rcStgBridgeHelloTime;
    gint32   *rcStgBridgeForwardDelay;
    gint32   *rcStgEnableStp;
    gint32   *rcStgStpTrapEnable;
    guchar   *rcStgPortMembers;
    gint32   *rcStgRowStatus;
} rapid_city_rcStgEntry_t;

extern void
rapid_city_get_rcStgTable(GSnmpSession *s, rapid_city_rcStgEntry_t ***rcStgEntry, gint mask);

extern void
rapid_city_free_rcStgTable(rapid_city_rcStgEntry_t **rcStgEntry);

extern rapid_city_rcStgEntry_t *
rapid_city_new_rcStgEntry(void);

extern void
rapid_city_get_rcStgEntry(GSnmpSession *s, rapid_city_rcStgEntry_t **rcStgEntry, gint32 rcStgId, gint mask);

extern void
rapid_city_set_rcStgEntry(GSnmpSession *s, rapid_city_rcStgEntry_t *rcStgEntry, gint mask);

extern void
rapid_city_free_rcStgEntry(rapid_city_rcStgEntry_t *rcStgEntry);

/*
 * C type definitions for RAPID-CITY::rcStgPortEntry.
 */

#define RAPID_CITY_RCSTGPORT	0x1 
#define RAPID_CITY_RCSTGPORTSTGID	0x2 
#define RAPID_CITY_RCSTGPORTPRIORITY	0x4 
#define RAPID_CITY_RCSTGPORTSTATE	0x8 
#define RAPID_CITY_RCSTGPORTENABLESTP	0x10 
#define RAPID_CITY_RCSTGPORTFASTSTART	0x20 
#define RAPID_CITY_RCSTGPORTPATHCOST	0x40 
#define RAPID_CITY_RCSTGPORTDESIGNATEDROOT	0x80 
#define RAPID_CITY_RCSTGPORTDESIGNATEDCOST	0x100 
#define RAPID_CITY_RCSTGPORTDESIGNATEDBRIDGE	0x200 
#define RAPID_CITY_RCSTGPORTDESIGNATEDPORT	0x400 
#define RAPID_CITY_RCSTGPORTFORWARDTRANSITIONS	0x800 
#define RAPID_CITY_RCSTGPORTINCONFIGBPDUS	0x1000 
#define RAPID_CITY_RCSTGPORTINTCNBPDUS	0x2000 
#define RAPID_CITY_RCSTGPORTINBADBPDUS	0x4000 
#define RAPID_CITY_RCSTGPORTOUTCONFIGBPDUS	0x8000 
#define RAPID_CITY_RCSTGPORTOUTTCNBPDUS	0x10000 
#define RAPID_CITY_RCSTGPORTROWSTATUS	0x20000 

typedef struct {
    gint32   rcStgPort;
    gint32   rcStgPortStgId;
    gint32   *rcStgPortPriority;
    gint32   *rcStgPortState;
    gint32   *rcStgPortEnableStp;
    gint32   *rcStgPortFastStart;
    gint32   *rcStgPortPathCost;
    guchar   *rcStgPortDesignatedRoot;
    gint32   *rcStgPortDesignatedCost;
    guchar   *rcStgPortDesignatedBridge;
    guchar   *rcStgPortDesignatedPort;
    guint32  *rcStgPortForwardTransitions;
    guint32  *rcStgPortInConfigBpdus;
    guint32  *rcStgPortInTcnBpdus;
    guint32  *rcStgPortInBadBpdus;
    guint32  *rcStgPortOutConfigBpdus;
    guint32  *rcStgPortOutTcnBpdus;
    gint32   *rcStgPortRowStatus;
} rapid_city_rcStgPortEntry_t;

extern void
rapid_city_get_rcStgPortTable(GSnmpSession *s, rapid_city_rcStgPortEntry_t ***rcStgPortEntry, gint mask);

extern void
rapid_city_free_rcStgPortTable(rapid_city_rcStgPortEntry_t **rcStgPortEntry);

extern rapid_city_rcStgPortEntry_t *
rapid_city_new_rcStgPortEntry(void);

extern void
rapid_city_get_rcStgPortEntry(GSnmpSession *s, rapid_city_rcStgPortEntry_t **rcStgPortEntry, gint32 rcStgPort, gint32 rcStgPortStgId, gint mask);

extern void
rapid_city_set_rcStgPortEntry(GSnmpSession *s, rapid_city_rcStgPortEntry_t *rcStgPortEntry, gint mask);

extern void
rapid_city_free_rcStgPortEntry(rapid_city_rcStgPortEntry_t *rcStgPortEntry);

/*
 * C type definitions for RAPID-CITY::rcBridge.
 */

#define RAPID_CITY_RCBRIDGEFDBTBLSIZE	0x1 
#define RAPID_CITY_RCBRIDGESTATICTBLSIZE	0x2 
#define RAPID_CITY_RCBRIDGEFILTERTBLSIZE	0x4 

typedef struct {
    gint32   *rcBridgeFdbTblSize;
    gint32   *rcBridgeStaticTblSize;
    gint32   *rcBridgeFilterTblSize;
} rapid_city_rcBridge_t;

extern rapid_city_rcBridge_t *
rapid_city_new_rcBridge(void);

extern void
rapid_city_get_rcBridge(GSnmpSession *s, rapid_city_rcBridge_t **rcBridge, gint mask);

extern void
rapid_city_free_rcBridge(rapid_city_rcBridge_t *rcBridge);

/*
 * C type definitions for RAPID-CITY::rcBridgeFdbEntry.
 */

#define RAPID_CITY_RCBRIDGEFDBSTATUS	0x1 
#define RAPID_CITY_RCBRIDGEFDBADDRESS	0x2 
#define RAPID_CITY_RCBRIDGEFDBPORT	0x4 
#define RAPID_CITY_RCBRIDGEFDBMONITOR	0x8 
#define RAPID_CITY_RCBRIDGEFDBPRIORITY	0x10 

typedef struct {
    gint32   rcBridgeFdbStatus;
    guchar   rcBridgeFdbAddress[6];
    gint32   *rcBridgeFdbPort;
    gint32   *rcBridgeFdbMonitor;
    gint32   *rcBridgeFdbPriority;
} rapid_city_rcBridgeFdbEntry_t;

extern void
rapid_city_get_rcBridgeFdbTable(GSnmpSession *s, rapid_city_rcBridgeFdbEntry_t ***rcBridgeFdbEntry, gint mask);

extern void
rapid_city_free_rcBridgeFdbTable(rapid_city_rcBridgeFdbEntry_t **rcBridgeFdbEntry);

extern rapid_city_rcBridgeFdbEntry_t *
rapid_city_new_rcBridgeFdbEntry(void);

extern void
rapid_city_get_rcBridgeFdbEntry(GSnmpSession *s, rapid_city_rcBridgeFdbEntry_t **rcBridgeFdbEntry, gint32 rcBridgeFdbStatus, guchar *rcBridgeFdbAddress, gint mask);

extern void
rapid_city_set_rcBridgeFdbEntry(GSnmpSession *s, rapid_city_rcBridgeFdbEntry_t *rcBridgeFdbEntry, gint mask);

extern void
rapid_city_free_rcBridgeFdbEntry(rapid_city_rcBridgeFdbEntry_t *rcBridgeFdbEntry);

/*
 * C type definitions for RAPID-CITY::rcBridgeStaticEntry.
 */

#define RAPID_CITY_RCBRIDGESTATICADDRESS	0x1 
#define RAPID_CITY_RCBRIDGESTATICPORT	0x2 
#define RAPID_CITY_RCBRIDGESTATICMONITOR	0x4 
#define RAPID_CITY_RCBRIDGESTATICPRIORITY	0x8 
#define RAPID_CITY_RCBRIDGESTATICSTATUS	0x10 

typedef struct {
    guchar   rcBridgeStaticAddress[6];
    gint32   rcBridgeStaticPort;
    gint32   *rcBridgeStaticMonitor;
    gint32   *rcBridgeStaticPriority;
    gint32   *rcBridgeStaticStatus;
} rapid_city_rcBridgeStaticEntry_t;

extern void
rapid_city_get_rcBridgeStaticTable(GSnmpSession *s, rapid_city_rcBridgeStaticEntry_t ***rcBridgeStaticEntry, gint mask);

extern void
rapid_city_free_rcBridgeStaticTable(rapid_city_rcBridgeStaticEntry_t **rcBridgeStaticEntry);

extern rapid_city_rcBridgeStaticEntry_t *
rapid_city_new_rcBridgeStaticEntry(void);

extern void
rapid_city_get_rcBridgeStaticEntry(GSnmpSession *s, rapid_city_rcBridgeStaticEntry_t **rcBridgeStaticEntry, guchar *rcBridgeStaticAddress, gint32 rcBridgeStaticPort, gint mask);

extern void
rapid_city_set_rcBridgeStaticEntry(GSnmpSession *s, rapid_city_rcBridgeStaticEntry_t *rcBridgeStaticEntry, gint mask);

extern void
rapid_city_free_rcBridgeStaticEntry(rapid_city_rcBridgeStaticEntry_t *rcBridgeStaticEntry);

/*
 * C type definitions for RAPID-CITY::rcBridgeFilterEntry.
 */

#define RAPID_CITY_RCBRIDGEFILTERADDRESS	0x1 
#define RAPID_CITY_RCBRIDGEFILTERPORT	0x2 
#define RAPID_CITY_RCBRIDGEFILTERNOTALLOWEDFROM	0x4 
#define RAPID_CITY_RCBRIDGEFILTERSTATUS	0x8 

typedef struct {
    guchar   rcBridgeFilterAddress[6];
    gint32   rcBridgeFilterPort;
    guchar   *rcBridgeFilterNotAllowedFrom;
    gint32   *rcBridgeFilterStatus;
} rapid_city_rcBridgeFilterEntry_t;

extern void
rapid_city_get_rcBridgeFilterTable(GSnmpSession *s, rapid_city_rcBridgeFilterEntry_t ***rcBridgeFilterEntry, gint mask);

extern void
rapid_city_free_rcBridgeFilterTable(rapid_city_rcBridgeFilterEntry_t **rcBridgeFilterEntry);

extern rapid_city_rcBridgeFilterEntry_t *
rapid_city_new_rcBridgeFilterEntry(void);

extern void
rapid_city_get_rcBridgeFilterEntry(GSnmpSession *s, rapid_city_rcBridgeFilterEntry_t **rcBridgeFilterEntry, guchar *rcBridgeFilterAddress, gint32 rcBridgeFilterPort, gint mask);

extern void
rapid_city_set_rcBridgeFilterEntry(GSnmpSession *s, rapid_city_rcBridgeFilterEntry_t *rcBridgeFilterEntry, gint mask);

extern void
rapid_city_free_rcBridgeFilterEntry(rapid_city_rcBridgeFilterEntry_t *rcBridgeFilterEntry);

/*
 * C type definitions for RAPID-CITY::rcBoot.
 */

#define RAPID_CITY_RCBOOTFLASHSWVERSION	0x1 
#define RAPID_CITY_RCBOOTPCMCIASWVERSION	0x2 
#define RAPID_CITY_RCBOOTLASTBOOTSOURCE	0x4 
#define RAPID_CITY_RCBOOTPRIMARY	0x8 
#define RAPID_CITY_RCBOOTSECONDARY	0x10 
#define RAPID_CITY_RCBOOTTERTIARY	0x20 

typedef struct {
    guchar   *rcBootFlashSwVersion;
    gsize    _rcBootFlashSwVersionLength;
    guchar   *rcBootPcmciaSwVersion;
    gsize    _rcBootPcmciaSwVersionLength;
    guchar   *rcBootLastBootSource;
    gsize    _rcBootLastBootSourceLength;
    gint32   *rcBootPrimary;
    gint32   *rcBootSecondary;
    gint32   *rcBootTertiary;
} rapid_city_rcBoot_t;

extern rapid_city_rcBoot_t *
rapid_city_new_rcBoot(void);

extern void
rapid_city_get_rcBoot(GSnmpSession *s, rapid_city_rcBoot_t **rcBoot, gint mask);

extern void
rapid_city_set_rcBoot(GSnmpSession *s, rapid_city_rcBoot_t *rcBoot, gint mask);

extern void
rapid_city_free_rcBoot(rapid_city_rcBoot_t *rcBoot);

/*
 * C type definitions for RAPID-CITY::rcDevice.
 */

#define RAPID_CITY_RCDEVICELASTBOOTSOURCE	0x1 
#define RAPID_CITY_RCDEVICEPRIMARYSOURCE	0x2 
#define RAPID_CITY_RCDEVICEPRIMARYSOURCEFILENAME	0x4 
#define RAPID_CITY_RCDEVICESECONDARYSOURCE	0x8 
#define RAPID_CITY_RCDEVICESECONDARYSOURCEFILENAME	0x10 
#define RAPID_CITY_RCDEVICETERTIARYSOURCE	0x20 
#define RAPID_CITY_RCDEVICETERTIARYSOURCEFILENAME	0x40 
#define RAPID_CITY_RCDEVICECONFIGSOURCE	0x80 
#define RAPID_CITY_RCDEVICECONFIGSOURCEFILENAME	0x100 
#define RAPID_CITY_RCDEVICEFLASHBYTESUSED	0x200 
#define RAPID_CITY_RCDEVICEFLASHBYTESFREE	0x400 
#define RAPID_CITY_RCDEVICEPCMCIABYTESUSED	0x800 
#define RAPID_CITY_RCDEVICEPCMCIABYTESFREE	0x1000 
#define RAPID_CITY_RCDEVICEACTION	0x2000 
#define RAPID_CITY_RCDEVICERESULT	0x4000 
#define RAPID_CITY_RCDEVICEFLASHNUMFILES	0x8000 
#define RAPID_CITY_RCDEVICEPCMCIANUMFILES	0x10000 

typedef struct {
    guchar   *rcDeviceLastBootSource;
    gsize    _rcDeviceLastBootSourceLength;
    gint32   *rcDevicePrimarySource;
    guchar   *rcDevicePrimarySourceFileName;
    gsize    _rcDevicePrimarySourceFileNameLength;
    gint32   *rcDeviceSecondarySource;
    guchar   *rcDeviceSecondarySourceFileName;
    gsize    _rcDeviceSecondarySourceFileNameLength;
    gint32   *rcDeviceTertiarySource;
    guchar   *rcDeviceTertiarySourceFileName;
    gsize    _rcDeviceTertiarySourceFileNameLength;
    gint32   *rcDeviceConfigSource;
    guchar   *rcDeviceConfigSourceFileName;
    gsize    _rcDeviceConfigSourceFileNameLength;
    gint32   *rcDeviceFlashBytesUsed;
    gint32   *rcDeviceFlashBytesFree;
    gint32   *rcDevicePcmciaBytesUsed;
    gint32   *rcDevicePcmciaBytesFree;
    gint32   *rcDeviceAction;
    gint32   *rcDeviceResult;
    gint32   *rcDeviceFlashNumFiles;
    gint32   *rcDevicePcmciaNumFiles;
} rapid_city_rcDevice_t;

extern rapid_city_rcDevice_t *
rapid_city_new_rcDevice(void);

extern void
rapid_city_get_rcDevice(GSnmpSession *s, rapid_city_rcDevice_t **rcDevice, gint mask);

extern void
rapid_city_set_rcDevice(GSnmpSession *s, rapid_city_rcDevice_t *rcDevice, gint mask);

extern void
rapid_city_free_rcDevice(rapid_city_rcDevice_t *rcDevice);

/*
 * C type definitions for RAPID-CITY::rcDeviceFlashEntry.
 */

#define RAPID_CITY_RCDEVICEFLASHFILENUM	0x1 
#define RAPID_CITY_RCDEVICEFLASHFILENAME	0x2 
#define RAPID_CITY_RCDEVICEFLASHFILEVERSION	0x4 
#define RAPID_CITY_RCDEVICEFLASHFILETYPE	0x8 
#define RAPID_CITY_RCDEVICEFLASHFILEMODE	0x10 
#define RAPID_CITY_RCDEVICEFLASHFILESIZE	0x20 
#define RAPID_CITY_RCDEVICEFLASHFILECRC	0x40 
#define RAPID_CITY_RCDEVICEFLASHFILESTATUS	0x80 
#define RAPID_CITY_RCDEVICEFLASHROWSTATUS	0x100 

typedef struct {
    gint32   rcDeviceFlashFileNum;
    guchar   *rcDeviceFlashFileName;
    gsize    _rcDeviceFlashFileNameLength;
    guchar   *rcDeviceFlashFileVersion;
    gsize    _rcDeviceFlashFileVersionLength;
    gint32   *rcDeviceFlashFileType;
    gint32   *rcDeviceFlashFileMode;
    gint32   *rcDeviceFlashFileSize;
    gint32   *rcDeviceFlashFileCrc;
    gint32   *rcDeviceFlashFileStatus;
    gint32   *rcDeviceFlashRowStatus;
} rapid_city_rcDeviceFlashEntry_t;

extern void
rapid_city_get_rcDeviceFlashTable(GSnmpSession *s, rapid_city_rcDeviceFlashEntry_t ***rcDeviceFlashEntry, gint mask);

extern void
rapid_city_free_rcDeviceFlashTable(rapid_city_rcDeviceFlashEntry_t **rcDeviceFlashEntry);

extern rapid_city_rcDeviceFlashEntry_t *
rapid_city_new_rcDeviceFlashEntry(void);

extern void
rapid_city_get_rcDeviceFlashEntry(GSnmpSession *s, rapid_city_rcDeviceFlashEntry_t **rcDeviceFlashEntry, gint32 rcDeviceFlashFileNum, gint mask);

extern void
rapid_city_set_rcDeviceFlashEntry(GSnmpSession *s, rapid_city_rcDeviceFlashEntry_t *rcDeviceFlashEntry, gint mask);

extern void
rapid_city_free_rcDeviceFlashEntry(rapid_city_rcDeviceFlashEntry_t *rcDeviceFlashEntry);

/*
 * C type definitions for RAPID-CITY::rcDevicePcmciaEntry.
 */

#define RAPID_CITY_RCDEVICEPCMCIAFILENUM	0x1 
#define RAPID_CITY_RCDEVICEPCMCIAFILENAME	0x2 
#define RAPID_CITY_RCDEVICEPCMCIAFILEVERSION	0x4 
#define RAPID_CITY_RCDEVICEPCMCIAFILETYPE	0x8 
#define RAPID_CITY_RCDEVICEPCMCIAFILEMODE	0x10 
#define RAPID_CITY_RCDEVICEPCMCIAFILESIZE	0x20 
#define RAPID_CITY_RCDEVICEPCMCIAFILECRC	0x40 
#define RAPID_CITY_RCDEVICEPCMCIAFILESTATUS	0x80 
#define RAPID_CITY_RCDEVICEPCMCIAROWSTATUS	0x100 

typedef struct {
    gint32   rcDevicePcmciaFileNum;
    guchar   *rcDevicePcmciaFileName;
    gsize    _rcDevicePcmciaFileNameLength;
    guchar   *rcDevicePcmciaFileVersion;
    gsize    _rcDevicePcmciaFileVersionLength;
    gint32   *rcDevicePcmciaFileType;
    gint32   *rcDevicePcmciaFileMode;
    gint32   *rcDevicePcmciaFileSize;
    gint32   *rcDevicePcmciaFileCrc;
    gint32   *rcDevicePcmciaFileStatus;
    gint32   *rcDevicePcmciaRowStatus;
} rapid_city_rcDevicePcmciaEntry_t;

extern void
rapid_city_get_rcDevicePcmciaTable(GSnmpSession *s, rapid_city_rcDevicePcmciaEntry_t ***rcDevicePcmciaEntry, gint mask);

extern void
rapid_city_free_rcDevicePcmciaTable(rapid_city_rcDevicePcmciaEntry_t **rcDevicePcmciaEntry);

extern rapid_city_rcDevicePcmciaEntry_t *
rapid_city_new_rcDevicePcmciaEntry(void);

extern void
rapid_city_get_rcDevicePcmciaEntry(GSnmpSession *s, rapid_city_rcDevicePcmciaEntry_t **rcDevicePcmciaEntry, gint32 rcDevicePcmciaFileNum, gint mask);

extern void
rapid_city_set_rcDevicePcmciaEntry(GSnmpSession *s, rapid_city_rcDevicePcmciaEntry_t *rcDevicePcmciaEntry, gint mask);

extern void
rapid_city_free_rcDevicePcmciaEntry(rapid_city_rcDevicePcmciaEntry_t *rcDevicePcmciaEntry);

/*
 * C type definitions for RAPID-CITY::rcMlt.
 */

#define RAPID_CITY_RCMLTNUMMLTS	0x1 
#define RAPID_CITY_RCMLTPOTENTIALMEMBERS	0x2 

typedef struct {
    gint32   *rcMltNumMlts;
    guchar   *rcMltPotentialMembers;
} rapid_city_rcMlt_t;

extern rapid_city_rcMlt_t *
rapid_city_new_rcMlt(void);

extern void
rapid_city_get_rcMlt(GSnmpSession *s, rapid_city_rcMlt_t **rcMlt, gint mask);

extern void
rapid_city_free_rcMlt(rapid_city_rcMlt_t *rcMlt);

/*
 * C type definitions for RAPID-CITY::rcMltEntry.
 */

#define RAPID_CITY_RCMLTID	0x1 
#define RAPID_CITY_RCMLTNAME	0x2 
#define RAPID_CITY_RCMLTPORTMEMBERS	0x4 
#define RAPID_CITY_RCMLTPORTTYPE	0x8 
#define RAPID_CITY_RCMLTNUMVLANIDS	0x10 
#define RAPID_CITY_RCMLTVLANIDS	0x20 
#define RAPID_CITY_RCMLTROWSTATUS	0x40 
#define RAPID_CITY_RCMLTENABLE	0x80 
#define RAPID_CITY_RCMLTLOADBALANCE	0x100 
#define RAPID_CITY_RCMLTDISTRIBUTIONALGORITHM	0x200 
#define RAPID_CITY_RCMLTIFINDEX	0x400 

typedef struct {
    gint32   rcMltId;
    guchar   *rcMltName;
    gsize    _rcMltNameLength;
    guchar   *rcMltPortMembers;
    gint32   *rcMltPortType;
    gint32   *rcMltNumVlanIds;
    guchar   *rcMltVlanIds;
    gint32   *rcMltRowStatus;
    gint32   *rcMltEnable;
    gint32   *rcMltLoadBalance;
    gint32   *rcMltDistributionAlgorithm;
    gint32   *rcMltIfIndex;
} rapid_city_rcMltEntry_t;

extern void
rapid_city_get_rcMltTable(GSnmpSession *s, rapid_city_rcMltEntry_t ***rcMltEntry, gint mask);

extern void
rapid_city_free_rcMltTable(rapid_city_rcMltEntry_t **rcMltEntry);

extern rapid_city_rcMltEntry_t *
rapid_city_new_rcMltEntry(void);

extern void
rapid_city_get_rcMltEntry(GSnmpSession *s, rapid_city_rcMltEntry_t **rcMltEntry, gint32 rcMltId, gint mask);

extern void
rapid_city_set_rcMltEntry(GSnmpSession *s, rapid_city_rcMltEntry_t *rcMltEntry, gint mask);

extern void
rapid_city_free_rcMltEntry(rapid_city_rcMltEntry_t *rcMltEntry);

/*
 * C type definitions for RAPID-CITY::rcWeb.
 */

#define RAPID_CITY_RCWEBENABLESERVER	0x1 
#define RAPID_CITY_RCWEBRWAUSERNAME	0x2 
#define RAPID_CITY_RCWEBRWAPASSWORD	0x4 
#define RAPID_CITY_RCWEBRWUSERNAME	0x8 
#define RAPID_CITY_RCWEBRWPASSWORD	0x10 
#define RAPID_CITY_RCWEBROUSERNAME	0x20 
#define RAPID_CITY_RCWEBROPASSWORD	0x40 
#define RAPID_CITY_RCWEBLASTCHANGE	0x80 
#define RAPID_CITY_RCWEBNUMHITS	0x100 
#define RAPID_CITY_RCWEBNUMACCESSCHECKS	0x200 
#define RAPID_CITY_RCWEBNUMACCESSBLOCKS	0x400 
#define RAPID_CITY_RCWEBNUMRXERRORS	0x800 
#define RAPID_CITY_RCWEBNUMTXERRORS	0x1000 
#define RAPID_CITY_RCWEBNUMSETREQUEST	0x2000 

typedef struct {
    gint32   *rcWebEnableServer;
    guchar   *rcWebRWAUserName;
    gsize    _rcWebRWAUserNameLength;
    guchar   *rcWebRWAPassword;
    gsize    _rcWebRWAPasswordLength;
    guchar   *rcWebRWUserName;
    gsize    _rcWebRWUserNameLength;
    guchar   *rcWebRWPassword;
    gsize    _rcWebRWPasswordLength;
    guchar   *rcWebROUserName;
    gsize    _rcWebROUserNameLength;
    guchar   *rcWebROPassword;
    gsize    _rcWebROPasswordLength;
    guint32  *rcWebLastChange;
    gint32   *rcWebNumHits;
    gint32   *rcWebNumAccessChecks;
    gint32   *rcWebNumAccessBlocks;
    gint32   *rcWebNumRxErrors;
    gint32   *rcWebNumTxErrors;
    gint32   *rcWebNumSetRequest;
} rapid_city_rcWeb_t;

extern rapid_city_rcWeb_t *
rapid_city_new_rcWeb(void);

extern void
rapid_city_get_rcWeb(GSnmpSession *s, rapid_city_rcWeb_t **rcWeb, gint mask);

extern void
rapid_city_set_rcWeb(GSnmpSession *s, rapid_city_rcWeb_t *rcWeb, gint mask);

extern void
rapid_city_free_rcWeb(rapid_city_rcWeb_t *rcWeb);

/*
 * C type definitions for RAPID-CITY::rcCli.
 */

#define RAPID_CITY_RCCLIRWAUSERNAME	0x1 
#define RAPID_CITY_RCCLIRWAPASSWORD	0x2 
#define RAPID_CITY_RCCLIRWUSERNAME	0x4 
#define RAPID_CITY_RCCLIRWPASSWORD	0x8 
#define RAPID_CITY_RCCLIRWL3USERNAME	0x10 
#define RAPID_CITY_RCCLIRWL3PASSWORD	0x20 
#define RAPID_CITY_RCCLIRWL2USERNAME	0x40 
#define RAPID_CITY_RCCLIRWL2PASSWORD	0x80 
#define RAPID_CITY_RCCLIROUSERNAME	0x100 
#define RAPID_CITY_RCCLIROPASSWORD	0x200 
#define RAPID_CITY_RCCLIMAXTELNETSESSIONS	0x400 
#define RAPID_CITY_RCCLIMAXRLOGINSESSIONS	0x800 
#define RAPID_CITY_RCCLITIMEOUT	0x1000 
#define RAPID_CITY_RCCLINUMACCESSVIOLATIONS	0x2000 

typedef struct {
    guchar   *rcCliRWAUserName;
    gsize    _rcCliRWAUserNameLength;
    guchar   *rcCliRWAPassword;
    gsize    _rcCliRWAPasswordLength;
    guchar   *rcCliRWUserName;
    gsize    _rcCliRWUserNameLength;
    guchar   *rcCliRWPassword;
    gsize    _rcCliRWPasswordLength;
    guchar   *rcCliRWL3UserName;
    gsize    _rcCliRWL3UserNameLength;
    guchar   *rcCliRWL3Password;
    gsize    _rcCliRWL3PasswordLength;
    guchar   *rcCliRWL2UserName;
    gsize    _rcCliRWL2UserNameLength;
    guchar   *rcCliRWL2Password;
    gsize    _rcCliRWL2PasswordLength;
    guchar   *rcCliROUserName;
    gsize    _rcCliROUserNameLength;
    guchar   *rcCliROPassword;
    gsize    _rcCliROPasswordLength;
    gint32   *rcCliMaxTelnetSessions;
    gint32   *rcCliMaxRloginSessions;
    gint32   *rcCliTimeout;
    gint32   *rcCliNumAccessViolations;
} rapid_city_rcCli_t;

extern rapid_city_rcCli_t *
rapid_city_new_rcCli(void);

extern void
rapid_city_get_rcCli(GSnmpSession *s, rapid_city_rcCli_t **rcCli, gint mask);

extern void
rapid_city_set_rcCli(GSnmpSession *s, rapid_city_rcCli_t *rcCli, gint mask);

extern void
rapid_city_free_rcCli(rapid_city_rcCli_t *rcCli);

/*
 * C type definitions for RAPID-CITY::rcError.
 */

#define RAPID_CITY_RCERRORLEVEL	0x1 
#define RAPID_CITY_RCERRORCODE	0x2 
#define RAPID_CITY_RCERRORTEXT	0x4 
#define RAPID_CITY_RCERRORRETURNCODE	0x8 
#define RAPID_CITY_RCERRORSENDTRAP	0x10 

typedef struct {
    gint32   *rcErrorLevel;
    gint32   *rcErrorCode;
    guchar   *rcErrorText;
    gsize    _rcErrorTextLength;
    gint32   *rcErrorReturnCode;
    gint32   *rcErrorSendTrap;
} rapid_city_rcError_t;

extern rapid_city_rcError_t *
rapid_city_new_rcError(void);

extern void
rapid_city_get_rcError(GSnmpSession *s, rapid_city_rcError_t **rcError, gint mask);

extern void
rapid_city_set_rcError(GSnmpSession *s, rapid_city_rcError_t *rcError, gint mask);

extern void
rapid_city_free_rcError(rapid_city_rcError_t *rcError);

/*
 * C type definitions for RAPID-CITY::rcSyslogGlobal.
 */

#define RAPID_CITY_RCSYSLOGGLOBALENABLE	0x1 
#define RAPID_CITY_RCSYSLOGGLOBALMAXHOSTS	0x2 
#define RAPID_CITY_RCSYSLOGGLOBALOPERSTATE	0x4 

typedef struct {
    gint32   *rcSyslogGlobalEnable;
    gint32   *rcSyslogGlobalMaxHosts;
    gint32   *rcSyslogGlobalOperState;
} rapid_city_rcSyslogGlobal_t;

extern rapid_city_rcSyslogGlobal_t *
rapid_city_new_rcSyslogGlobal(void);

extern void
rapid_city_get_rcSyslogGlobal(GSnmpSession *s, rapid_city_rcSyslogGlobal_t **rcSyslogGlobal, gint mask);

extern void
rapid_city_set_rcSyslogGlobal(GSnmpSession *s, rapid_city_rcSyslogGlobal_t *rcSyslogGlobal, gint mask);

extern void
rapid_city_free_rcSyslogGlobal(rapid_city_rcSyslogGlobal_t *rcSyslogGlobal);

/*
 * C type definitions for RAPID-CITY::rcSyslogHostEntry.
 */

#define RAPID_CITY_RCSYSLOGHOSTID	0x1 
#define RAPID_CITY_RCSYSLOGHOSTIPADDR	0x2 
#define RAPID_CITY_RCSYSLOGHOSTUDPPORT	0x4 
#define RAPID_CITY_RCSYSLOGHOSTFACILITY	0x8 
#define RAPID_CITY_RCSYSLOGHOSTMODULEID	0x10 
#define RAPID_CITY_RCSYSLOGHOSTMODULEID2	0x20 
#define RAPID_CITY_RCSYSLOGHOSTSEVERITY	0x40 
#define RAPID_CITY_RCSYSLOGHOSTMAPINFOSEVERITY	0x80 
#define RAPID_CITY_RCSYSLOGHOSTMAPWARNINGSEVERITY	0x100 
#define RAPID_CITY_RCSYSLOGHOSTMAPERRORSEVERITY	0x200 
#define RAPID_CITY_RCSYSLOGHOSTMAPMFGSEVERITY	0x400 
#define RAPID_CITY_RCSYSLOGHOSTMAPFATALSEVERITY	0x800 
#define RAPID_CITY_RCSYSLOGHOSTMAPTRACEMSG	0x1000 
#define RAPID_CITY_RCSYSLOGHOSTMAPTRAPMSG	0x2000 
#define RAPID_CITY_RCSYSLOGHOSTLOGTRACEMSGS	0x4000 
#define RAPID_CITY_RCSYSLOGHOSTLOGTRAPMSGS	0x8000 
#define RAPID_CITY_RCSYSLOGHOSTENABLE	0x10000 
#define RAPID_CITY_RCSYSLOGHOSTROWSTATUS	0x20000 

typedef struct {
    gint32   rcSyslogHostId;
    guchar   *rcSyslogHostIpAddr;
    gint32   *rcSyslogHostUdpPort;
    gint32   *rcSyslogHostFacility;
    gint32   *rcSyslogHostModuleId;
    gint32   *rcSyslogHostModuleId2;
    gint32   *rcSyslogHostSeverity;
    gint32   *rcSyslogHostMapInfoSeverity;
    gint32   *rcSyslogHostMapWarningSeverity;
    gint32   *rcSyslogHostMapErrorSeverity;
    gint32   *rcSyslogHostMapMfgSeverity;
    gint32   *rcSyslogHostMapFatalSeverity;
    gint32   *rcSyslogHostMapTraceMsg;
    gint32   *rcSyslogHostMapTrapMsg;
    gint32   *rcSyslogHostLogTraceMsgs;
    gint32   *rcSyslogHostLogTrapMsgs;
    gint32   *rcSyslogHostEnable;
    gint32   *rcSyslogHostRowStatus;
} rapid_city_rcSyslogHostEntry_t;

extern void
rapid_city_get_rcSyslogHostTbl(GSnmpSession *s, rapid_city_rcSyslogHostEntry_t ***rcSyslogHostEntry, gint mask);

extern void
rapid_city_free_rcSyslogHostTbl(rapid_city_rcSyslogHostEntry_t **rcSyslogHostEntry);

extern rapid_city_rcSyslogHostEntry_t *
rapid_city_new_rcSyslogHostEntry(void);

extern void
rapid_city_get_rcSyslogHostEntry(GSnmpSession *s, rapid_city_rcSyslogHostEntry_t **rcSyslogHostEntry, gint32 rcSyslogHostId, gint mask);

extern void
rapid_city_set_rcSyslogHostEntry(GSnmpSession *s, rapid_city_rcSyslogHostEntry_t *rcSyslogHostEntry, gint mask);

extern void
rapid_city_free_rcSyslogHostEntry(rapid_city_rcSyslogHostEntry_t *rcSyslogHostEntry);

/*
 * C type definitions for RAPID-CITY::rcDiag.
 */

#define RAPID_CITY_RCDIAGSAVECONFIG	0x1 
#define RAPID_CITY_RCDIAGMIRRORBYPORTTBLSIZE	0x2 
#define RAPID_CITY_RCDIAGPORTCONVSTEERINGTBLSIZE	0x4 
#define RAPID_CITY_RCDIAGMACCONVSTEERINGTBLSIZE	0x8 

typedef struct {
    gint32   *rcDiagSaveConfig;
    gint32   *rcDiagMirrorByPortTblSize;
    gint32   *rcDiagPortConvSteeringTblSize;
    gint32   *rcDiagMacConvSteeringTblSize;
} rapid_city_rcDiag_t;

extern rapid_city_rcDiag_t *
rapid_city_new_rcDiag(void);

extern void
rapid_city_get_rcDiag(GSnmpSession *s, rapid_city_rcDiag_t **rcDiag, gint mask);

extern void
rapid_city_set_rcDiag(GSnmpSession *s, rapid_city_rcDiag_t *rcDiag, gint mask);

extern void
rapid_city_free_rcDiag(rapid_city_rcDiag_t *rcDiag);

/*
 * C type definitions for RAPID-CITY::rcDiagMirrorByPortEntry.
 */

#define RAPID_CITY_RCDIAGMIRRORBYPORTID	0x1 
#define RAPID_CITY_RCDIAGMIRRORBYPORTMIRROREDPORT	0x2 
#define RAPID_CITY_RCDIAGMIRRORBYPORTMIRRORINGPORT	0x4 
#define RAPID_CITY_RCDIAGMIRRORBYPORTMODE	0x8 
#define RAPID_CITY_RCDIAGMIRRORBYPORTENABLE	0x10 
#define RAPID_CITY_RCDIAGMIRRORBYPORTROWSTATUS	0x20 

typedef struct {
    gint32   rcDiagMirrorByPortId;
    gint32   *rcDiagMirrorByPortMirroredPort;
    gint32   *rcDiagMirrorByPortMirroringPort;
    gint32   *rcDiagMirrorByPortMode;
    gint32   *rcDiagMirrorByPortEnable;
    gint32   *rcDiagMirrorByPortRowStatus;
} rapid_city_rcDiagMirrorByPortEntry_t;

extern void
rapid_city_get_rcDiagMirrorByPortTable(GSnmpSession *s, rapid_city_rcDiagMirrorByPortEntry_t ***rcDiagMirrorByPortEntry, gint mask);

extern void
rapid_city_free_rcDiagMirrorByPortTable(rapid_city_rcDiagMirrorByPortEntry_t **rcDiagMirrorByPortEntry);

extern rapid_city_rcDiagMirrorByPortEntry_t *
rapid_city_new_rcDiagMirrorByPortEntry(void);

extern void
rapid_city_get_rcDiagMirrorByPortEntry(GSnmpSession *s, rapid_city_rcDiagMirrorByPortEntry_t **rcDiagMirrorByPortEntry, gint32 rcDiagMirrorByPortId, gint mask);

extern void
rapid_city_set_rcDiagMirrorByPortEntry(GSnmpSession *s, rapid_city_rcDiagMirrorByPortEntry_t *rcDiagMirrorByPortEntry, gint mask);

extern void
rapid_city_free_rcDiagMirrorByPortEntry(rapid_city_rcDiagMirrorByPortEntry_t *rcDiagMirrorByPortEntry);

/*
 * C type definitions for RAPID-CITY::rcDiagPortConvSteeringEntry.
 */

#define RAPID_CITY_RCDIAGPORTCONVSTEERINGID	0x1 
#define RAPID_CITY_RCDIAGPORTCONVSTEERINGPORTONE	0x2 
#define RAPID_CITY_RCDIAGPORTCONVSTEERINGPORTTWO	0x4 
#define RAPID_CITY_RCDIAGPORTCONVSTEERINGMODE	0x8 
#define RAPID_CITY_RCDIAGPORTCONVSTEERINGFORWARDPORT	0x10 
#define RAPID_CITY_RCDIAGPORTCONVSTEERINGENABLE	0x20 
#define RAPID_CITY_RCDIAGPORTCONVSTEERINGROWSTATUS	0x40 

typedef struct {
    gint32   rcDiagPortConvSteeringId;
    gint32   *rcDiagPortConvSteeringPortOne;
    gint32   *rcDiagPortConvSteeringPortTwo;
    gint32   *rcDiagPortConvSteeringMode;
    gint32   *rcDiagPortConvSteeringForwardPort;
    gint32   *rcDiagPortConvSteeringEnable;
    gint32   *rcDiagPortConvSteeringRowStatus;
} rapid_city_rcDiagPortConvSteeringEntry_t;

extern void
rapid_city_get_rcDiagPortConvSteeringTable(GSnmpSession *s, rapid_city_rcDiagPortConvSteeringEntry_t ***rcDiagPortConvSteeringEntry, gint mask);

extern void
rapid_city_free_rcDiagPortConvSteeringTable(rapid_city_rcDiagPortConvSteeringEntry_t **rcDiagPortConvSteeringEntry);

extern rapid_city_rcDiagPortConvSteeringEntry_t *
rapid_city_new_rcDiagPortConvSteeringEntry(void);

extern void
rapid_city_get_rcDiagPortConvSteeringEntry(GSnmpSession *s, rapid_city_rcDiagPortConvSteeringEntry_t **rcDiagPortConvSteeringEntry, gint32 rcDiagPortConvSteeringId, gint mask);

extern void
rapid_city_set_rcDiagPortConvSteeringEntry(GSnmpSession *s, rapid_city_rcDiagPortConvSteeringEntry_t *rcDiagPortConvSteeringEntry, gint mask);

extern void
rapid_city_free_rcDiagPortConvSteeringEntry(rapid_city_rcDiagPortConvSteeringEntry_t *rcDiagPortConvSteeringEntry);

/*
 * C type definitions for RAPID-CITY::rcDiagMacConvSteeringEntry.
 */

#define RAPID_CITY_RCDIAGMACCONVSTEERINGID	0x1 
#define RAPID_CITY_RCDIAGMACCONVSTEERINGSRCMAC	0x2 
#define RAPID_CITY_RCDIAGMACCONVSTEERINGDSTMAC	0x4 
#define RAPID_CITY_RCDIAGMACCONVSTEERINGINPORT	0x8 
#define RAPID_CITY_RCDIAGMACCONVSTEERINGFORWARDPORT	0x10 
#define RAPID_CITY_RCDIAGMACCONVSTEERINGENABLE	0x20 
#define RAPID_CITY_RCDIAGMACCONVSTEERINGROWSTATUS	0x40 

typedef struct {
    gint32   rcDiagMacConvSteeringId;
    guchar   *rcDiagMacConvSteeringSrcMac;
    guchar   *rcDiagMacConvSteeringDstMac;
    gint32   *rcDiagMacConvSteeringInPort;
    gint32   *rcDiagMacConvSteeringForwardPort;
    gint32   *rcDiagMacConvSteeringEnable;
    gint32   *rcDiagMacConvSteeringRowStatus;
} rapid_city_rcDiagMacConvSteeringEntry_t;

extern void
rapid_city_get_rcDiagMacConvSteeringTable(GSnmpSession *s, rapid_city_rcDiagMacConvSteeringEntry_t ***rcDiagMacConvSteeringEntry, gint mask);

extern void
rapid_city_free_rcDiagMacConvSteeringTable(rapid_city_rcDiagMacConvSteeringEntry_t **rcDiagMacConvSteeringEntry);

extern rapid_city_rcDiagMacConvSteeringEntry_t *
rapid_city_new_rcDiagMacConvSteeringEntry(void);

extern void
rapid_city_get_rcDiagMacConvSteeringEntry(GSnmpSession *s, rapid_city_rcDiagMacConvSteeringEntry_t **rcDiagMacConvSteeringEntry, gint32 rcDiagMacConvSteeringId, gint mask);

extern void
rapid_city_set_rcDiagMacConvSteeringEntry(GSnmpSession *s, rapid_city_rcDiagMacConvSteeringEntry_t *rcDiagMacConvSteeringEntry, gint mask);

extern void
rapid_city_free_rcDiagMacConvSteeringEntry(rapid_city_rcDiagMacConvSteeringEntry_t *rcDiagMacConvSteeringEntry);

/*
 * C type definitions for RAPID-CITY::rcIpx.
 */

#define RAPID_CITY_RCIPXROUTINGENABLE	0x1 

typedef struct {
    gint32   *rcIpxRoutingEnable;
} rapid_city_rcIpx_t;

extern rapid_city_rcIpx_t *
rapid_city_new_rcIpx(void);

extern void
rapid_city_get_rcIpx(GSnmpSession *s, rapid_city_rcIpx_t **rcIpx, gint mask);

extern void
rapid_city_set_rcIpx(GSnmpSession *s, rapid_city_rcIpx_t *rcIpx, gint mask);

extern void
rapid_city_free_rcIpx(rapid_city_rcIpx_t *rcIpx);

/*
 * C type definitions for RAPID-CITY::rcIpxAddrEntry.
 */

#define RAPID_CITY_RCIPXADDRVLANID	0x1 
#define RAPID_CITY_RCIPXADDRNETADDR	0x2 
#define RAPID_CITY_RCIPXADDRENCAP	0x4 
#define RAPID_CITY_RCIPXADDRENTRYSTATUS	0x8 

typedef struct {
    gint32   rcIpxAddrVlanId;
    guchar   rcIpxAddrNetAddr[4];
    gint32   rcIpxAddrEncap;
    gint32   *rcIpxAddrEntryStatus;
} rapid_city_rcIpxAddrEntry_t;

extern void
rapid_city_get_rcIpxAddrTable(GSnmpSession *s, rapid_city_rcIpxAddrEntry_t ***rcIpxAddrEntry, gint mask);

extern void
rapid_city_free_rcIpxAddrTable(rapid_city_rcIpxAddrEntry_t **rcIpxAddrEntry);

extern rapid_city_rcIpxAddrEntry_t *
rapid_city_new_rcIpxAddrEntry(void);

extern void
rapid_city_get_rcIpxAddrEntry(GSnmpSession *s, rapid_city_rcIpxAddrEntry_t **rcIpxAddrEntry, gint32 rcIpxAddrVlanId, guchar *rcIpxAddrNetAddr, gint32 rcIpxAddrEncap, gint mask);

extern void
rapid_city_set_rcIpxAddrEntry(GSnmpSession *s, rapid_city_rcIpxAddrEntry_t *rcIpxAddrEntry, gint mask);

extern void
rapid_city_free_rcIpxAddrEntry(rapid_city_rcIpxAddrEntry_t *rcIpxAddrEntry);


#endif /* _RAPID_CITY_H_ */
