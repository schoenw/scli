/*							-- DO NOT EDIT --
 * This file has been generated by smidump
 * version 0.2.14 for the stools package.
 *
 * Derived from TUNNEL-MIB revision 1999-08-24 12:00.
 *
 * $Id$
 */

#ifndef _TUNNEL_MIB_H_
#define _TUNNEL_MIB_H_

#include "stools.h"

/*
 * Tables to map enumerations to strings and vice versa.
 */

extern stls_table_t tunnel_mib_enums_tunnelIfEncapsMethod[];
extern stls_table_t tunnel_mib_enums_tunnelIfSecurity[];
extern stls_table_t tunnel_mib_enums_tunnelConfigEncapsMethod[];
extern stls_table_t tunnel_mib_enums_tunnelConfigStatus[];

/*
 * C type definitions for TUNNEL-MIB::tunnelIfEntry.
 */

typedef struct tunnelIfEntry {
    gint32   ifIndex;
    guchar   *tunnelIfLocalAddress;
    guchar   *tunnelIfRemoteAddress;
    gint32   *tunnelIfEncapsMethod;
    gint32   *tunnelIfHopLimit;
    gint32   *tunnelIfSecurity;
    gint32   *tunnelIfTOS;
} tunnelIfEntry_t;

extern int
tunnel_mib_get_tunnelIfTable(host_snmp *s, tunnelIfEntry_t ***tunnelIfEntry);

extern void
tunnel_mib_free_tunnelIfTable(tunnelIfEntry_t **tunnelIfEntry);

extern tunnelIfEntry_t *
tunnel_mib_new_tunnelIfEntry();

extern int
tunnel_mib_get_tunnelIfEntry(host_snmp *s, tunnelIfEntry_t **tunnelIfEntry);

extern int
tunnel_mib_set_tunnelIfEntry(host_snmp *s, tunnelIfEntry_t *tunnelIfEntry);

extern void
tunnel_mib_free_tunnelIfEntry(tunnelIfEntry_t *tunnelIfEntry);

/*
 * C type definitions for TUNNEL-MIB::tunnelConfigEntry.
 */

typedef struct tunnelConfigEntry {
    guchar   tunnelConfigLocalAddress[4];
    guchar   tunnelConfigRemoteAddress[4];
    gint32   tunnelConfigEncapsMethod;
    gint32   tunnelConfigID;
    gint32   *tunnelConfigIfIndex;
    gint32   *tunnelConfigStatus;
} tunnelConfigEntry_t;

extern int
tunnel_mib_get_tunnelConfigTable(host_snmp *s, tunnelConfigEntry_t ***tunnelConfigEntry);

extern void
tunnel_mib_free_tunnelConfigTable(tunnelConfigEntry_t **tunnelConfigEntry);

extern tunnelConfigEntry_t *
tunnel_mib_new_tunnelConfigEntry();

extern int
tunnel_mib_get_tunnelConfigEntry(host_snmp *s, tunnelConfigEntry_t **tunnelConfigEntry);

extern int
tunnel_mib_set_tunnelConfigEntry(host_snmp *s, tunnelConfigEntry_t *tunnelConfigEntry);

extern void
tunnel_mib_free_tunnelConfigEntry(tunnelConfigEntry_t *tunnelConfigEntry);


#endif /* _TUNNEL_MIB_H_ */
