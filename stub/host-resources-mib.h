/*							-- DO NOT EDIT --
 * This file has been generated by smidump
 * version 0.3.0 for the scli package.
 *
 * Derived from HOST-RESOURCES-MIB:
 *   This MIB is for use in managing host systems. The term
 *   `host' is construed to mean any computer that communicates
 *   with other similar computers attached to the internet and
 *   that is directly used by one or more human beings. Although
 *   this MIB does not necessarily apply to devices whose primary
 *   function is communications services (e.g., terminal servers,
 *   routers, bridges, monitoring equipment), such relevance is
 *   not explicitly precluded.  This MIB instruments attributes
 *   common to all internet hosts including, for example, both
 *   personal computers and systems that run variants of Unix.
 *
 * Revision 2000-03-06 00:00:
 *   Clarifications and bug fixes based on implementation
 *   experience.  This revision was also reformatted in the SMIv2
 *   format. The revisions made were:
 *   
 *   New RFC document standards:
 *      Added Copyright notice, updated introduction to SNMP
 *      Framework, updated references section, added reference to
 *      RFC 2119, and added a meaningful Security Considerations
 *      section.
 *   
 *   New IANA considerations section for registration of new types
 *   
 *   Conversion to new SMIv2 syntax for the following types and
 *   macros:
 *       Counter32, Integer32, Gauge32, MODULE-IDENTITY,
 *       OBJECT-TYPE, TEXTUAL-CONVENTION, OBJECT-IDENTITY,
 *       MODULE-COMPLIANCE, OBJECT-GROUP
 *   
 *   Used new Textual Conventions:
 *       TruthValue, DateAndTime, AutonomousType,
 *       InterfaceIndexOrZero
 *   
 *   Fixed typo in hrPrinterStatus.
 *   
 *   Added missing error bits to hrPrinterDetectedErrorState and
 *   clarified confusion resulting from suggested mappings to
 *   hrPrinterStatus.
 *   Clarified that size of objects of type
 *   InternationalDisplayString is number of octets, not number
 *   of encoded symbols.
 *   
 *   Clarified the use of the following objects based on
 *   implementation experience:
 *       hrSystemInitialLoadDevice, hrSystemInitialLoadParameters,
 *       hrMemorySize, hrStorageSize, hrStorageAllocationFailures,
 *       hrDeviceErrors, hrProcessorLoad, hrNetworkIfIndex,
 *       hrDiskStorageCapacity, hrSWRunStatus, hrSWRunPerfCPU,
 *       and hrSWInstalledDate.
 *   
 *   Clarified implementation technique for hrSWInstalledTable.
 *   
 *   Used new AUGMENTS clause for hrSWRunPerfTable.
 *   
 *   Added Internationalization Considerations section.
 *   
 *   This revision published as RFC2790.
 *
 * Revision 1999-10-20 22:00:
 *   The original version of this MIB, published as
 *   RFC1514.
 *
 * $Id$
 */

#ifndef _HOST_RESOURCES_MIB_H_
#define _HOST_RESOURCES_MIB_H_

#include "g_snmp.h"

/*
 * Tables to map enumerations to strings and vice versa.
 */

#define HOST_RESOURCES_MIB_HRDEVICESTATUS_UNKNOWN	1
#define HOST_RESOURCES_MIB_HRDEVICESTATUS_RUNNING	2
#define HOST_RESOURCES_MIB_HRDEVICESTATUS_WARNING	3
#define HOST_RESOURCES_MIB_HRDEVICESTATUS_TESTING	4
#define HOST_RESOURCES_MIB_HRDEVICESTATUS_DOWN	5

extern GSnmpEnum const host_resources_mib_enums_hrDeviceStatus[];

#define HOST_RESOURCES_MIB_HRPRINTERSTATUS_OTHER	1
#define HOST_RESOURCES_MIB_HRPRINTERSTATUS_UNKNOWN	2
#define HOST_RESOURCES_MIB_HRPRINTERSTATUS_IDLE	3
#define HOST_RESOURCES_MIB_HRPRINTERSTATUS_PRINTING	4
#define HOST_RESOURCES_MIB_HRPRINTERSTATUS_WARMUP	5

extern GSnmpEnum const host_resources_mib_enums_hrPrinterStatus[];

#define HOST_RESOURCES_MIB_HRDISKSTORAGEACCESS_READWRITE	1
#define HOST_RESOURCES_MIB_HRDISKSTORAGEACCESS_READONLY	2

extern GSnmpEnum const host_resources_mib_enums_hrDiskStorageAccess[];

#define HOST_RESOURCES_MIB_HRDISKSTORAGEMEDIA_OTHER	1
#define HOST_RESOURCES_MIB_HRDISKSTORAGEMEDIA_UNKNOWN	2
#define HOST_RESOURCES_MIB_HRDISKSTORAGEMEDIA_HARDDISK	3
#define HOST_RESOURCES_MIB_HRDISKSTORAGEMEDIA_FLOPPYDISK	4
#define HOST_RESOURCES_MIB_HRDISKSTORAGEMEDIA_OPTICALDISKROM	5
#define HOST_RESOURCES_MIB_HRDISKSTORAGEMEDIA_OPTICALDISKWORM	6
#define HOST_RESOURCES_MIB_HRDISKSTORAGEMEDIA_OPTICALDISKRW	7
#define HOST_RESOURCES_MIB_HRDISKSTORAGEMEDIA_RAMDISK	8

extern GSnmpEnum const host_resources_mib_enums_hrDiskStorageMedia[];

#define HOST_RESOURCES_MIB_HRDISKSTORAGEREMOVEBLE_TRUE	1
#define HOST_RESOURCES_MIB_HRDISKSTORAGEREMOVEBLE_FALSE	2

extern GSnmpEnum const host_resources_mib_enums_hrDiskStorageRemoveble[];

#define HOST_RESOURCES_MIB_HRFSACCESS_READWRITE	1
#define HOST_RESOURCES_MIB_HRFSACCESS_READONLY	2

extern GSnmpEnum const host_resources_mib_enums_hrFSAccess[];

#define HOST_RESOURCES_MIB_HRFSBOOTABLE_TRUE	1
#define HOST_RESOURCES_MIB_HRFSBOOTABLE_FALSE	2

extern GSnmpEnum const host_resources_mib_enums_hrFSBootable[];

#define HOST_RESOURCES_MIB_HRSWRUNTYPE_UNKNOWN	1
#define HOST_RESOURCES_MIB_HRSWRUNTYPE_OPERATINGSYSTEM	2
#define HOST_RESOURCES_MIB_HRSWRUNTYPE_DEVICEDRIVER	3
#define HOST_RESOURCES_MIB_HRSWRUNTYPE_APPLICATION	4

extern GSnmpEnum const host_resources_mib_enums_hrSWRunType[];

#define HOST_RESOURCES_MIB_HRSWRUNSTATUS_RUNNING	1
#define HOST_RESOURCES_MIB_HRSWRUNSTATUS_RUNNABLE	2
#define HOST_RESOURCES_MIB_HRSWRUNSTATUS_NOTRUNNABLE	3
#define HOST_RESOURCES_MIB_HRSWRUNSTATUS_INVALID	4

extern GSnmpEnum const host_resources_mib_enums_hrSWRunStatus[];

#define HOST_RESOURCES_MIB_HRSWINSTALLEDTYPE_UNKNOWN	1
#define HOST_RESOURCES_MIB_HRSWINSTALLEDTYPE_OPERATINGSYSTEM	2
#define HOST_RESOURCES_MIB_HRSWINSTALLEDTYPE_DEVICEDRIVER	3
#define HOST_RESOURCES_MIB_HRSWINSTALLEDTYPE_APPLICATION	4

extern GSnmpEnum const host_resources_mib_enums_hrSWInstalledType[];


/*
 * C type definitions for HOST-RESOURCES-MIB::hrSystem.
 */

#define HOST_RESOURCES_MIB_HRSYSTEMUPTIME	0x1 
#define HOST_RESOURCES_MIB_HRSYSTEMDATE	0x2 
#define HOST_RESOURCES_MIB_HRSYSTEMINITIALLOADDEVICE	0x4 
#define HOST_RESOURCES_MIB_HRSYSTEMINITIALLOADPARAMETERS	0x8 
#define HOST_RESOURCES_MIB_HRSYSTEMNUMUSERS	0x10 
#define HOST_RESOURCES_MIB_HRSYSTEMPROCESSES	0x20 
#define HOST_RESOURCES_MIB_HRSYSTEMMAXPROCESSES	0x40 

typedef struct {
    guint32  *hrSystemUptime;
    guchar   *hrSystemDate;
    guint16  _hrSystemDateLength;	/* (8..11) */
    gint32   *hrSystemInitialLoadDevice;
    guchar   *hrSystemInitialLoadParameters;
    guint16  _hrSystemInitialLoadParametersLength;	/* (0..128) */
    guint32  *hrSystemNumUsers;
    guint32  *hrSystemProcesses;
    gint32   *hrSystemMaxProcesses;
} host_resources_mib_hrSystem_t;

extern host_resources_mib_hrSystem_t *
host_resources_mib_new_hrSystem(void);

extern void
host_resources_mib_get_hrSystem(GSnmpSession *s, host_resources_mib_hrSystem_t **hrSystem, gint mask);

extern void
host_resources_mib_set_hrSystem(GSnmpSession *s, host_resources_mib_hrSystem_t *hrSystem, gint mask);

extern void
host_resources_mib_free_hrSystem(host_resources_mib_hrSystem_t *hrSystem);

/*
 * C type definitions for HOST-RESOURCES-MIB::hrStorage.
 */

#define HOST_RESOURCES_MIB_HRMEMORYSIZE	0x1 

typedef struct {
    gint32   *hrMemorySize;
} host_resources_mib_hrStorage_t;

extern host_resources_mib_hrStorage_t *
host_resources_mib_new_hrStorage(void);

extern void
host_resources_mib_get_hrStorage(GSnmpSession *s, host_resources_mib_hrStorage_t **hrStorage, gint mask);

extern void
host_resources_mib_free_hrStorage(host_resources_mib_hrStorage_t *hrStorage);

/*
 * C type definitions for HOST-RESOURCES-MIB::hrStorageEntry.
 */

#define HOST_RESOURCES_MIB_HRSTORAGEINDEX	0x1 
#define HOST_RESOURCES_MIB_HRSTORAGETYPE	0x2 
#define HOST_RESOURCES_MIB_HRSTORAGEDESCR	0x4 
#define HOST_RESOURCES_MIB_HRSTORAGEALLOCATIONUNITS	0x8 
#define HOST_RESOURCES_MIB_HRSTORAGESIZE	0x10 
#define HOST_RESOURCES_MIB_HRSTORAGEUSED	0x20 
#define HOST_RESOURCES_MIB_HRSTORAGEALLOCATIONFAILURES	0x40 

typedef struct {
    gint32   hrStorageIndex;
    guint32  *hrStorageType;
    guint16  _hrStorageTypeLength;	/* (0..128) */
    guchar   *hrStorageDescr;
    guint16  _hrStorageDescrLength;	/* (0..255) */
    gint32   *hrStorageAllocationUnits;
    gint32   *hrStorageSize;
    gint32   *hrStorageUsed;
    guint32  *hrStorageAllocationFailures;
} host_resources_mib_hrStorageEntry_t;

extern void
host_resources_mib_get_hrStorageTable(GSnmpSession *s, host_resources_mib_hrStorageEntry_t ***hrStorageEntry, gint mask);

extern void
host_resources_mib_free_hrStorageTable(host_resources_mib_hrStorageEntry_t **hrStorageEntry);

extern host_resources_mib_hrStorageEntry_t *
host_resources_mib_new_hrStorageEntry(void);

extern void
host_resources_mib_get_hrStorageEntry(GSnmpSession *s, host_resources_mib_hrStorageEntry_t **hrStorageEntry, gint32 hrStorageIndex, gint mask);

extern void
host_resources_mib_set_hrStorageEntry(GSnmpSession *s, host_resources_mib_hrStorageEntry_t *hrStorageEntry, gint mask);

extern void
host_resources_mib_free_hrStorageEntry(host_resources_mib_hrStorageEntry_t *hrStorageEntry);

/*
 * C type definitions for HOST-RESOURCES-MIB::hrDeviceEntry.
 */

#define HOST_RESOURCES_MIB_HRDEVICEINDEX	0x1 
#define HOST_RESOURCES_MIB_HRDEVICETYPE	0x2 
#define HOST_RESOURCES_MIB_HRDEVICEDESCR	0x4 
#define HOST_RESOURCES_MIB_HRDEVICEID	0x8 
#define HOST_RESOURCES_MIB_HRDEVICESTATUS	0x10 
#define HOST_RESOURCES_MIB_HRDEVICEERRORS	0x20 

typedef struct {
    gint32   hrDeviceIndex;
    guint32  *hrDeviceType;
    guint16  _hrDeviceTypeLength;	/* (0..128) */
    guchar   *hrDeviceDescr;
    guint16  _hrDeviceDescrLength;	/* (0..64) */
    guint32  *hrDeviceID;
    guint16  _hrDeviceIDLength;	/* (0..128) */
    gint32   *hrDeviceStatus;
    guint32  *hrDeviceErrors;
} host_resources_mib_hrDeviceEntry_t;

extern void
host_resources_mib_get_hrDeviceTable(GSnmpSession *s, host_resources_mib_hrDeviceEntry_t ***hrDeviceEntry, gint mask);

extern void
host_resources_mib_free_hrDeviceTable(host_resources_mib_hrDeviceEntry_t **hrDeviceEntry);

extern host_resources_mib_hrDeviceEntry_t *
host_resources_mib_new_hrDeviceEntry(void);

extern void
host_resources_mib_get_hrDeviceEntry(GSnmpSession *s, host_resources_mib_hrDeviceEntry_t **hrDeviceEntry, gint32 hrDeviceIndex, gint mask);

extern void
host_resources_mib_free_hrDeviceEntry(host_resources_mib_hrDeviceEntry_t *hrDeviceEntry);

/*
 * C type definitions for HOST-RESOURCES-MIB::hrProcessorEntry.
 */

#define HOST_RESOURCES_MIB_HRPROCESSORFRWID	0x1 
#define HOST_RESOURCES_MIB_HRPROCESSORLOAD	0x2 

typedef struct {
    gint32   hrDeviceIndex;
    guint32  *hrProcessorFrwID;
    guint16  _hrProcessorFrwIDLength;	/* (0..128) */
    gint32   *hrProcessorLoad;
} host_resources_mib_hrProcessorEntry_t;

extern void
host_resources_mib_get_hrProcessorTable(GSnmpSession *s, host_resources_mib_hrProcessorEntry_t ***hrProcessorEntry, gint mask);

extern void
host_resources_mib_free_hrProcessorTable(host_resources_mib_hrProcessorEntry_t **hrProcessorEntry);

extern host_resources_mib_hrProcessorEntry_t *
host_resources_mib_new_hrProcessorEntry(void);

extern void
host_resources_mib_get_hrProcessorEntry(GSnmpSession *s, host_resources_mib_hrProcessorEntry_t **hrProcessorEntry, gint32 hrDeviceIndex, gint mask);

extern void
host_resources_mib_free_hrProcessorEntry(host_resources_mib_hrProcessorEntry_t *hrProcessorEntry);

/*
 * C type definitions for HOST-RESOURCES-MIB::hrNetworkEntry.
 */

#define HOST_RESOURCES_MIB_HRNETWORKIFINDEX	0x1 

typedef struct {
    gint32   hrDeviceIndex;
    gint32   *hrNetworkIfIndex;
} host_resources_mib_hrNetworkEntry_t;

extern void
host_resources_mib_get_hrNetworkTable(GSnmpSession *s, host_resources_mib_hrNetworkEntry_t ***hrNetworkEntry, gint mask);

extern void
host_resources_mib_free_hrNetworkTable(host_resources_mib_hrNetworkEntry_t **hrNetworkEntry);

extern host_resources_mib_hrNetworkEntry_t *
host_resources_mib_new_hrNetworkEntry(void);

extern void
host_resources_mib_get_hrNetworkEntry(GSnmpSession *s, host_resources_mib_hrNetworkEntry_t **hrNetworkEntry, gint32 hrDeviceIndex, gint mask);

extern void
host_resources_mib_free_hrNetworkEntry(host_resources_mib_hrNetworkEntry_t *hrNetworkEntry);

/*
 * C type definitions for HOST-RESOURCES-MIB::hrPrinterEntry.
 */

#define HOST_RESOURCES_MIB_HRPRINTERSTATUS	0x1 
#define HOST_RESOURCES_MIB_HRPRINTERDETECTEDERRORSTATE	0x2 

typedef struct {
    gint32   hrDeviceIndex;
    gint32   *hrPrinterStatus;
    guchar   *hrPrinterDetectedErrorState;
    guint16  _hrPrinterDetectedErrorStateLength;	/* (0..65535) */
} host_resources_mib_hrPrinterEntry_t;

extern void
host_resources_mib_get_hrPrinterTable(GSnmpSession *s, host_resources_mib_hrPrinterEntry_t ***hrPrinterEntry, gint mask);

extern void
host_resources_mib_free_hrPrinterTable(host_resources_mib_hrPrinterEntry_t **hrPrinterEntry);

extern host_resources_mib_hrPrinterEntry_t *
host_resources_mib_new_hrPrinterEntry(void);

extern void
host_resources_mib_get_hrPrinterEntry(GSnmpSession *s, host_resources_mib_hrPrinterEntry_t **hrPrinterEntry, gint32 hrDeviceIndex, gint mask);

extern void
host_resources_mib_free_hrPrinterEntry(host_resources_mib_hrPrinterEntry_t *hrPrinterEntry);

/*
 * C type definitions for HOST-RESOURCES-MIB::hrDiskStorageEntry.
 */

#define HOST_RESOURCES_MIB_HRDISKSTORAGEACCESS	0x1 
#define HOST_RESOURCES_MIB_HRDISKSTORAGEMEDIA	0x2 
#define HOST_RESOURCES_MIB_HRDISKSTORAGEREMOVEBLE	0x4 
#define HOST_RESOURCES_MIB_HRDISKSTORAGECAPACITY	0x8 

typedef struct {
    gint32   hrDeviceIndex;
    gint32   *hrDiskStorageAccess;
    gint32   *hrDiskStorageMedia;
    gint32   *hrDiskStorageRemoveble;
    gint32   *hrDiskStorageCapacity;
} host_resources_mib_hrDiskStorageEntry_t;

extern void
host_resources_mib_get_hrDiskStorageTable(GSnmpSession *s, host_resources_mib_hrDiskStorageEntry_t ***hrDiskStorageEntry, gint mask);

extern void
host_resources_mib_free_hrDiskStorageTable(host_resources_mib_hrDiskStorageEntry_t **hrDiskStorageEntry);

extern host_resources_mib_hrDiskStorageEntry_t *
host_resources_mib_new_hrDiskStorageEntry(void);

extern void
host_resources_mib_get_hrDiskStorageEntry(GSnmpSession *s, host_resources_mib_hrDiskStorageEntry_t **hrDiskStorageEntry, gint32 hrDeviceIndex, gint mask);

extern void
host_resources_mib_free_hrDiskStorageEntry(host_resources_mib_hrDiskStorageEntry_t *hrDiskStorageEntry);

/*
 * C type definitions for HOST-RESOURCES-MIB::hrPartitionEntry.
 */

#define HOST_RESOURCES_MIB_HRPARTITIONINDEX	0x1 
#define HOST_RESOURCES_MIB_HRPARTITIONLABEL	0x2 
#define HOST_RESOURCES_MIB_HRPARTITIONID	0x4 
#define HOST_RESOURCES_MIB_HRPARTITIONSIZE	0x8 
#define HOST_RESOURCES_MIB_HRPARTITIONFSINDEX	0x10 

typedef struct {
    gint32   hrDeviceIndex;
    gint32   hrPartitionIndex;
    guchar   *hrPartitionLabel;
    guint16  _hrPartitionLabelLength;	/* (0..128) */
    guchar   *hrPartitionID;
    guint16  _hrPartitionIDLength;	/* (0..65535) */
    gint32   *hrPartitionSize;
    gint32   *hrPartitionFSIndex;
} host_resources_mib_hrPartitionEntry_t;

extern void
host_resources_mib_get_hrPartitionTable(GSnmpSession *s, host_resources_mib_hrPartitionEntry_t ***hrPartitionEntry, gint mask);

extern void
host_resources_mib_free_hrPartitionTable(host_resources_mib_hrPartitionEntry_t **hrPartitionEntry);

extern host_resources_mib_hrPartitionEntry_t *
host_resources_mib_new_hrPartitionEntry(void);

extern void
host_resources_mib_get_hrPartitionEntry(GSnmpSession *s, host_resources_mib_hrPartitionEntry_t **hrPartitionEntry, gint32 hrDeviceIndex, gint32 hrPartitionIndex, gint mask);

extern void
host_resources_mib_free_hrPartitionEntry(host_resources_mib_hrPartitionEntry_t *hrPartitionEntry);

/*
 * C type definitions for HOST-RESOURCES-MIB::hrFSEntry.
 */

#define HOST_RESOURCES_MIB_HRFSINDEX	0x1 
#define HOST_RESOURCES_MIB_HRFSMOUNTPOINT	0x2 
#define HOST_RESOURCES_MIB_HRFSREMOTEMOUNTPOINT	0x4 
#define HOST_RESOURCES_MIB_HRFSTYPE	0x8 
#define HOST_RESOURCES_MIB_HRFSACCESS	0x10 
#define HOST_RESOURCES_MIB_HRFSBOOTABLE	0x20 
#define HOST_RESOURCES_MIB_HRFSSTORAGEINDEX	0x40 
#define HOST_RESOURCES_MIB_HRFSLASTFULLBACKUPDATE	0x80 
#define HOST_RESOURCES_MIB_HRFSLASTPARTIALBACKUPDATE	0x100 

typedef struct {
    gint32   hrFSIndex;
    guchar   *hrFSMountPoint;
    guint16  _hrFSMountPointLength;	/* (0..128) */
    guchar   *hrFSRemoteMountPoint;
    guint16  _hrFSRemoteMountPointLength;	/* (0..128) */
    guint32  *hrFSType;
    guint16  _hrFSTypeLength;	/* (0..128) */
    gint32   *hrFSAccess;
    gint32   *hrFSBootable;
    gint32   *hrFSStorageIndex;
    guchar   *hrFSLastFullBackupDate;
    guint16  _hrFSLastFullBackupDateLength;	/* (8..11) */
    guchar   *hrFSLastPartialBackupDate;
    guint16  _hrFSLastPartialBackupDateLength;	/* (8..11) */
} host_resources_mib_hrFSEntry_t;

extern void
host_resources_mib_get_hrFSTable(GSnmpSession *s, host_resources_mib_hrFSEntry_t ***hrFSEntry, gint mask);

extern void
host_resources_mib_free_hrFSTable(host_resources_mib_hrFSEntry_t **hrFSEntry);

extern host_resources_mib_hrFSEntry_t *
host_resources_mib_new_hrFSEntry(void);

extern void
host_resources_mib_get_hrFSEntry(GSnmpSession *s, host_resources_mib_hrFSEntry_t **hrFSEntry, gint32 hrFSIndex, gint mask);

extern void
host_resources_mib_set_hrFSEntry(GSnmpSession *s, host_resources_mib_hrFSEntry_t *hrFSEntry, gint mask);

extern void
host_resources_mib_free_hrFSEntry(host_resources_mib_hrFSEntry_t *hrFSEntry);

/*
 * C type definitions for HOST-RESOURCES-MIB::hrSWRun.
 */

#define HOST_RESOURCES_MIB_HRSWOSINDEX	0x1 

typedef struct {
    gint32   *hrSWOSIndex;
} host_resources_mib_hrSWRun_t;

extern host_resources_mib_hrSWRun_t *
host_resources_mib_new_hrSWRun(void);

extern void
host_resources_mib_get_hrSWRun(GSnmpSession *s, host_resources_mib_hrSWRun_t **hrSWRun, gint mask);

extern void
host_resources_mib_free_hrSWRun(host_resources_mib_hrSWRun_t *hrSWRun);

/*
 * C type definitions for HOST-RESOURCES-MIB::hrSWRunEntry.
 */

#define HOST_RESOURCES_MIB_HRSWRUNINDEX	0x1 
#define HOST_RESOURCES_MIB_HRSWRUNNAME	0x2 
#define HOST_RESOURCES_MIB_HRSWRUNID	0x4 
#define HOST_RESOURCES_MIB_HRSWRUNPATH	0x8 
#define HOST_RESOURCES_MIB_HRSWRUNPARAMETERS	0x10 
#define HOST_RESOURCES_MIB_HRSWRUNTYPE	0x20 
#define HOST_RESOURCES_MIB_HRSWRUNSTATUS	0x40 

typedef struct {
    gint32   hrSWRunIndex;
    guchar   *hrSWRunName;
    guint16  _hrSWRunNameLength;	/* (0..64) */
    guint32  *hrSWRunID;
    guint16  _hrSWRunIDLength;	/* (0..128) */
    guchar   *hrSWRunPath;
    guint16  _hrSWRunPathLength;	/* (0..128) */
    guchar   *hrSWRunParameters;
    guint16  _hrSWRunParametersLength;	/* (0..128) */
    gint32   *hrSWRunType;
    gint32   *hrSWRunStatus;
} host_resources_mib_hrSWRunEntry_t;

extern void
host_resources_mib_get_hrSWRunTable(GSnmpSession *s, host_resources_mib_hrSWRunEntry_t ***hrSWRunEntry, gint mask);

extern void
host_resources_mib_free_hrSWRunTable(host_resources_mib_hrSWRunEntry_t **hrSWRunEntry);

extern host_resources_mib_hrSWRunEntry_t *
host_resources_mib_new_hrSWRunEntry(void);

extern void
host_resources_mib_get_hrSWRunEntry(GSnmpSession *s, host_resources_mib_hrSWRunEntry_t **hrSWRunEntry, gint32 hrSWRunIndex, gint mask);

extern void
host_resources_mib_set_hrSWRunEntry(GSnmpSession *s, host_resources_mib_hrSWRunEntry_t *hrSWRunEntry, gint mask);

extern void
host_resources_mib_free_hrSWRunEntry(host_resources_mib_hrSWRunEntry_t *hrSWRunEntry);

/*
 * C type definitions for HOST-RESOURCES-MIB::hrSWRunPerfEntry.
 */

#define HOST_RESOURCES_MIB_HRSWRUNPERFCPU	0x1 
#define HOST_RESOURCES_MIB_HRSWRUNPERFMEM	0x2 

typedef struct {
    gint32   hrSWRunIndex;
    gint32   *hrSWRunPerfCPU;
    gint32   *hrSWRunPerfMem;
} host_resources_mib_hrSWRunPerfEntry_t;

extern void
host_resources_mib_get_hrSWRunPerfTable(GSnmpSession *s, host_resources_mib_hrSWRunPerfEntry_t ***hrSWRunPerfEntry, gint mask);

extern void
host_resources_mib_free_hrSWRunPerfTable(host_resources_mib_hrSWRunPerfEntry_t **hrSWRunPerfEntry);

extern host_resources_mib_hrSWRunPerfEntry_t *
host_resources_mib_new_hrSWRunPerfEntry(void);

extern void
host_resources_mib_get_hrSWRunPerfEntry(GSnmpSession *s, host_resources_mib_hrSWRunPerfEntry_t **hrSWRunPerfEntry, gint32 hrSWRunIndex, gint mask);

extern void
host_resources_mib_free_hrSWRunPerfEntry(host_resources_mib_hrSWRunPerfEntry_t *hrSWRunPerfEntry);

/*
 * C type definitions for HOST-RESOURCES-MIB::hrSWInstalled.
 */

#define HOST_RESOURCES_MIB_HRSWINSTALLEDLASTCHANGE	0x1 
#define HOST_RESOURCES_MIB_HRSWINSTALLEDLASTUPDATETIME	0x2 

typedef struct {
    guint32  *hrSWInstalledLastChange;
    guint32  *hrSWInstalledLastUpdateTime;
} host_resources_mib_hrSWInstalled_t;

extern host_resources_mib_hrSWInstalled_t *
host_resources_mib_new_hrSWInstalled(void);

extern void
host_resources_mib_get_hrSWInstalled(GSnmpSession *s, host_resources_mib_hrSWInstalled_t **hrSWInstalled, gint mask);

extern void
host_resources_mib_free_hrSWInstalled(host_resources_mib_hrSWInstalled_t *hrSWInstalled);

/*
 * C type definitions for HOST-RESOURCES-MIB::hrSWInstalledEntry.
 */

#define HOST_RESOURCES_MIB_HRSWINSTALLEDINDEX	0x1 
#define HOST_RESOURCES_MIB_HRSWINSTALLEDNAME	0x2 
#define HOST_RESOURCES_MIB_HRSWINSTALLEDID	0x4 
#define HOST_RESOURCES_MIB_HRSWINSTALLEDTYPE	0x8 
#define HOST_RESOURCES_MIB_HRSWINSTALLEDDATE	0x10 

typedef struct {
    gint32   hrSWInstalledIndex;
    guchar   *hrSWInstalledName;
    guint16  _hrSWInstalledNameLength;	/* (0..64) */
    guint32  *hrSWInstalledID;
    guint16  _hrSWInstalledIDLength;	/* (0..128) */
    gint32   *hrSWInstalledType;
    guchar   *hrSWInstalledDate;
    guint16  _hrSWInstalledDateLength;	/* (8..11) */
} host_resources_mib_hrSWInstalledEntry_t;

extern void
host_resources_mib_get_hrSWInstalledTable(GSnmpSession *s, host_resources_mib_hrSWInstalledEntry_t ***hrSWInstalledEntry, gint mask);

extern void
host_resources_mib_free_hrSWInstalledTable(host_resources_mib_hrSWInstalledEntry_t **hrSWInstalledEntry);

extern host_resources_mib_hrSWInstalledEntry_t *
host_resources_mib_new_hrSWInstalledEntry(void);

extern void
host_resources_mib_get_hrSWInstalledEntry(GSnmpSession *s, host_resources_mib_hrSWInstalledEntry_t **hrSWInstalledEntry, gint32 hrSWInstalledIndex, gint mask);

extern void
host_resources_mib_free_hrSWInstalledEntry(host_resources_mib_hrSWInstalledEntry_t *hrSWInstalledEntry);


#endif /* _HOST_RESOURCES_MIB_H_ */
