/*							-- DO NOT EDIT --
 * Generated by smidump version 0.4.3-pre1:
 *   smidump -f scli \
 *     --scli-include='ospfGeneralGroup|ospfAreaEntry|ospfIfEntry' OSPF-MIB
 *
 * Derived from OSPF-MIB:
 *   The MIB module to describe the OSPF Version 2
 *   Protocol
 *
 * Revision 1995-01-20 12:25:
 *   [Revision added by libsmi due to a LAST-UPDATED clause.]
 *
 * $Id$
 */

#ifndef _OSPF_MIB_H_
#define _OSPF_MIB_H_

#include "gsnmp.h"

G_BEGIN_DECLS

/*
 * Tables to map enumerations to strings and vice versa.
 */

#define OSPF_MIB_OSPFVERSIONNUMBER_VERSION2 2

extern GNetSnmpEnum const ospf_mib_enums_ospfVersionNumber[];

#define OSPF_MIB_OSPFIMPORTASEXTERN_IMPORTEXTERNAL   1
#define OSPF_MIB_OSPFIMPORTASEXTERN_IMPORTNOEXTERNAL 2
#define OSPF_MIB_OSPFIMPORTASEXTERN_IMPORTNSSA       3

extern GNetSnmpEnum const ospf_mib_enums_ospfImportAsExtern[];

#define OSPF_MIB_OSPFAREASUMMARY_NOAREASUMMARY   1
#define OSPF_MIB_OSPFAREASUMMARY_SENDAREASUMMARY 2

extern GNetSnmpEnum const ospf_mib_enums_ospfAreaSummary[];

#define OSPF_MIB_OSPFIFTYPE_BROADCAST         1
#define OSPF_MIB_OSPFIFTYPE_NBMA              2
#define OSPF_MIB_OSPFIFTYPE_POINTTOPOINT      3
#define OSPF_MIB_OSPFIFTYPE_POINTTOMULTIPOINT 5

extern GNetSnmpEnum const ospf_mib_enums_ospfIfType[];

#define OSPF_MIB_OSPFIFSTATE_DOWN                   1
#define OSPF_MIB_OSPFIFSTATE_LOOPBACK               2
#define OSPF_MIB_OSPFIFSTATE_WAITING                3
#define OSPF_MIB_OSPFIFSTATE_POINTTOPOINT           4
#define OSPF_MIB_OSPFIFSTATE_DESIGNATEDROUTER       5
#define OSPF_MIB_OSPFIFSTATE_BACKUPDESIGNATEDROUTER 6
#define OSPF_MIB_OSPFIFSTATE_OTHERDESIGNATEDROUTER  7

extern GNetSnmpEnum const ospf_mib_enums_ospfIfState[];

#define OSPF_MIB_OSPFIFMULTICASTFORWARDING_BLOCKED   1
#define OSPF_MIB_OSPFIFMULTICASTFORWARDING_MULTICAST 2
#define OSPF_MIB_OSPFIFMULTICASTFORWARDING_UNICAST   3

extern GNetSnmpEnum const ospf_mib_enums_ospfIfMulticastForwarding[];

#define OSPF_MIB_STATUS_ENABLED  1
#define OSPF_MIB_STATUS_DISABLED 2

extern GNetSnmpEnum const ospf_mib_enums_Status[];


/*
 * C type definitions for OSPF-MIB::ospfGeneralGroup.
 */

#define OSPF_MIB_OSPFROUTERID             (1 << 0) 
#define OSPF_MIB_OSPFADMINSTAT            (1 << 1) 
#define OSPF_MIB_OSPFVERSIONNUMBER        (1 << 2) 
#define OSPF_MIB_OSPFAREABDRRTRSTATUS     (1 << 3) 
#define OSPF_MIB_OSPFASBDRRTRSTATUS       (1 << 4) 
#define OSPF_MIB_OSPFEXTERNLSACOUNT       (1 << 5) 
#define OSPF_MIB_OSPFEXTERNLSACKSUMSUM    (1 << 6) 
#define OSPF_MIB_OSPFTOSSUPPORT           (1 << 7) 
#define OSPF_MIB_OSPFORIGINATENEWLSAS     (1 << 8) 
#define OSPF_MIB_OSPFRXNEWLSAS            (1 << 9) 
#define OSPF_MIB_OSPFEXTLSDBLIMIT         (1 << 10) 
#define OSPF_MIB_OSPFMULTICASTEXTENSIONS  (1 << 11) 
#define OSPF_MIB_OSPFEXITOVERFLOWINTERVAL (1 << 12) 
#define OSPF_MIB_OSPFDEMANDEXTENSIONS     (1 << 13) 

typedef struct {
    guchar   *ospfRouterId;                 /* rw OSPF-MIB::RouterID */
#define OSPF_MIB_OSPFROUTERIDLENGTH 4
    gint32   *ospfAdminStat;                /* rw OSPF-MIB::Status */
    gint32   *ospfVersionNumber;            /* ro */
    gint32   *ospfAreaBdrRtrStatus;         /* ro SNMPv2-TC::TruthValue */
    gint32   *ospfASBdrRtrStatus;           /* rw SNMPv2-TC::TruthValue */
    guint32  *ospfExternLsaCount;           /* ro SNMPv2-SMI::Gauge32 */
    gint32   *ospfExternLsaCksumSum;        /* ro Integer32 */
    gint32   *ospfTOSSupport;               /* rw SNMPv2-TC::TruthValue */
    guint32  *ospfOriginateNewLsas;         /* ro SNMPv2-SMI::Counter32 */
    guint32  *ospfRxNewLsas;                /* ro SNMPv2-SMI::Counter32 */
    gint32   *ospfExtLsdbLimit;             /* rw */
    gint32   *ospfMulticastExtensions;      /* rw Integer32 */
    gint32   *ospfExitOverflowInterval;     /* rw OSPF-MIB::PositiveInteger */
    gint32   *ospfDemandExtensions;         /* rw SNMPv2-TC::TruthValue */
} ospf_mib_ospfGeneralGroup_t;

extern ospf_mib_ospfGeneralGroup_t *
ospf_mib_new_ospfGeneralGroup(void);

extern void
ospf_mib_get_ospfGeneralGroup(GNetSnmp *s, ospf_mib_ospfGeneralGroup_t **ospfGeneralGroup, gint64 mask);

extern void
ospf_mib_set_ospfGeneralGroup(GNetSnmp *s, ospf_mib_ospfGeneralGroup_t *ospfGeneralGroup, gint64 mask);

extern void
ospf_mib_free_ospfGeneralGroup(ospf_mib_ospfGeneralGroup_t *ospfGeneralGroup);

/*
 * C type definitions for OSPF-MIB::ospfAreaEntry.
 */

#define OSPF_MIB_OSPFAREAID          (1 << 0) 
#define OSPF_MIB_OSPFAUTHTYPE        (1 << 1) 
#define OSPF_MIB_OSPFIMPORTASEXTERN  (1 << 2) 
#define OSPF_MIB_OSPFSPFRUNS         (1 << 3) 
#define OSPF_MIB_OSPFAREABDRRTRCOUNT (1 << 4) 
#define OSPF_MIB_OSPFASBDRRTRCOUNT   (1 << 5) 
#define OSPF_MIB_OSPFAREALSACOUNT    (1 << 6) 
#define OSPF_MIB_OSPFAREALSACKSUMSUM (1 << 7) 
#define OSPF_MIB_OSPFAREASUMMARY     (1 << 8) 
#define OSPF_MIB_OSPFAREASTATUS      (1 << 9) 

typedef struct {
    guchar   ospfAreaId[4];           /* ro OSPF-MIB::AreaID */
#define OSPF_MIB_OSPFAREAIDLENGTH 4
    gint32   *ospfAuthType;            /* rw Integer32 */
    gint32   *ospfImportAsExtern;      /* rw */
    guint32  *ospfSpfRuns;             /* ro SNMPv2-SMI::Counter32 */
    guint32  *ospfAreaBdrRtrCount;     /* ro SNMPv2-SMI::Gauge32 */
    guint32  *ospfAsBdrRtrCount;       /* ro SNMPv2-SMI::Gauge32 */
    guint32  *ospfAreaLsaCount;        /* ro SNMPv2-SMI::Gauge32 */
    gint32   *ospfAreaLsaCksumSum;     /* ro Integer32 */
    gint32   *ospfAreaSummary;         /* rw */
    gint32   *ospfAreaStatus;          /* rw SNMPv2-TC::RowStatus */
} ospf_mib_ospfAreaEntry_t;

extern void
ospf_mib_get_ospfAreaTable(GNetSnmp *s, ospf_mib_ospfAreaEntry_t ***ospfAreaEntry, gint64 mask);

extern void
ospf_mib_free_ospfAreaTable(ospf_mib_ospfAreaEntry_t **ospfAreaEntry);

extern ospf_mib_ospfAreaEntry_t *
ospf_mib_new_ospfAreaEntry(void);

extern void
ospf_mib_get_ospfAreaEntry(GNetSnmp *s, ospf_mib_ospfAreaEntry_t **ospfAreaEntry, guchar *ospfAreaId, gint64 mask);

extern void
ospf_mib_set_ospfAreaEntry(GNetSnmp *s, ospf_mib_ospfAreaEntry_t *ospfAreaEntry, gint64 mask);

extern void
ospf_mib_free_ospfAreaEntry(ospf_mib_ospfAreaEntry_t *ospfAreaEntry);

/*
 * C type definitions for OSPF-MIB::ospfIfEntry.
 */

#define OSPF_MIB_OSPFIFIPADDRESS              (1 << 0) 
#define OSPF_MIB_OSPFADDRESSLESSIF            (1 << 1) 
#define OSPF_MIB_OSPFIFAREAID                 (1 << 2) 
#define OSPF_MIB_OSPFIFTYPE                   (1 << 3) 
#define OSPF_MIB_OSPFIFADMINSTAT              (1 << 4) 
#define OSPF_MIB_OSPFIFRTRPRIORITY            (1 << 5) 
#define OSPF_MIB_OSPFIFTRANSITDELAY           (1 << 6) 
#define OSPF_MIB_OSPFIFRETRANSINTERVAL        (1 << 7) 
#define OSPF_MIB_OSPFIFHELLOINTERVAL          (1 << 8) 
#define OSPF_MIB_OSPFIFRTRDEADINTERVAL        (1 << 9) 
#define OSPF_MIB_OSPFIFPOLLINTERVAL           (1 << 10) 
#define OSPF_MIB_OSPFIFSTATE                  (1 << 11) 
#define OSPF_MIB_OSPFIFDESIGNATEDROUTER       (1 << 12) 
#define OSPF_MIB_OSPFIFBACKUPDESIGNATEDROUTER (1 << 13) 
#define OSPF_MIB_OSPFIFEVENTS                 (1 << 14) 
#define OSPF_MIB_OSPFIFAUTHKEY                (1 << 15) 
#define OSPF_MIB_OSPFIFSTATUS                 (1 << 16) 
#define OSPF_MIB_OSPFIFMULTICASTFORWARDING    (1 << 17) 
#define OSPF_MIB_OSPFIFDEMAND                 (1 << 18) 
#define OSPF_MIB_OSPFIFAUTHTYPE               (1 << 19) 

typedef struct {
    guchar   ospfIfIpAddress[4];               /* ro SNMPv2-SMI::IpAddress */
#define OSPF_MIB_OSPFIFIPADDRESSLENGTH 4
    gint32   ospfAddressLessIf;                 /* ro Integer32 */
    guchar   *ospfIfAreaId;                     /* rw OSPF-MIB::AreaID */
#define OSPF_MIB_OSPFIFAREAIDLENGTH 4
    gint32   *ospfIfType;                       /* rw */
    gint32   *ospfIfAdminStat;                  /* rw OSPF-MIB::Status */
    gint32   *ospfIfRtrPriority;                /* rw OSPF-MIB::DesignatedRouterPriority */
    gint32   *ospfIfTransitDelay;               /* rw OSPF-MIB::UpToMaxAge */
    gint32   *ospfIfRetransInterval;            /* rw OSPF-MIB::UpToMaxAge */
    gint32   *ospfIfHelloInterval;              /* rw OSPF-MIB::HelloRange */
    gint32   *ospfIfRtrDeadInterval;            /* rw OSPF-MIB::PositiveInteger */
    gint32   *ospfIfPollInterval;               /* rw OSPF-MIB::PositiveInteger */
    gint32   *ospfIfState;                      /* ro */
    guchar   *ospfIfDesignatedRouter;           /* ro SNMPv2-SMI::IpAddress */
#define OSPF_MIB_OSPFIFDESIGNATEDROUTERLENGTH 4
    guchar   *ospfIfBackupDesignatedRouter;     /* ro SNMPv2-SMI::IpAddress */
#define OSPF_MIB_OSPFIFBACKUPDESIGNATEDROUTERLENGTH 4
    guint32  *ospfIfEvents;                     /* ro SNMPv2-SMI::Counter32 */
    guchar   *ospfIfAuthKey;                    /* rw */
#define OSPF_MIB_OSPFIFAUTHKEYMINLENGTH 0
#define OSPF_MIB_OSPFIFAUTHKEYMAXLENGTH 256
    guint16  _ospfIfAuthKeyLength;
    gint32   *ospfIfStatus;                     /* rw SNMPv2-TC::RowStatus */
    gint32   *ospfIfMulticastForwarding;        /* rw */
    gint32   *ospfIfDemand;                     /* rw SNMPv2-TC::TruthValue */
    gint32   *ospfIfAuthType;                   /* rw */
} ospf_mib_ospfIfEntry_t;

extern void
ospf_mib_get_ospfIfTable(GNetSnmp *s, ospf_mib_ospfIfEntry_t ***ospfIfEntry, gint64 mask);

extern void
ospf_mib_free_ospfIfTable(ospf_mib_ospfIfEntry_t **ospfIfEntry);

extern ospf_mib_ospfIfEntry_t *
ospf_mib_new_ospfIfEntry(void);

extern void
ospf_mib_get_ospfIfEntry(GNetSnmp *s, ospf_mib_ospfIfEntry_t **ospfIfEntry, guchar *ospfIfIpAddress, gint32 ospfAddressLessIf, gint64 mask);

extern void
ospf_mib_set_ospfIfEntry(GNetSnmp *s, ospf_mib_ospfIfEntry_t *ospfIfEntry, gint64 mask);

extern void
ospf_mib_free_ospfIfEntry(ospf_mib_ospfIfEntry_t *ospfIfEntry);


G_END_DECLS

#endif /* _OSPF_MIB_H_ */
