/*							-- DO NOT EDIT --
 * Generated by smidump version 0.4.8:
 *   smidump -f scli \
 *     --scli-include='ospfGeneralGroup|ospfAreaEntry|ospfIfEntry|ospfLsdbEntry' OSPF-MIB
 *
 * Derived from OSPF-MIB:
 *   The MIB module to describe the OSPF Version 2
 *   Protocol.  Note that some objects in this MIB
 *   module may pose a significant security risk.
 *   Refer to the Security Considerations section
 *   in RFC 4750 for more information.
 *   
 *   
 *   
 *   Copyright (C) The IETF Trust (2006).
 *   This version of this MIB module is part of
 *   RFC 4750;  see the RFC itself for full legal
 *   notices.
 *
 * Revision 2006-11-10 00:00:
 *   Updated for latest changes to OSPF Version 2:
 *   - updated the General Group with the new
 *     ospfRFC1583Compatibility, ospfReferenceBandwidth
 *     and ospfDiscontinuityTime objects
 *   - added graceful-restart-related objects
 *   - added stub-router-related objects
 *   - updated the Area Table with NSSA-related objects
 *   - added ospfAreaAggregateExtRouteTag object
 *   - added Opaque LSA-related objects
 *   - updates to the Compliances and Security sections
 *   - added area LSA counter table
 *   - added section describing translation of notification
 *     parameters between SNMP versions
 *   - added ospfComplianceObsolete to contain obsolete
 *     object groups
 *   - deprecated ospfExtLsdbTable
 *   See Appendix B of RFC 4750 for more details.
 *   
 *   This version published as part of RFC 4750
 *
 * Revision 1995-01-20 12:25:
 *   The initial SMIv2 revision of this MIB module, published
 *   in RFC 1850.
 *
 * $Id$
 */

#ifndef _OSPF_MIB_H_
#define _OSPF_MIB_H_

#include "gsnmp.h"

G_BEGIN_DECLS

/*
 * Tables to map enumerations to strings and vice versa.
 */

#define OSPF_MIB_OSPFVERSIONNUMBER_VERSION2 2

extern GNetSnmpEnum const ospf_mib_enums_ospfVersionNumber[];

#define OSPF_MIB_OSPFRESTARTSUPPORT_NONE                1
#define OSPF_MIB_OSPFRESTARTSUPPORT_PLANNEDONLY         2
#define OSPF_MIB_OSPFRESTARTSUPPORT_PLANNEDANDUNPLANNED 3

extern GNetSnmpEnum const ospf_mib_enums_ospfRestartSupport[];

#define OSPF_MIB_OSPFRESTARTSTATUS_NOTRESTARTING    1
#define OSPF_MIB_OSPFRESTARTSTATUS_PLANNEDRESTART   2
#define OSPF_MIB_OSPFRESTARTSTATUS_UNPLANNEDRESTART 3

extern GNetSnmpEnum const ospf_mib_enums_ospfRestartStatus[];

#define OSPF_MIB_OSPFRESTARTEXITREASON_NONE            1
#define OSPF_MIB_OSPFRESTARTEXITREASON_INPROGRESS      2
#define OSPF_MIB_OSPFRESTARTEXITREASON_COMPLETED       3
#define OSPF_MIB_OSPFRESTARTEXITREASON_TIMEDOUT        4
#define OSPF_MIB_OSPFRESTARTEXITREASON_TOPOLOGYCHANGED 5

extern GNetSnmpEnum const ospf_mib_enums_ospfRestartExitReason[];

#define OSPF_MIB_OSPFSTUBROUTERADVERTISEMENT_DONOTADVERTISE 1
#define OSPF_MIB_OSPFSTUBROUTERADVERTISEMENT_ADVERTISE      2

extern GNetSnmpEnum const ospf_mib_enums_ospfStubRouterAdvertisement[];

#define OSPF_MIB_OSPFIMPORTASEXTERN_IMPORTEXTERNAL   1
#define OSPF_MIB_OSPFIMPORTASEXTERN_IMPORTNOEXTERNAL 2
#define OSPF_MIB_OSPFIMPORTASEXTERN_IMPORTNSSA       3

extern GNetSnmpEnum const ospf_mib_enums_ospfImportAsExtern[];

#define OSPF_MIB_OSPFAREASUMMARY_NOAREASUMMARY   1
#define OSPF_MIB_OSPFAREASUMMARY_SENDAREASUMMARY 2

extern GNetSnmpEnum const ospf_mib_enums_ospfAreaSummary[];

#define OSPF_MIB_OSPFAREANSSATRANSLATORROLE_ALWAYS    1
#define OSPF_MIB_OSPFAREANSSATRANSLATORROLE_CANDIDATE 2

extern GNetSnmpEnum const ospf_mib_enums_ospfAreaNssaTranslatorRole[];

#define OSPF_MIB_OSPFAREANSSATRANSLATORSTATE_ENABLED  1
#define OSPF_MIB_OSPFAREANSSATRANSLATORSTATE_ELECTED  2
#define OSPF_MIB_OSPFAREANSSATRANSLATORSTATE_DISABLED 3

extern GNetSnmpEnum const ospf_mib_enums_ospfAreaNssaTranslatorState[];

#define OSPF_MIB_OSPFLSDBTYPE_ROUTERLINK       1
#define OSPF_MIB_OSPFLSDBTYPE_NETWORKLINK      2
#define OSPF_MIB_OSPFLSDBTYPE_SUMMARYLINK      3
#define OSPF_MIB_OSPFLSDBTYPE_ASSUMMARYLINK    4
#define OSPF_MIB_OSPFLSDBTYPE_ASEXTERNALLINK   5
#define OSPF_MIB_OSPFLSDBTYPE_MULTICASTLINK    6
#define OSPF_MIB_OSPFLSDBTYPE_NSSAEXTERNALLINK 7
#define OSPF_MIB_OSPFLSDBTYPE_AREAOPAQUELINK   10

extern GNetSnmpEnum const ospf_mib_enums_ospfLsdbType[];

#define OSPF_MIB_OSPFIFTYPE_BROADCAST         1
#define OSPF_MIB_OSPFIFTYPE_NBMA              2
#define OSPF_MIB_OSPFIFTYPE_POINTTOPOINT      3
#define OSPF_MIB_OSPFIFTYPE_POINTTOMULTIPOINT 5

extern GNetSnmpEnum const ospf_mib_enums_ospfIfType[];

#define OSPF_MIB_OSPFIFSTATE_DOWN                   1
#define OSPF_MIB_OSPFIFSTATE_LOOPBACK               2
#define OSPF_MIB_OSPFIFSTATE_WAITING                3
#define OSPF_MIB_OSPFIFSTATE_POINTTOPOINT           4
#define OSPF_MIB_OSPFIFSTATE_DESIGNATEDROUTER       5
#define OSPF_MIB_OSPFIFSTATE_BACKUPDESIGNATEDROUTER 6
#define OSPF_MIB_OSPFIFSTATE_OTHERDESIGNATEDROUTER  7

extern GNetSnmpEnum const ospf_mib_enums_ospfIfState[];

#define OSPF_MIB_OSPFIFMULTICASTFORWARDING_BLOCKED   1
#define OSPF_MIB_OSPFIFMULTICASTFORWARDING_MULTICAST 2
#define OSPF_MIB_OSPFIFMULTICASTFORWARDING_UNICAST   3

extern GNetSnmpEnum const ospf_mib_enums_ospfIfMulticastForwarding[];

#define OSPF_MIB_STATUS_ENABLED  1
#define OSPF_MIB_STATUS_DISABLED 2

extern GNetSnmpEnum const ospf_mib_enums_Status[];

#define OSPF_MIB_OSPFAUTHENTICATIONTYPE_NONE           0
#define OSPF_MIB_OSPFAUTHENTICATIONTYPE_SIMPLEPASSWORD 1
#define OSPF_MIB_OSPFAUTHENTICATIONTYPE_MD5            2

extern GNetSnmpEnum const ospf_mib_enums_OspfAuthenticationType[];


/*
 * C type definitions for OSPF-MIB::ospfGeneralGroup.
 */

#define OSPF_MIB_OSPFROUTERID                 (1 << 0) 
#define OSPF_MIB_OSPFADMINSTAT                (1 << 1) 
#define OSPF_MIB_OSPFVERSIONNUMBER            (1 << 2) 
#define OSPF_MIB_OSPFAREABDRRTRSTATUS         (1 << 3) 
#define OSPF_MIB_OSPFASBDRRTRSTATUS           (1 << 4) 
#define OSPF_MIB_OSPFEXTERNLSACOUNT           (1 << 5) 
#define OSPF_MIB_OSPFEXTERNLSACKSUMSUM        (1 << 6) 
#define OSPF_MIB_OSPFTOSSUPPORT               (1 << 7) 
#define OSPF_MIB_OSPFORIGINATENEWLSAS         (1 << 8) 
#define OSPF_MIB_OSPFRXNEWLSAS                (1 << 9) 
#define OSPF_MIB_OSPFEXTLSDBLIMIT             (1 << 10) 
#define OSPF_MIB_OSPFMULTICASTEXTENSIONS      (1 << 11) 
#define OSPF_MIB_OSPFEXITOVERFLOWINTERVAL     (1 << 12) 
#define OSPF_MIB_OSPFDEMANDEXTENSIONS         (1 << 13) 
#define OSPF_MIB_OSPFRFC1583COMPATIBILITY     (1 << 14) 
#define OSPF_MIB_OSPFOPAQUELSASUPPORT         (1 << 15) 
#define OSPF_MIB_OSPFREFERENCEBANDWIDTH       (1 << 16) 
#define OSPF_MIB_OSPFRESTARTSUPPORT           (1 << 17) 
#define OSPF_MIB_OSPFRESTARTINTERVAL          (1 << 18) 
#define OSPF_MIB_OSPFRESTARTSTRICTLSACHECKING (1 << 19) 
#define OSPF_MIB_OSPFRESTARTSTATUS            (1 << 20) 
#define OSPF_MIB_OSPFRESTARTAGE               (1 << 21) 
#define OSPF_MIB_OSPFRESTARTEXITREASON        (1 << 22) 
#define OSPF_MIB_OSPFASLSACOUNT               (1 << 23) 
#define OSPF_MIB_OSPFASLSACKSUMSUM            (1 << 24) 
#define OSPF_MIB_OSPFSTUBROUTERSUPPORT        (1 << 25) 
#define OSPF_MIB_OSPFSTUBROUTERADVERTISEMENT  (1 << 26) 
#define OSPF_MIB_OSPFDISCONTINUITYTIME        (1 << 27) 

typedef struct {
    guchar   *ospfRouterId;                     /* rw OSPF-MIB::RouterID */
#define OSPF_MIB_OSPFROUTERIDLENGTH 4
    gint32   *ospfAdminStat;                    /* rw OSPF-MIB::Status */
    gint32   *ospfVersionNumber;                /* ro */
    gint32   *ospfAreaBdrRtrStatus;             /* ro SNMPv2-TC::TruthValue */
    gint32   *ospfASBdrRtrStatus;               /* rw SNMPv2-TC::TruthValue */
    guint32  *ospfExternLsaCount;               /* ro SNMPv2-SMI::Gauge32 */
    gint32   *ospfExternLsaCksumSum;            /* ro Integer32 */
    gint32   *ospfTOSSupport;                   /* rw SNMPv2-TC::TruthValue */
    guint32  *ospfOriginateNewLsas;             /* ro SNMPv2-SMI::Counter32 */
    guint32  *ospfRxNewLsas;                    /* ro SNMPv2-SMI::Counter32 */
    gint32   *ospfExtLsdbLimit;                 /* rw */
    gint32   *ospfMulticastExtensions;          /* rw Integer32 */
    gint32   *ospfExitOverflowInterval;         /* rw OSPF-MIB::PositiveInteger */
    gint32   *ospfDemandExtensions;             /* rw SNMPv2-TC::TruthValue */
    gint32   *ospfRFC1583Compatibility;         /* rw SNMPv2-TC::TruthValue */
    gint32   *ospfOpaqueLsaSupport;             /* ro SNMPv2-TC::TruthValue */
    guint32  *ospfReferenceBandwidth;           /* rw Unsigned32 [kilobits per second] */
    gint32   *ospfRestartSupport;               /* rw */
    gint32   *ospfRestartInterval;              /* rw [seconds] */
    gint32   *ospfRestartStrictLsaChecking;     /* rw SNMPv2-TC::TruthValue */
    gint32   *ospfRestartStatus;                /* ro */
    guint32  *ospfRestartAge;                   /* ro Unsigned32 [seconds] */
    gint32   *ospfRestartExitReason;            /* ro */
    guint32  *ospfAsLsaCount;                   /* ro SNMPv2-SMI::Gauge32 */
    guint32  *ospfAsLsaCksumSum;                /* ro Unsigned32 */
    gint32   *ospfStubRouterSupport;            /* ro SNMPv2-TC::TruthValue */
    gint32   *ospfStubRouterAdvertisement;      /* rw */
    guint32  *ospfDiscontinuityTime;            /* ro SNMPv2-TC::TimeStamp */
} ospf_mib_ospfGeneralGroup_t;

extern ospf_mib_ospfGeneralGroup_t *
ospf_mib_new_ospfGeneralGroup(void);

extern void
ospf_mib_get_ospfGeneralGroup(GNetSnmp *s, ospf_mib_ospfGeneralGroup_t **ospfGeneralGroup, gint64 mask, GError **error);

extern void
ospf_mib_set_ospfGeneralGroup(GNetSnmp *s, ospf_mib_ospfGeneralGroup_t *ospfGeneralGroup, gint64 mask, GError **error);

extern void
ospf_mib_free_ospfGeneralGroup(ospf_mib_ospfGeneralGroup_t *ospfGeneralGroup);

/*
 * C type definitions for OSPF-MIB::ospfAreaEntry.
 */

#define OSPF_MIB_OSPFAREAID                              (1 << 0) 
#define OSPF_MIB_OSPFAUTHTYPE                            (1 << 1) 
#define OSPF_MIB_OSPFIMPORTASEXTERN                      (1 << 2) 
#define OSPF_MIB_OSPFSPFRUNS                             (1 << 3) 
#define OSPF_MIB_OSPFAREABDRRTRCOUNT                     (1 << 4) 
#define OSPF_MIB_OSPFASBDRRTRCOUNT                       (1 << 5) 
#define OSPF_MIB_OSPFAREALSACOUNT                        (1 << 6) 
#define OSPF_MIB_OSPFAREALSACKSUMSUM                     (1 << 7) 
#define OSPF_MIB_OSPFAREASUMMARY                         (1 << 8) 
#define OSPF_MIB_OSPFAREASTATUS                          (1 << 9) 
#define OSPF_MIB_OSPFAREANSSATRANSLATORROLE              (1 << 10) 
#define OSPF_MIB_OSPFAREANSSATRANSLATORSTATE             (1 << 11) 
#define OSPF_MIB_OSPFAREANSSATRANSLATORSTABILITYINTERVAL (1 << 12) 
#define OSPF_MIB_OSPFAREANSSATRANSLATOREVENTS            (1 << 13) 

typedef struct {
    guchar   ospfAreaId[4];                               /* ro OSPF-MIB::AreaID */
#define OSPF_MIB_OSPFAREAIDLENGTH 4
    gint32   *ospfAuthType;                                /* rw OSPF-MIB::OspfAuthenticationType */
    gint32   *ospfImportAsExtern;                          /* rw */
    guint32  *ospfSpfRuns;                                 /* ro SNMPv2-SMI::Counter32 */
    guint32  *ospfAreaBdrRtrCount;                         /* ro SNMPv2-SMI::Gauge32 */
    guint32  *ospfAsBdrRtrCount;                           /* ro SNMPv2-SMI::Gauge32 */
    guint32  *ospfAreaLsaCount;                            /* ro SNMPv2-SMI::Gauge32 */
    gint32   *ospfAreaLsaCksumSum;                         /* ro Integer32 */
    gint32   *ospfAreaSummary;                             /* rw */
    gint32   *ospfAreaStatus;                              /* rw SNMPv2-TC::RowStatus */
    gint32   *ospfAreaNssaTranslatorRole;                  /* rw */
    gint32   *ospfAreaNssaTranslatorState;                 /* ro */
    gint32   *ospfAreaNssaTranslatorStabilityInterval;     /* rw OSPF-MIB::PositiveInteger [seconds] */
    guint32  *ospfAreaNssaTranslatorEvents;                /* ro SNMPv2-SMI::Counter32 */
} ospf_mib_ospfAreaEntry_t;

extern void
ospf_mib_get_ospfAreaTable(GNetSnmp *s, ospf_mib_ospfAreaEntry_t ***ospfAreaEntry, gint64 mask, GError **error);

extern void
ospf_mib_free_ospfAreaTable(ospf_mib_ospfAreaEntry_t **ospfAreaEntry);

extern ospf_mib_ospfAreaEntry_t *
ospf_mib_new_ospfAreaEntry(void);

extern void
ospf_mib_get_ospfAreaEntry(GNetSnmp *s, ospf_mib_ospfAreaEntry_t **ospfAreaEntry, guchar *ospfAreaId, gint64 mask, GError **error);

extern void
ospf_mib_set_ospfAreaEntry(GNetSnmp *s, ospf_mib_ospfAreaEntry_t *ospfAreaEntry, gint64 mask, GError **error);

extern void
ospf_mib_free_ospfAreaEntry(ospf_mib_ospfAreaEntry_t *ospfAreaEntry);

/*
 * C type definitions for OSPF-MIB::ospfLsdbEntry.
 */

#define OSPF_MIB_OSPFLSDBAREAID        (1 << 0) 
#define OSPF_MIB_OSPFLSDBTYPE          (1 << 1) 
#define OSPF_MIB_OSPFLSDBLSID          (1 << 2) 
#define OSPF_MIB_OSPFLSDBROUTERID      (1 << 3) 
#define OSPF_MIB_OSPFLSDBSEQUENCE      (1 << 4) 
#define OSPF_MIB_OSPFLSDBAGE           (1 << 5) 
#define OSPF_MIB_OSPFLSDBCHECKSUM      (1 << 6) 
#define OSPF_MIB_OSPFLSDBADVERTISEMENT (1 << 7) 

typedef struct {
    guchar   ospfLsdbAreaId[4];         /* ro OSPF-MIB::AreaID */
#define OSPF_MIB_OSPFLSDBAREAIDLENGTH 4
    gint32   ospfLsdbType;               /* ro */
    guchar   ospfLsdbLsid[4];           /* ro SNMPv2-SMI::IpAddress */
#define OSPF_MIB_OSPFLSDBLSIDLENGTH 4
    guchar   ospfLsdbRouterId[4];       /* ro OSPF-MIB::RouterID */
#define OSPF_MIB_OSPFLSDBROUTERIDLENGTH 4
    gint32   *ospfLsdbSequence;          /* ro Integer32 */
    gint32   *ospfLsdbAge;               /* ro Integer32 [seconds] */
    gint32   *ospfLsdbChecksum;          /* ro Integer32 */
    guchar   *ospfLsdbAdvertisement;     /* ro */
#define OSPF_MIB_OSPFLSDBADVERTISEMENTMINLENGTH 1
#define OSPF_MIB_OSPFLSDBADVERTISEMENTMAXLENGTH 65535
    guint16  _ospfLsdbAdvertisementLength;
} ospf_mib_ospfLsdbEntry_t;

extern void
ospf_mib_get_ospfLsdbTable(GNetSnmp *s, ospf_mib_ospfLsdbEntry_t ***ospfLsdbEntry, gint64 mask, GError **error);

extern void
ospf_mib_free_ospfLsdbTable(ospf_mib_ospfLsdbEntry_t **ospfLsdbEntry);

extern ospf_mib_ospfLsdbEntry_t *
ospf_mib_new_ospfLsdbEntry(void);

extern void
ospf_mib_get_ospfLsdbEntry(GNetSnmp *s, ospf_mib_ospfLsdbEntry_t **ospfLsdbEntry, guchar *ospfLsdbAreaId, gint32 ospfLsdbType, guchar *ospfLsdbLsid, guchar *ospfLsdbRouterId, gint64 mask, GError **error);

extern void
ospf_mib_free_ospfLsdbEntry(ospf_mib_ospfLsdbEntry_t *ospfLsdbEntry);

/*
 * C type definitions for OSPF-MIB::ospfIfEntry.
 */

#define OSPF_MIB_OSPFIFIPADDRESS                (1 << 0) 
#define OSPF_MIB_OSPFADDRESSLESSIF              (1 << 1) 
#define OSPF_MIB_OSPFIFAREAID                   (1 << 2) 
#define OSPF_MIB_OSPFIFTYPE                     (1 << 3) 
#define OSPF_MIB_OSPFIFADMINSTAT                (1 << 4) 
#define OSPF_MIB_OSPFIFRTRPRIORITY              (1 << 5) 
#define OSPF_MIB_OSPFIFTRANSITDELAY             (1 << 6) 
#define OSPF_MIB_OSPFIFRETRANSINTERVAL          (1 << 7) 
#define OSPF_MIB_OSPFIFHELLOINTERVAL            (1 << 8) 
#define OSPF_MIB_OSPFIFRTRDEADINTERVAL          (1 << 9) 
#define OSPF_MIB_OSPFIFPOLLINTERVAL             (1 << 10) 
#define OSPF_MIB_OSPFIFSTATE                    (1 << 11) 
#define OSPF_MIB_OSPFIFDESIGNATEDROUTER         (1 << 12) 
#define OSPF_MIB_OSPFIFBACKUPDESIGNATEDROUTER   (1 << 13) 
#define OSPF_MIB_OSPFIFEVENTS                   (1 << 14) 
#define OSPF_MIB_OSPFIFAUTHKEY                  (1 << 15) 
#define OSPF_MIB_OSPFIFSTATUS                   (1 << 16) 
#define OSPF_MIB_OSPFIFMULTICASTFORWARDING      (1 << 17) 
#define OSPF_MIB_OSPFIFDEMAND                   (1 << 18) 
#define OSPF_MIB_OSPFIFAUTHTYPE                 (1 << 19) 
#define OSPF_MIB_OSPFIFLSACOUNT                 (1 << 20) 
#define OSPF_MIB_OSPFIFLSACKSUMSUM              (1 << 21) 
#define OSPF_MIB_OSPFIFDESIGNATEDROUTERID       (1 << 22) 
#define OSPF_MIB_OSPFIFBACKUPDESIGNATEDROUTERID (1 << 23) 

typedef struct {
    guchar   ospfIfIpAddress[4];                 /* ro SNMPv2-SMI::IpAddress */
#define OSPF_MIB_OSPFIFIPADDRESSLENGTH 4
    gint32   ospfAddressLessIf;                   /* ro IF-MIB::InterfaceIndexOrZero */
    guchar   *ospfIfAreaId;                       /* rw OSPF-MIB::AreaID */
#define OSPF_MIB_OSPFIFAREAIDLENGTH 4
    gint32   *ospfIfType;                         /* rw */
    gint32   *ospfIfAdminStat;                    /* rw OSPF-MIB::Status */
    gint32   *ospfIfRtrPriority;                  /* rw OSPF-MIB::DesignatedRouterPriority */
    gint32   *ospfIfTransitDelay;                 /* rw OSPF-MIB::UpToMaxAge [seconds] */
    gint32   *ospfIfRetransInterval;              /* rw OSPF-MIB::UpToMaxAge [seconds] */
    gint32   *ospfIfHelloInterval;                /* rw OSPF-MIB::HelloRange [seconds] */
    gint32   *ospfIfRtrDeadInterval;              /* rw OSPF-MIB::PositiveInteger [seconds] */
    gint32   *ospfIfPollInterval;                 /* rw OSPF-MIB::PositiveInteger [seconds] */
    gint32   *ospfIfState;                        /* ro */
    guchar   *ospfIfDesignatedRouter;             /* ro SNMPv2-SMI::IpAddress */
#define OSPF_MIB_OSPFIFDESIGNATEDROUTERLENGTH 4
    guchar   *ospfIfBackupDesignatedRouter;       /* ro SNMPv2-SMI::IpAddress */
#define OSPF_MIB_OSPFIFBACKUPDESIGNATEDROUTERLENGTH 4
    guint32  *ospfIfEvents;                       /* ro SNMPv2-SMI::Counter32 */
    guchar   *ospfIfAuthKey;                      /* rw */
#define OSPF_MIB_OSPFIFAUTHKEYMINLENGTH 0
#define OSPF_MIB_OSPFIFAUTHKEYMAXLENGTH 256
    guint16  _ospfIfAuthKeyLength;
    gint32   *ospfIfStatus;                       /* rw SNMPv2-TC::RowStatus */
    gint32   *ospfIfMulticastForwarding;          /* rw */
    gint32   *ospfIfDemand;                       /* rw SNMPv2-TC::TruthValue */
    gint32   *ospfIfAuthType;                     /* rw OSPF-MIB::OspfAuthenticationType */
    guint32  *ospfIfLsaCount;                     /* ro SNMPv2-SMI::Gauge32 */
    guint32  *ospfIfLsaCksumSum;                  /* ro Unsigned32 */
    guchar   *ospfIfDesignatedRouterId;           /* ro OSPF-MIB::RouterID */
#define OSPF_MIB_OSPFIFDESIGNATEDROUTERIDLENGTH 4
    guchar   *ospfIfBackupDesignatedRouterId;     /* ro OSPF-MIB::RouterID */
#define OSPF_MIB_OSPFIFBACKUPDESIGNATEDROUTERIDLENGTH 4
} ospf_mib_ospfIfEntry_t;

extern void
ospf_mib_get_ospfIfTable(GNetSnmp *s, ospf_mib_ospfIfEntry_t ***ospfIfEntry, gint64 mask, GError **error);

extern void
ospf_mib_free_ospfIfTable(ospf_mib_ospfIfEntry_t **ospfIfEntry);

extern ospf_mib_ospfIfEntry_t *
ospf_mib_new_ospfIfEntry(void);

extern void
ospf_mib_get_ospfIfEntry(GNetSnmp *s, ospf_mib_ospfIfEntry_t **ospfIfEntry, guchar *ospfIfIpAddress, gint32 ospfAddressLessIf, gint64 mask, GError **error);

extern void
ospf_mib_set_ospfIfEntry(GNetSnmp *s, ospf_mib_ospfIfEntry_t *ospfIfEntry, gint64 mask, GError **error);

extern void
ospf_mib_free_ospfIfEntry(ospf_mib_ospfIfEntry_t *ospfIfEntry);


G_END_DECLS

#endif /* _OSPF_MIB_H_ */
